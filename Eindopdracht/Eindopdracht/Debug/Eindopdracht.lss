
Eindopdracht.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800100  000018f0  00001984  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000018f0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  0080012e  0080012e  000019b2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000019b2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001a10  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00001a4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011d6  00000000  00000000  00001b44  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cd3  00000000  00000000  00002d1a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000906  00000000  00000000  000039ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002cc  00000000  00000000  000042f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000634  00000000  00000000  000045c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007dd  00000000  00000000  00004bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  000053d1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
       2:	00 00       	nop
       4:	67 c0       	rjmp	.+206    	; 0xd4 <__bad_interrupt>
       6:	00 00       	nop
       8:	65 c0       	rjmp	.+202    	; 0xd4 <__bad_interrupt>
       a:	00 00       	nop
       c:	63 c0       	rjmp	.+198    	; 0xd4 <__bad_interrupt>
       e:	00 00       	nop
      10:	61 c0       	rjmp	.+194    	; 0xd4 <__bad_interrupt>
      12:	00 00       	nop
      14:	5f c0       	rjmp	.+190    	; 0xd4 <__bad_interrupt>
      16:	00 00       	nop
      18:	5d c0       	rjmp	.+186    	; 0xd4 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	5b c0       	rjmp	.+182    	; 0xd4 <__bad_interrupt>
      1e:	00 00       	nop
      20:	59 c0       	rjmp	.+178    	; 0xd4 <__bad_interrupt>
      22:	00 00       	nop
      24:	57 c0       	rjmp	.+174    	; 0xd4 <__bad_interrupt>
      26:	00 00       	nop
      28:	55 c0       	rjmp	.+170    	; 0xd4 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	53 c0       	rjmp	.+166    	; 0xd4 <__bad_interrupt>
      2e:	00 00       	nop
      30:	ec c1       	rjmp	.+984    	; 0x40a <__vector_12>
      32:	00 00       	nop
      34:	6e c2       	rjmp	.+1244   	; 0x512 <__vector_13>
      36:	00 00       	nop
      38:	4d c0       	rjmp	.+154    	; 0xd4 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	4b c0       	rjmp	.+150    	; 0xd4 <__bad_interrupt>
      3e:	00 00       	nop
      40:	49 c0       	rjmp	.+146    	; 0xd4 <__bad_interrupt>
      42:	00 00       	nop
      44:	47 c0       	rjmp	.+142    	; 0xd4 <__bad_interrupt>
      46:	00 00       	nop
      48:	45 c0       	rjmp	.+138    	; 0xd4 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	43 c0       	rjmp	.+134    	; 0xd4 <__bad_interrupt>
      4e:	00 00       	nop
      50:	41 c0       	rjmp	.+130    	; 0xd4 <__bad_interrupt>
      52:	00 00       	nop
      54:	3f c0       	rjmp	.+126    	; 0xd4 <__bad_interrupt>
      56:	00 00       	nop
      58:	3d c0       	rjmp	.+122    	; 0xd4 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	3b c0       	rjmp	.+118    	; 0xd4 <__bad_interrupt>
      5e:	00 00       	nop
      60:	39 c0       	rjmp	.+114    	; 0xd4 <__bad_interrupt>
      62:	00 00       	nop
      64:	37 c0       	rjmp	.+110    	; 0xd4 <__bad_interrupt>
      66:	00 00       	nop
      68:	35 c0       	rjmp	.+106    	; 0xd4 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	33 c0       	rjmp	.+102    	; 0xd4 <__bad_interrupt>
      6e:	00 00       	nop
      70:	31 c0       	rjmp	.+98     	; 0xd4 <__bad_interrupt>
      72:	00 00       	nop
      74:	2f c0       	rjmp	.+94     	; 0xd4 <__bad_interrupt>
      76:	00 00       	nop
      78:	2d c0       	rjmp	.+90     	; 0xd4 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	2b c0       	rjmp	.+86     	; 0xd4 <__bad_interrupt>
      7e:	00 00       	nop
      80:	29 c0       	rjmp	.+82     	; 0xd4 <__bad_interrupt>
      82:	00 00       	nop
      84:	27 c0       	rjmp	.+78     	; 0xd4 <__bad_interrupt>
      86:	00 00       	nop
      88:	25 c0       	rjmp	.+74     	; 0xd4 <__bad_interrupt>
	...

0000008c <__trampolines_end>:
      8c:	63 64       	ori	r22, 0x43	; 67
      8e:	69 6e       	ori	r22, 0xE9	; 233
      90:	6f 70       	andi	r22, 0x0F	; 15
      92:	73 75       	andi	r23, 0x53	; 83
      94:	78 58       	subi	r23, 0x88	; 136
      96:	5b 00       	.word	0x005b	; ????

00000098 <__ctors_end>:
      98:	11 24       	eor	r1, r1
      9a:	1f be       	out	0x3f, r1	; 63
      9c:	cf ef       	ldi	r28, 0xFF	; 255
      9e:	d0 e1       	ldi	r29, 0x10	; 16
      a0:	de bf       	out	0x3e, r29	; 62
      a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
      a4:	11 e0       	ldi	r17, 0x01	; 1
      a6:	a0 e0       	ldi	r26, 0x00	; 0
      a8:	b1 e0       	ldi	r27, 0x01	; 1
      aa:	e0 ef       	ldi	r30, 0xF0	; 240
      ac:	f8 e1       	ldi	r31, 0x18	; 24
      ae:	00 e0       	ldi	r16, 0x00	; 0
      b0:	0b bf       	out	0x3b, r16	; 59
      b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
      b4:	07 90       	elpm	r0, Z+
      b6:	0d 92       	st	X+, r0
      b8:	ae 32       	cpi	r26, 0x2E	; 46
      ba:	b1 07       	cpc	r27, r17
      bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
      be:	21 e0       	ldi	r18, 0x01	; 1
      c0:	ae e2       	ldi	r26, 0x2E	; 46
      c2:	b1 e0       	ldi	r27, 0x01	; 1
      c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
      c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
      c8:	a6 33       	cpi	r26, 0x36	; 54
      ca:	b2 07       	cpc	r27, r18
      cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
      ce:	ce d0       	rcall	.+412    	; 0x26c <main>
      d0:	0c 94 76 0c 	jmp	0x18ec	; 0x18ec <_exit>

000000d4 <__bad_interrupt>:
      d4:	95 cf       	rjmp	.-214    	; 0x0 <__vectors>

000000d6 <wait>:
	confirmCommand();
}

static void wait(int ms)
{
	for (int i = 0; i < ms; i++)
      d6:	20 e0       	ldi	r18, 0x00	; 0
      d8:	30 e0       	ldi	r19, 0x00	; 0
      da:	08 c0       	rjmp	.+16     	; 0xec <wait+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      dc:	ef ec       	ldi	r30, 0xCF	; 207
      de:	f7 e0       	ldi	r31, 0x07	; 7
      e0:	31 97       	sbiw	r30, 0x01	; 1
      e2:	f1 f7       	brne	.-4      	; 0xe0 <wait+0xa>
      e4:	00 c0       	rjmp	.+0      	; 0xe6 <wait+0x10>
      e6:	00 00       	nop
      e8:	2f 5f       	subi	r18, 0xFF	; 255
      ea:	3f 4f       	sbci	r19, 0xFF	; 255
      ec:	28 17       	cp	r18, r24
      ee:	39 07       	cpc	r19, r25
      f0:	ac f3       	brlt	.-22     	; 0xdc <wait+0x6>
	{
		_delay_ms(1);
	}
      f2:	08 95       	ret

000000f4 <confirmCommand>:
	write_command(0x01); //Clear display
}

static void confirmCommand()
{
	PORTC |= (1<<LCD_E);
      f4:	85 b3       	in	r24, 0x15	; 21
      f6:	88 60       	ori	r24, 0x08	; 8
      f8:	85 bb       	out	0x15, r24	; 21
	wait(1);
      fa:	81 e0       	ldi	r24, 0x01	; 1
      fc:	90 e0       	ldi	r25, 0x00	; 0
      fe:	eb df       	rcall	.-42     	; 0xd6 <wait>
	PORTC &= ~(1<<LCD_E);
     100:	85 b3       	in	r24, 0x15	; 21
     102:	87 7f       	andi	r24, 0xF7	; 247
     104:	85 bb       	out	0x15, r24	; 21
	wait(1);
     106:	81 e0       	ldi	r24, 0x01	; 1
     108:	90 e0       	ldi	r25, 0x00	; 0
     10a:	e5 cf       	rjmp	.-54     	; 0xd6 <wait>
     10c:	08 95       	ret

0000010e <write_command>:
{
	write_command(0x80 + position);
}

static void write_command(unsigned char byte)
{
     10e:	cf 93       	push	r28
     110:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
     112:	85 bb       	out	0x15, r24	; 21
	PORTC &= ~(1<<LCD_RS);
     114:	85 b3       	in	r24, 0x15	; 21
     116:	8b 7f       	andi	r24, 0xFB	; 251
     118:	85 bb       	out	0x15, r24	; 21
	confirmCommand();
     11a:	ec df       	rcall	.-40     	; 0xf4 <confirmCommand>

	// Second nibble
	PORTC = (byte<<4);
     11c:	c2 95       	swap	r28
     11e:	c0 7f       	andi	r28, 0xF0	; 240
     120:	c5 bb       	out	0x15, r28	; 21
	PORTC &= ~(1<<LCD_RS);
     122:	85 b3       	in	r24, 0x15	; 21
     124:	8b 7f       	andi	r24, 0xFB	; 251
	confirmCommand();
     126:	85 bb       	out	0x15, r24	; 21
     128:	e5 df       	rcall	.-54     	; 0xf4 <confirmCommand>
}
     12a:	cf 91       	pop	r28
     12c:	08 95       	ret

0000012e <write_data>:

static void write_data(unsigned char byte) {
     12e:	cf 93       	push	r28
     130:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
     132:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1<<LCD_RS);
     134:	85 b3       	in	r24, 0x15	; 21
     136:	84 60       	ori	r24, 0x04	; 4
     138:	85 bb       	out	0x15, r24	; 21
	confirmCommand();
     13a:	dc df       	rcall	.-72     	; 0xf4 <confirmCommand>

	// Second nibble
	PORTC = (byte<<4);
     13c:	c2 95       	swap	r28
     13e:	c0 7f       	andi	r28, 0xF0	; 240
     140:	c5 bb       	out	0x15, r28	; 21
	PORTC |= (1<<LCD_RS);
     142:	85 b3       	in	r24, 0x15	; 21
     144:	84 60       	ori	r24, 0x04	; 4
	confirmCommand();
     146:	85 bb       	out	0x15, r24	; 21
     148:	d5 df       	rcall	.-86     	; 0xf4 <confirmCommand>
}
     14a:	cf 91       	pop	r28
     14c:	08 95       	ret

0000014e <clearDisplay>:
	write_command(0x06); //Entry mode set
}

void clearDisplay()
{
	write_command(0x01); //Clear display
     14e:	81 e0       	ldi	r24, 0x01	; 1
     150:	de cf       	rjmp	.-68     	; 0x10e <write_command>
     152:	08 95       	ret

00000154 <init>:
static void write_command(unsigned char);
static void write_data(unsigned char);
static void wait(int);

void init()
{
     154:	cf 93       	push	r28
	DDRC = 0xFF;
     156:	8f ef       	ldi	r24, 0xFF	; 255
     158:	84 bb       	out	0x14, r24	; 20
	PORTC = 0x00;
     15a:	15 ba       	out	0x15, r1	; 21

	PORTC = 0x28;	// function set
     15c:	c8 e2       	ldi	r28, 0x28	; 40
     15e:	c5 bb       	out	0x15, r28	; 21
	confirmCommand();
     160:	c9 df       	rcall	.-110    	; 0xf4 <confirmCommand>

	PORTC = 0x28;   // function set
	confirmCommand();
     162:	c5 bb       	out	0x15, r28	; 21
     164:	c7 df       	rcall	.-114    	; 0xf4 <confirmCommand>
	PORTC = 0x80;
     166:	80 e8       	ldi	r24, 0x80	; 128
	confirmCommand();
     168:	85 bb       	out	0x15, r24	; 21

	clearDisplay();
     16a:	c4 df       	rcall	.-120    	; 0xf4 <confirmCommand>

	write_command(0x0F); //Display on/off control
     16c:	f0 df       	rcall	.-32     	; 0x14e <clearDisplay>
     16e:	8f e0       	ldi	r24, 0x0F	; 15
     170:	ce df       	rcall	.-100    	; 0x10e <write_command>
	
	write_command(0x06); //Entry mode set
     172:	86 e0       	ldi	r24, 0x06	; 6
     174:	cc df       	rcall	.-104    	; 0x10e <write_command>
     176:	cf 91       	pop	r28
}
     178:	08 95       	ret

0000017a <display_text>:
     17a:	cf 93       	push	r28
	PORTC &= ~(1<<LCD_E);
	wait(1);
}

void display_text(char *str)
{	
     17c:	df 93       	push	r29
     17e:	ec 01       	movw	r28, r24
	for(;*str; str++)
     180:	02 c0       	rjmp	.+4      	; 0x186 <display_text+0xc>
	{
		write_data(*str);
     182:	d5 df       	rcall	.-86     	; 0x12e <write_data>
	wait(1);
}

void display_text(char *str)
{	
	for(;*str; str++)
     184:	21 96       	adiw	r28, 0x01	; 1
     186:	88 81       	ld	r24, Y
     188:	81 11       	cpse	r24, r1
     18a:	fb cf       	rjmp	.-10     	; 0x182 <display_text+0x8>
	{
		write_data(*str);
	}
}
     18c:	df 91       	pop	r29
     18e:	cf 91       	pop	r28
     190:	08 95       	ret

00000192 <USART_Init>:
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC)) )
	;
	/* Get and return received data from buffer */
	return UDR0;
}
     192:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     196:	89 b9       	out	0x09, r24	; 9
     198:	88 e1       	ldi	r24, 0x18	; 24
     19a:	8a b9       	out	0x0a, r24	; 10
     19c:	8e e0       	ldi	r24, 0x0E	; 14
     19e:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
     1a2:	08 95       	ret

000001a4 <USART_Transmit>:
     1a4:	5d 9b       	sbis	0x0b, 5	; 11
     1a6:	fe cf       	rjmp	.-4      	; 0x1a4 <USART_Transmit>
     1a8:	8c b9       	out	0x0c, r24	; 12
     1aa:	08 95       	ret

000001ac <USART_Receive_String>:

void USART_Receive_String(char* data)
{
     1ac:	ac 01       	movw	r20, r24
	int i = 0;
	
	char tempData = 'a';
     1ae:	91 e6       	ldi	r25, 0x61	; 97
	return UDR0;
}

void USART_Receive_String(char* data)
{
	int i = 0;
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	30 e0       	ldi	r19, 0x00	; 0
	
	char tempData = 'a';
	
	//char *pChar = &tempData;
	
	while(tempData != ':')
     1b4:	09 c0       	rjmp	.+18     	; 0x1c8 <USART_Receive_String+0x1c>
	{
		/* Wait for data to be received */
		while ( !(UCSR0A & (1<<RXC)) );
     1b6:	5f 9b       	sbis	0x0b, 7	; 11
     1b8:	fe cf       	rjmp	.-4      	; 0x1b6 <USART_Receive_String+0xa>
		
		tempData = UDR0;
     1ba:	9c b1       	in	r25, 0x0c	; 12
		//display_text(pChar);
		
		data[i] = tempData;
     1bc:	fa 01       	movw	r30, r20
     1be:	e2 0f       	add	r30, r18
     1c0:	f3 1f       	adc	r31, r19
     1c2:	90 83       	st	Z, r25
		i++;
     1c4:	2f 5f       	subi	r18, 0xFF	; 255
     1c6:	3f 4f       	sbci	r19, 0xFF	; 255
	
	char tempData = 'a';
	
	//char *pChar = &tempData;
	
	while(tempData != ':')
     1c8:	9a 33       	cpi	r25, 0x3A	; 58
     1ca:	a9 f7       	brne	.-22     	; 0x1b6 <USART_Receive_String+0xa>
		//display_text(pChar);
		
		data[i] = tempData;
		i++;
	}
	data[i] = '\0';
     1cc:	fa 01       	movw	r30, r20
     1ce:	e2 0f       	add	r30, r18
     1d0:	f3 1f       	adc	r31, r19
     1d2:	10 82       	st	Z, r1
     1d4:	08 95       	ret

000001d6 <USART_onlyNumbers>:
}

int USART_onlyNumbers(char* data)
{
     1d6:	cf 93       	push	r28
     1d8:	df 93       	push	r29
     1da:	cd b7       	in	r28, 0x3d	; 61
     1dc:	de b7       	in	r29, 0x3e	; 62
     1de:	27 97       	sbiw	r28, 0x07	; 7
     1e0:	0f b6       	in	r0, 0x3f	; 63
     1e2:	f8 94       	cli
     1e4:	de bf       	out	0x3e, r29	; 62
     1e6:	0f be       	out	0x3f, r0	; 63
     1e8:	cd bf       	out	0x3d, r28	; 61
     1ea:	ac 01       	movw	r20, r24
	char subArray[5];
		for (int i = 0; i < 4; i++)
     1ec:	20 e0       	ldi	r18, 0x00	; 0
     1ee:	30 e0       	ldi	r19, 0x00	; 0
     1f0:	0d c0       	rjmp	.+26     	; 0x20c <USART_onlyNumbers+0x36>
		{
			subArray[i] = data[i+5];
     1f2:	fa 01       	movw	r30, r20
     1f4:	e2 0f       	add	r30, r18
     1f6:	f3 1f       	adc	r31, r19
     1f8:	95 81       	ldd	r25, Z+5	; 0x05
     1fa:	e1 e0       	ldi	r30, 0x01	; 1
     1fc:	f0 e0       	ldi	r31, 0x00	; 0
     1fe:	ec 0f       	add	r30, r28
     200:	fd 1f       	adc	r31, r29
     202:	e2 0f       	add	r30, r18
     204:	f3 1f       	adc	r31, r19
     206:	90 83       	st	Z, r25
}

int USART_onlyNumbers(char* data)
{
	char subArray[5];
		for (int i = 0; i < 4; i++)
     208:	2f 5f       	subi	r18, 0xFF	; 255
     20a:	3f 4f       	sbci	r19, 0xFF	; 255
     20c:	24 30       	cpi	r18, 0x04	; 4
     20e:	31 05       	cpc	r19, r1
     210:	84 f3       	brlt	.-32     	; 0x1f2 <USART_onlyNumbers+0x1c>
		{
			subArray[i] = data[i+5];
		}
		
		int distance;
		sscanf(subArray, "%d", &distance);
     212:	ce 01       	movw	r24, r28
     214:	06 96       	adiw	r24, 0x06	; 6
     216:	9f 93       	push	r25
     218:	8f 93       	push	r24
     21a:	88 e1       	ldi	r24, 0x18	; 24
     21c:	91 e0       	ldi	r25, 0x01	; 1
     21e:	9f 93       	push	r25
     220:	8f 93       	push	r24
     222:	ce 01       	movw	r24, r28
     224:	01 96       	adiw	r24, 0x01	; 1
     226:	9f 93       	push	r25
     228:	8f 93       	push	r24
     22a:	5c d5       	rcall	.+2744   	; 0xce4 <sscanf>

	return distance;
     22c:	0f 90       	pop	r0
     22e:	0f 90       	pop	r0
     230:	0f 90       	pop	r0
     232:	0f 90       	pop	r0
     234:	0f 90       	pop	r0
     236:	0f 90       	pop	r0
}
     238:	8e 81       	ldd	r24, Y+6	; 0x06
     23a:	9f 81       	ldd	r25, Y+7	; 0x07
     23c:	27 96       	adiw	r28, 0x07	; 7
     23e:	0f b6       	in	r0, 0x3f	; 63
     240:	f8 94       	cli
     242:	de bf       	out	0x3e, r29	; 62
     244:	0f be       	out	0x3f, r0	; 63
     246:	cd bf       	out	0x3d, r28	; 61
     248:	df 91       	pop	r29
     24a:	cf 91       	pop	r28
     24c:	08 95       	ret

0000024e <wait>:
	return 1;
}

void wait(int ms)
{
	for (int tms=0; tms<ms; tms++)
     24e:	20 e0       	ldi	r18, 0x00	; 0
     250:	30 e0       	ldi	r19, 0x00	; 0
     252:	08 c0       	rjmp	.+16     	; 0x264 <wait+0x16>
     254:	ef ec       	ldi	r30, 0xCF	; 207
     256:	f7 e0       	ldi	r31, 0x07	; 7
     258:	31 97       	sbiw	r30, 0x01	; 1
     25a:	f1 f7       	brne	.-4      	; 0x258 <wait+0xa>
     25c:	00 c0       	rjmp	.+0      	; 0x25e <wait+0x10>
     25e:	00 00       	nop
     260:	2f 5f       	subi	r18, 0xFF	; 255
     262:	3f 4f       	sbci	r19, 0xFF	; 255
     264:	28 17       	cp	r18, r24
     266:	39 07       	cpc	r19, r25
     268:	ac f3       	brlt	.-22     	; 0x254 <wait+0x6>
		_delay_ms(1);
     26a:	08 95       	ret

0000026c <main>:
// Extern variable to the servo2 angle (angle between 180 and 30 (safe angle))
int servo2_targetValue;


int main( void )
{
     26c:	cf 93       	push	r28
     26e:	df 93       	push	r29
     270:	00 d0       	rcall	.+0      	; 0x272 <main+0x6>
     272:	00 d0       	rcall	.+0      	; 0x274 <main+0x8>
     274:	00 d0       	rcall	.+0      	; 0x276 <main+0xa>
     276:	cd b7       	in	r28, 0x3d	; 61
     278:	de b7       	in	r29, 0x3e	; 62
	DDRB = 0xFF; // Set whole port B as output
     27a:	8f ef       	ldi	r24, 0xFF	; 255
     27c:	87 bb       	out	0x17, r24	; 23
	
	init(); // Lcd init
     27e:	6a df       	rcall	.-300    	; 0x154 <init>
	
	servo_init();
     280:	71 d0       	rcall	.+226    	; 0x364 <servo_init>
     282:	88 ee       	ldi	r24, 0xE8	; 232
	wait(1000); // Wait for the init of the servo's
     284:	93 e0       	ldi	r25, 0x03	; 3
     286:	e3 df       	rcall	.-58     	; 0x24e <wait>
     288:	83 e3       	ldi	r24, 0x33	; 51
	
	USART_Init(MYUBRR);
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	82 df       	rcall	.-252    	; 0x192 <USART_Init>
     28e:	84 e1       	ldi	r24, 0x14	; 20
	char *data = (char*) malloc(sizeof(char) * 20);
     290:	90 e0       	ldi	r25, 0x00	; 0
     292:	d9 d3       	rcall	.+1970   	; 0xa46 <malloc>
     294:	e8 2e       	mov	r14, r24
     296:	f9 2e       	mov	r15, r25
     298:	82 e5       	ldi	r24, 0x52	; 82
	int distance = 0;
	
	while (1)
	{	
		USART_Transmit(SINGLE_RANGE_COMMAND_A);	// Send measure command to lrf
     29a:	84 df       	rcall	.-248    	; 0x1a4 <USART_Transmit>
     29c:	8e 2d       	mov	r24, r14
		USART_Receive_String(data);	// Receive string form lrf
     29e:	9f 2d       	mov	r25, r15
     2a0:	85 df       	rcall	.-246    	; 0x1ac <USART_Receive_String>
     2a2:	8e 2d       	mov	r24, r14
     2a4:	9f 2d       	mov	r25, r15
		distance = USART_onlyNumbers(data);	// Get the distance from the string
     2a6:	97 df       	rcall	.-210    	; 0x1d6 <USART_onlyNumbers>
     2a8:	8c 01       	movw	r16, r24
     2aa:	1f 93       	push	r17
     2ac:	8f 93       	push	r24
     2ae:	8e e0       	ldi	r24, 0x0E	; 14
		
		sprintf(data, "Distance: %d", distance);
     2b0:	91 e0       	ldi	r25, 0x01	; 1
     2b2:	9f 93       	push	r25
     2b4:	8f 93       	push	r24
     2b6:	ff 92       	push	r15
     2b8:	ef 92       	push	r14
     2ba:	e6 d4       	rcall	.+2508   	; 0xc88 <sprintf>
     2bc:	48 df       	rcall	.-368    	; 0x14e <clearDisplay>
		clearDisplay();
     2be:	8e 2d       	mov	r24, r14
     2c0:	9f 2d       	mov	r25, r15
		display_text(data);
     2c2:	5b df       	rcall	.-330    	; 0x17a <display_text>
     2c4:	86 e0       	ldi	r24, 0x06	; 6
     2c6:	eb e1       	ldi	r30, 0x1B	; 27
     2c8:	f1 e0       	ldi	r31, 0x01	; 1
		
		int minDifference = 1000;
		struct CAMERA_SETTING settingToUse = cameraSettings[0];
     2ca:	de 01       	movw	r26, r28
     2cc:	11 96       	adiw	r26, 0x01	; 1
     2ce:	01 90       	ld	r0, Z+
     2d0:	0d 92       	st	X+, r0
     2d2:	8a 95       	dec	r24
     2d4:	e1 f7       	brne	.-8      	; 0x2ce <main+0x62>
     2d6:	0f 90       	pop	r0
     2d8:	0f 90       	pop	r0
     2da:	0f 90       	pop	r0
		for (int i = 0; i < totalCameraSegments; i++)
     2dc:	0f 90       	pop	r0
     2de:	0f 90       	pop	r0
     2e0:	0f 90       	pop	r0
     2e2:	80 e0       	ldi	r24, 0x00	; 0
     2e4:	90 e0       	ldi	r25, 0x00	; 0
     2e6:	48 ee       	ldi	r20, 0xE8	; 232
     2e8:	53 e0       	ldi	r21, 0x03	; 3
     2ea:	29 c0       	rjmp	.+82     	; 0x33e <main+0xd2>
		
		sprintf(data, "Distance: %d", distance);
		clearDisplay();
		display_text(data);
		
		int minDifference = 1000;
     2ec:	fc 01       	movw	r30, r24
     2ee:	ee 0f       	add	r30, r30
		struct CAMERA_SETTING settingToUse = cameraSettings[0];
		for (int i = 0; i < totalCameraSegments; i++)
     2f0:	ff 1f       	adc	r31, r31
		{
			int difference = abs(distance - cameraSettings[i].distance);
     2f2:	e8 0f       	add	r30, r24
     2f4:	f9 1f       	adc	r31, r25
     2f6:	ee 0f       	add	r30, r30
     2f8:	ff 1f       	adc	r31, r31
     2fa:	e5 5e       	subi	r30, 0xE5	; 229
     2fc:	fe 4f       	sbci	r31, 0xFE	; 254
     2fe:	20 81       	ld	r18, Z
     300:	31 81       	ldd	r19, Z+1	; 0x01
     302:	b8 01       	movw	r22, r16
     304:	62 1b       	sub	r22, r18
     306:	73 0b       	sbc	r23, r19
     308:	9b 01       	movw	r18, r22
     30a:	22 f4       	brpl	.+8      	; 0x314 <main+0xa8>
     30c:	22 27       	eor	r18, r18
     30e:	33 27       	eor	r19, r19
     310:	26 1b       	sub	r18, r22
     312:	37 0b       	sbc	r19, r23
     314:	24 17       	cp	r18, r20
     316:	35 07       	cpc	r19, r21
     318:	8c f4       	brge	.+34     	; 0x33c <main+0xd0>
			
			if (difference < minDifference)
     31a:	fc 01       	movw	r30, r24
     31c:	ee 0f       	add	r30, r30
     31e:	ff 1f       	adc	r31, r31
			{
				minDifference = difference;
				settingToUse = cameraSettings[i];
     320:	e8 0f       	add	r30, r24
     322:	f9 1f       	adc	r31, r25
     324:	ee 0f       	add	r30, r30
     326:	ff 1f       	adc	r31, r31
     328:	e5 5e       	subi	r30, 0xE5	; 229
     32a:	fe 4f       	sbci	r31, 0xFE	; 254
     32c:	46 e0       	ldi	r20, 0x06	; 6
     32e:	de 01       	movw	r26, r28
     330:	11 96       	adiw	r26, 0x01	; 1
     332:	01 90       	ld	r0, Z+
     334:	0d 92       	st	X+, r0
     336:	4a 95       	dec	r20
     338:	e1 f7       	brne	.-8      	; 0x332 <main+0xc6>
     33a:	a9 01       	movw	r20, r18
     33c:	01 96       	adiw	r24, 0x01	; 1
     33e:	83 30       	cpi	r24, 0x03	; 3
		{
			int difference = abs(distance - cameraSettings[i].distance);
			
			if (difference < minDifference)
			{
				minDifference = difference;
     340:	91 05       	cpc	r25, r1
		clearDisplay();
		display_text(data);
		
		int minDifference = 1000;
		struct CAMERA_SETTING settingToUse = cameraSettings[0];
		for (int i = 0; i < totalCameraSegments; i++)
     342:	a4 f2       	brlt	.-88     	; 0x2ec <main+0x80>
     344:	8b 81       	ldd	r24, Y+3	; 0x03
     346:	9c 81       	ldd	r25, Y+4	; 0x04
     348:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <__data_end+0x1>
				minDifference = difference;
				settingToUse = cameraSettings[i];
			}
		}
		
		servo1_targetValue = settingToUse.focus;
     34c:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__data_end>
     350:	8d 81       	ldd	r24, Y+5	; 0x05
     352:	9e 81       	ldd	r25, Y+6	; 0x06
		servo2_targetValue = settingToUse.zoom;
     354:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <servo2_targetValue+0x1>
     358:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <servo2_targetValue>
     35c:	88 eb       	ldi	r24, 0xB8	; 184
     35e:	9b e0       	ldi	r25, 0x0B	; 11
		
		wait(3000);	
     360:	76 df       	rcall	.-276    	; 0x24e <wait>
     362:	9a cf       	rjmp	.-204    	; 0x298 <main+0x2c>

00000364 <servo_init>:
	OCR1B = currentValue;
}

void servo_init()
{
	OCR1A = startValue1;		// Sets the compare value of timer 1, (this is linked to port B5)
     364:	8a ef       	ldi	r24, 0xFA	; 250
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	9b bd       	out	0x2b, r25	; 43
     36a:	8a bd       	out	0x2a, r24	; 42
	OCR1B = startValue2;		// Sets the compare value of timer 1, (this is linked to port B6)
     36c:	84 e1       	ldi	r24, 0x14	; 20
     36e:	95 e0       	ldi	r25, 0x05	; 5
     370:	99 bd       	out	0x29, r25	; 41
     372:	88 bd       	out	0x28, r24	; 40
	
	servo1_targetValue = 0;
     374:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <__data_end+0x1>
     378:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <__data_end>
	servo2_targetValue = 180;
     37c:	84 eb       	ldi	r24, 0xB4	; 180
     37e:	90 e0       	ldi	r25, 0x00	; 0
     380:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <servo2_targetValue+0x1>
     384:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <servo2_targetValue>
	
	TIMSK |= 1<<(3);			// Turn on compare mode for channel A
     388:	87 b7       	in	r24, 0x37	; 55
     38a:	88 60       	ori	r24, 0x08	; 8
     38c:	87 bf       	out	0x37, r24	; 55
	TIMSK |= 1<<(4);			// Turn on compare mode for channel B
     38e:	87 b7       	in	r24, 0x37	; 55
     390:	80 61       	ori	r24, 0x10	; 16
     392:	87 bf       	out	0x37, r24	; 55
	sei();						// Turn on interrupt system
     394:	78 94       	sei
	
	ICR1 = 10000;				// Sets the upper limit to timer 1
     396:	80 e1       	ldi	r24, 0x10	; 16
     398:	97 e2       	ldi	r25, 0x27	; 39
     39a:	97 bd       	out	0x27, r25	; 39
     39c:	86 bd       	out	0x26, r24	; 38
	TCCR1A = 0b10100010;		// Set OC1A and OC1B as output
     39e:	82 ea       	ldi	r24, 0xA2	; 162
     3a0:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = 0b00010010;		// fast PWM 8 bit, prescaler=8, RUN
     3a2:	82 e1       	ldi	r24, 0x12	; 18
     3a4:	8e bd       	out	0x2e, r24	; 46
     3a6:	08 95       	ret

000003a8 <map>:
}

double map(double value, int newMin, int newMax)
{
     3a8:	cf 92       	push	r12
     3aa:	df 92       	push	r13
     3ac:	ef 92       	push	r14
     3ae:	ff 92       	push	r15
     3b0:	0f 93       	push	r16
     3b2:	1f 93       	push	r17
     3b4:	cf 93       	push	r28
     3b6:	df 93       	push	r29
     3b8:	8a 01       	movw	r16, r20
     3ba:	e9 01       	movw	r28, r18
	// Maps the value between two numbers: https://stackoverflow.com/questions/345187/math-mapping-numbers
	return (value - 0) / (180 - 0) * (newMax - newMin) + newMin;
     3bc:	20 e0       	ldi	r18, 0x00	; 0
     3be:	30 e0       	ldi	r19, 0x00	; 0
     3c0:	44 e3       	ldi	r20, 0x34	; 52
     3c2:	53 e4       	ldi	r21, 0x43	; 67
     3c4:	93 d1       	rcall	.+806    	; 0x6ec <__divsf3>
     3c6:	6b 01       	movw	r12, r22
     3c8:	7c 01       	movw	r14, r24
     3ca:	be 01       	movw	r22, r28
     3cc:	60 1b       	sub	r22, r16
     3ce:	71 0b       	sbc	r23, r17
     3d0:	07 2e       	mov	r0, r23
     3d2:	00 0c       	add	r0, r0
     3d4:	88 0b       	sbc	r24, r24
     3d6:	99 0b       	sbc	r25, r25
     3d8:	1f d2       	rcall	.+1086   	; 0x818 <__floatsisf>
     3da:	a7 01       	movw	r20, r14
     3dc:	96 01       	movw	r18, r12
     3de:	d0 d2       	rcall	.+1440   	; 0x980 <__mulsf3>
     3e0:	6b 01       	movw	r12, r22
     3e2:	7c 01       	movw	r14, r24
     3e4:	b8 01       	movw	r22, r16
     3e6:	11 0f       	add	r17, r17
     3e8:	88 0b       	sbc	r24, r24
     3ea:	99 0b       	sbc	r25, r25
     3ec:	15 d2       	rcall	.+1066   	; 0x818 <__floatsisf>
     3ee:	9b 01       	movw	r18, r22
     3f0:	ac 01       	movw	r20, r24
     3f2:	c7 01       	movw	r24, r14
     3f4:	b6 01       	movw	r22, r12
     3f6:	12 d1       	rcall	.+548    	; 0x61c <__addsf3>
     3f8:	df 91       	pop	r29
     3fa:	cf 91       	pop	r28
     3fc:	1f 91       	pop	r17
     3fe:	0f 91       	pop	r16
     400:	ff 90       	pop	r15
     402:	ef 90       	pop	r14
     404:	df 90       	pop	r13
     406:	cf 90       	pop	r12
     408:	08 95       	ret

0000040a <__vector_12>:
int servo1_targetValue;
int servo2_targetValue;


ISR(TIMER1_COMPA_vect)
{
     40a:	1f 92       	push	r1
     40c:	0f 92       	push	r0
     40e:	0f b6       	in	r0, 0x3f	; 63
     410:	0f 92       	push	r0
     412:	11 24       	eor	r1, r1
     414:	0b b6       	in	r0, 0x3b	; 59
     416:	0f 92       	push	r0
     418:	8f 92       	push	r8
     41a:	9f 92       	push	r9
     41c:	af 92       	push	r10
     41e:	bf 92       	push	r11
     420:	cf 92       	push	r12
     422:	df 92       	push	r13
     424:	ef 92       	push	r14
     426:	ff 92       	push	r15
     428:	2f 93       	push	r18
     42a:	3f 93       	push	r19
     42c:	4f 93       	push	r20
     42e:	5f 93       	push	r21
     430:	6f 93       	push	r22
     432:	7f 93       	push	r23
     434:	8f 93       	push	r24
     436:	9f 93       	push	r25
     438:	af 93       	push	r26
     43a:	bf 93       	push	r27
     43c:	ef 93       	push	r30
     43e:	ff 93       	push	r31
	// Go slow to target value
	const float speed = 1;
	static float currentValue = startValue1;
	
	// Maps the value from 0-180 to 250-1300 (frequency of the servo)
	float targetValue = map(servo1_targetValue, 250, 1300);
     440:	60 91 2e 01 	lds	r22, 0x012E	; 0x80012e <__data_end>
     444:	70 91 2f 01 	lds	r23, 0x012F	; 0x80012f <__data_end+0x1>
     448:	07 2e       	mov	r0, r23
     44a:	00 0c       	add	r0, r0
     44c:	88 0b       	sbc	r24, r24
     44e:	99 0b       	sbc	r25, r25
     450:	e3 d1       	rcall	.+966    	; 0x818 <__floatsisf>
     452:	24 e1       	ldi	r18, 0x14	; 20
     454:	35 e0       	ldi	r19, 0x05	; 5
     456:	4a ef       	ldi	r20, 0xFA	; 250
     458:	50 e0       	ldi	r21, 0x00	; 0
     45a:	a6 df       	rcall	.-180    	; 0x3a8 <map>
     45c:	4b 01       	movw	r8, r22
     45e:	5c 01       	movw	r10, r24
	
	if (currentValue < targetValue)
     460:	c0 90 0a 01 	lds	r12, 0x010A	; 0x80010a <currentValue.1948>
     464:	d0 90 0b 01 	lds	r13, 0x010B	; 0x80010b <currentValue.1948+0x1>
     468:	e0 90 0c 01 	lds	r14, 0x010C	; 0x80010c <currentValue.1948+0x2>
     46c:	f0 90 0d 01 	lds	r15, 0x010D	; 0x80010d <currentValue.1948+0x3>
     470:	a7 01       	movw	r20, r14
     472:	96 01       	movw	r18, r12
     474:	81 d2       	rcall	.+1282   	; 0x978 <__gesf2>
     476:	18 16       	cp	r1, r24
     478:	84 f4       	brge	.+32     	; 0x49a <__vector_12+0x90>
	currentValue += speed;
     47a:	20 e0       	ldi	r18, 0x00	; 0
     47c:	30 e0       	ldi	r19, 0x00	; 0
     47e:	40 e8       	ldi	r20, 0x80	; 128
     480:	5f e3       	ldi	r21, 0x3F	; 63
     482:	c7 01       	movw	r24, r14
     484:	b6 01       	movw	r22, r12
     486:	ca d0       	rcall	.+404    	; 0x61c <__addsf3>
     488:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <currentValue.1948>
     48c:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <currentValue.1948+0x1>
     490:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <currentValue.1948+0x2>
     494:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <currentValue.1948+0x3>
     498:	16 c0       	rjmp	.+44     	; 0x4c6 <__vector_12+0xbc>
	else if (currentValue > targetValue)
     49a:	a7 01       	movw	r20, r14
     49c:	96 01       	movw	r18, r12
     49e:	c5 01       	movw	r24, r10
     4a0:	b4 01       	movw	r22, r8
     4a2:	20 d1       	rcall	.+576    	; 0x6e4 <__cmpsf2>
     4a4:	88 23       	and	r24, r24
     4a6:	7c f4       	brge	.+30     	; 0x4c6 <__vector_12+0xbc>
	currentValue -= speed;
     4a8:	20 e0       	ldi	r18, 0x00	; 0
     4aa:	30 e0       	ldi	r19, 0x00	; 0
     4ac:	40 e8       	ldi	r20, 0x80	; 128
     4ae:	5f e3       	ldi	r21, 0x3F	; 63
     4b0:	c7 01       	movw	r24, r14
     4b2:	b6 01       	movw	r22, r12
     4b4:	b2 d0       	rcall	.+356    	; 0x61a <__subsf3>
     4b6:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <currentValue.1948>
     4ba:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <currentValue.1948+0x1>
     4be:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <currentValue.1948+0x2>
     4c2:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <currentValue.1948+0x3>
	
	OCR1A = currentValue;
     4c6:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <currentValue.1948>
     4ca:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <currentValue.1948+0x1>
     4ce:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <currentValue.1948+0x2>
     4d2:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <currentValue.1948+0x3>
     4d6:	72 d1       	rcall	.+740    	; 0x7bc <__fixunssfsi>
     4d8:	7b bd       	out	0x2b, r23	; 43
     4da:	6a bd       	out	0x2a, r22	; 42
}
     4dc:	ff 91       	pop	r31
     4de:	ef 91       	pop	r30
     4e0:	bf 91       	pop	r27
     4e2:	af 91       	pop	r26
     4e4:	9f 91       	pop	r25
     4e6:	8f 91       	pop	r24
     4e8:	7f 91       	pop	r23
     4ea:	6f 91       	pop	r22
     4ec:	5f 91       	pop	r21
     4ee:	4f 91       	pop	r20
     4f0:	3f 91       	pop	r19
     4f2:	2f 91       	pop	r18
     4f4:	ff 90       	pop	r15
     4f6:	ef 90       	pop	r14
     4f8:	df 90       	pop	r13
     4fa:	cf 90       	pop	r12
     4fc:	bf 90       	pop	r11
     4fe:	af 90       	pop	r10
     500:	9f 90       	pop	r9
     502:	8f 90       	pop	r8
     504:	0f 90       	pop	r0
     506:	0b be       	out	0x3b, r0	; 59
     508:	0f 90       	pop	r0
     50a:	0f be       	out	0x3f, r0	; 63
     50c:	0f 90       	pop	r0
     50e:	1f 90       	pop	r1
     510:	18 95       	reti

00000512 <__vector_13>:

ISR(TIMER1_COMPB_vect)
{
     512:	1f 92       	push	r1
     514:	0f 92       	push	r0
     516:	0f b6       	in	r0, 0x3f	; 63
     518:	0f 92       	push	r0
     51a:	11 24       	eor	r1, r1
     51c:	0b b6       	in	r0, 0x3b	; 59
     51e:	0f 92       	push	r0
     520:	8f 92       	push	r8
     522:	9f 92       	push	r9
     524:	af 92       	push	r10
     526:	bf 92       	push	r11
     528:	cf 92       	push	r12
     52a:	df 92       	push	r13
     52c:	ef 92       	push	r14
     52e:	ff 92       	push	r15
     530:	2f 93       	push	r18
     532:	3f 93       	push	r19
     534:	4f 93       	push	r20
     536:	5f 93       	push	r21
     538:	6f 93       	push	r22
     53a:	7f 93       	push	r23
     53c:	8f 93       	push	r24
     53e:	9f 93       	push	r25
     540:	af 93       	push	r26
     542:	bf 93       	push	r27
     544:	ef 93       	push	r30
     546:	ff 93       	push	r31
	// Go slow to target value
	const float speed = 1;
	static float currentValue = startValue2;
	
	// Maps the value from 0-180 to 250-1300 (frequency of the servo)
	float targetValue = map(servo2_targetValue, 250, 1300);
     548:	60 91 30 01 	lds	r22, 0x0130	; 0x800130 <servo2_targetValue>
     54c:	70 91 31 01 	lds	r23, 0x0131	; 0x800131 <servo2_targetValue+0x1>
     550:	07 2e       	mov	r0, r23
     552:	00 0c       	add	r0, r0
     554:	88 0b       	sbc	r24, r24
     556:	99 0b       	sbc	r25, r25
     558:	5f d1       	rcall	.+702    	; 0x818 <__floatsisf>
     55a:	24 e1       	ldi	r18, 0x14	; 20
     55c:	35 e0       	ldi	r19, 0x05	; 5
     55e:	4a ef       	ldi	r20, 0xFA	; 250
     560:	50 e0       	ldi	r21, 0x00	; 0
     562:	22 df       	rcall	.-444    	; 0x3a8 <map>
     564:	4b 01       	movw	r8, r22
     566:	5c 01       	movw	r10, r24
	
	if (currentValue < targetValue)
     568:	c0 90 06 01 	lds	r12, 0x0106	; 0x800106 <currentValue.1956>
     56c:	d0 90 07 01 	lds	r13, 0x0107	; 0x800107 <currentValue.1956+0x1>
     570:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <currentValue.1956+0x2>
     574:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <currentValue.1956+0x3>
     578:	a7 01       	movw	r20, r14
     57a:	96 01       	movw	r18, r12
     57c:	fd d1       	rcall	.+1018   	; 0x978 <__gesf2>
     57e:	18 16       	cp	r1, r24
     580:	84 f4       	brge	.+32     	; 0x5a2 <__vector_13+0x90>
	currentValue += speed;
     582:	20 e0       	ldi	r18, 0x00	; 0
     584:	30 e0       	ldi	r19, 0x00	; 0
     586:	40 e8       	ldi	r20, 0x80	; 128
     588:	5f e3       	ldi	r21, 0x3F	; 63
     58a:	c7 01       	movw	r24, r14
     58c:	b6 01       	movw	r22, r12
     58e:	46 d0       	rcall	.+140    	; 0x61c <__addsf3>
     590:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <currentValue.1956>
     594:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <currentValue.1956+0x1>
     598:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <currentValue.1956+0x2>
     59c:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <currentValue.1956+0x3>
     5a0:	16 c0       	rjmp	.+44     	; 0x5ce <__vector_13+0xbc>
	else if (currentValue > targetValue)
     5a2:	a7 01       	movw	r20, r14
     5a4:	96 01       	movw	r18, r12
     5a6:	c5 01       	movw	r24, r10
     5a8:	b4 01       	movw	r22, r8
     5aa:	9c d0       	rcall	.+312    	; 0x6e4 <__cmpsf2>
     5ac:	88 23       	and	r24, r24
     5ae:	7c f4       	brge	.+30     	; 0x5ce <__vector_13+0xbc>
	currentValue -= speed;
     5b0:	20 e0       	ldi	r18, 0x00	; 0
     5b2:	30 e0       	ldi	r19, 0x00	; 0
     5b4:	40 e8       	ldi	r20, 0x80	; 128
     5b6:	5f e3       	ldi	r21, 0x3F	; 63
     5b8:	c7 01       	movw	r24, r14
     5ba:	b6 01       	movw	r22, r12
     5bc:	2e d0       	rcall	.+92     	; 0x61a <__subsf3>
     5be:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <currentValue.1956>
     5c2:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <currentValue.1956+0x1>
     5c6:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <currentValue.1956+0x2>
     5ca:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <currentValue.1956+0x3>
	
	OCR1B = currentValue;
     5ce:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <currentValue.1956>
     5d2:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <currentValue.1956+0x1>
     5d6:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <currentValue.1956+0x2>
     5da:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <currentValue.1956+0x3>
     5de:	ee d0       	rcall	.+476    	; 0x7bc <__fixunssfsi>
     5e0:	79 bd       	out	0x29, r23	; 41
     5e2:	68 bd       	out	0x28, r22	; 40
}
     5e4:	ff 91       	pop	r31
     5e6:	ef 91       	pop	r30
     5e8:	bf 91       	pop	r27
     5ea:	af 91       	pop	r26
     5ec:	9f 91       	pop	r25
     5ee:	8f 91       	pop	r24
     5f0:	7f 91       	pop	r23
     5f2:	6f 91       	pop	r22
     5f4:	5f 91       	pop	r21
     5f6:	4f 91       	pop	r20
     5f8:	3f 91       	pop	r19
     5fa:	2f 91       	pop	r18
     5fc:	ff 90       	pop	r15
     5fe:	ef 90       	pop	r14
     600:	df 90       	pop	r13
     602:	cf 90       	pop	r12
     604:	bf 90       	pop	r11
     606:	af 90       	pop	r10
     608:	9f 90       	pop	r9
     60a:	8f 90       	pop	r8
     60c:	0f 90       	pop	r0
     60e:	0b be       	out	0x3b, r0	; 59
     610:	0f 90       	pop	r0
     612:	0f be       	out	0x3f, r0	; 63
     614:	0f 90       	pop	r0
     616:	1f 90       	pop	r1
     618:	18 95       	reti

0000061a <__subsf3>:
     61a:	50 58       	subi	r21, 0x80	; 128

0000061c <__addsf3>:
     61c:	bb 27       	eor	r27, r27
     61e:	aa 27       	eor	r26, r26
     620:	0e d0       	rcall	.+28     	; 0x63e <__addsf3x>
     622:	70 c1       	rjmp	.+736    	; 0x904 <__fp_round>
     624:	61 d1       	rcall	.+706    	; 0x8e8 <__fp_pscA>
     626:	30 f0       	brcs	.+12     	; 0x634 <__addsf3+0x18>
     628:	66 d1       	rcall	.+716    	; 0x8f6 <__fp_pscB>
     62a:	20 f0       	brcs	.+8      	; 0x634 <__addsf3+0x18>
     62c:	31 f4       	brne	.+12     	; 0x63a <__addsf3+0x1e>
     62e:	9f 3f       	cpi	r25, 0xFF	; 255
     630:	11 f4       	brne	.+4      	; 0x636 <__addsf3+0x1a>
     632:	1e f4       	brtc	.+6      	; 0x63a <__addsf3+0x1e>
     634:	56 c1       	rjmp	.+684    	; 0x8e2 <__fp_nan>
     636:	0e f4       	brtc	.+2      	; 0x63a <__addsf3+0x1e>
     638:	e0 95       	com	r30
     63a:	e7 fb       	bst	r30, 7
     63c:	4c c1       	rjmp	.+664    	; 0x8d6 <__fp_inf>

0000063e <__addsf3x>:
     63e:	e9 2f       	mov	r30, r25
     640:	72 d1       	rcall	.+740    	; 0x926 <__fp_split3>
     642:	80 f3       	brcs	.-32     	; 0x624 <__addsf3+0x8>
     644:	ba 17       	cp	r27, r26
     646:	62 07       	cpc	r22, r18
     648:	73 07       	cpc	r23, r19
     64a:	84 07       	cpc	r24, r20
     64c:	95 07       	cpc	r25, r21
     64e:	18 f0       	brcs	.+6      	; 0x656 <__addsf3x+0x18>
     650:	71 f4       	brne	.+28     	; 0x66e <__addsf3x+0x30>
     652:	9e f5       	brtc	.+102    	; 0x6ba <__addsf3x+0x7c>
     654:	8a c1       	rjmp	.+788    	; 0x96a <__fp_zero>
     656:	0e f4       	brtc	.+2      	; 0x65a <__addsf3x+0x1c>
     658:	e0 95       	com	r30
     65a:	0b 2e       	mov	r0, r27
     65c:	ba 2f       	mov	r27, r26
     65e:	a0 2d       	mov	r26, r0
     660:	0b 01       	movw	r0, r22
     662:	b9 01       	movw	r22, r18
     664:	90 01       	movw	r18, r0
     666:	0c 01       	movw	r0, r24
     668:	ca 01       	movw	r24, r20
     66a:	a0 01       	movw	r20, r0
     66c:	11 24       	eor	r1, r1
     66e:	ff 27       	eor	r31, r31
     670:	59 1b       	sub	r21, r25
     672:	99 f0       	breq	.+38     	; 0x69a <__addsf3x+0x5c>
     674:	59 3f       	cpi	r21, 0xF9	; 249
     676:	50 f4       	brcc	.+20     	; 0x68c <__addsf3x+0x4e>
     678:	50 3e       	cpi	r21, 0xE0	; 224
     67a:	68 f1       	brcs	.+90     	; 0x6d6 <__addsf3x+0x98>
     67c:	1a 16       	cp	r1, r26
     67e:	f0 40       	sbci	r31, 0x00	; 0
     680:	a2 2f       	mov	r26, r18
     682:	23 2f       	mov	r18, r19
     684:	34 2f       	mov	r19, r20
     686:	44 27       	eor	r20, r20
     688:	58 5f       	subi	r21, 0xF8	; 248
     68a:	f3 cf       	rjmp	.-26     	; 0x672 <__addsf3x+0x34>
     68c:	46 95       	lsr	r20
     68e:	37 95       	ror	r19
     690:	27 95       	ror	r18
     692:	a7 95       	ror	r26
     694:	f0 40       	sbci	r31, 0x00	; 0
     696:	53 95       	inc	r21
     698:	c9 f7       	brne	.-14     	; 0x68c <__addsf3x+0x4e>
     69a:	7e f4       	brtc	.+30     	; 0x6ba <__addsf3x+0x7c>
     69c:	1f 16       	cp	r1, r31
     69e:	ba 0b       	sbc	r27, r26
     6a0:	62 0b       	sbc	r22, r18
     6a2:	73 0b       	sbc	r23, r19
     6a4:	84 0b       	sbc	r24, r20
     6a6:	ba f0       	brmi	.+46     	; 0x6d6 <__addsf3x+0x98>
     6a8:	91 50       	subi	r25, 0x01	; 1
     6aa:	a1 f0       	breq	.+40     	; 0x6d4 <__addsf3x+0x96>
     6ac:	ff 0f       	add	r31, r31
     6ae:	bb 1f       	adc	r27, r27
     6b0:	66 1f       	adc	r22, r22
     6b2:	77 1f       	adc	r23, r23
     6b4:	88 1f       	adc	r24, r24
     6b6:	c2 f7       	brpl	.-16     	; 0x6a8 <__addsf3x+0x6a>
     6b8:	0e c0       	rjmp	.+28     	; 0x6d6 <__addsf3x+0x98>
     6ba:	ba 0f       	add	r27, r26
     6bc:	62 1f       	adc	r22, r18
     6be:	73 1f       	adc	r23, r19
     6c0:	84 1f       	adc	r24, r20
     6c2:	48 f4       	brcc	.+18     	; 0x6d6 <__addsf3x+0x98>
     6c4:	87 95       	ror	r24
     6c6:	77 95       	ror	r23
     6c8:	67 95       	ror	r22
     6ca:	b7 95       	ror	r27
     6cc:	f7 95       	ror	r31
     6ce:	9e 3f       	cpi	r25, 0xFE	; 254
     6d0:	08 f0       	brcs	.+2      	; 0x6d4 <__addsf3x+0x96>
     6d2:	b3 cf       	rjmp	.-154    	; 0x63a <__addsf3+0x1e>
     6d4:	93 95       	inc	r25
     6d6:	88 0f       	add	r24, r24
     6d8:	08 f0       	brcs	.+2      	; 0x6dc <__addsf3x+0x9e>
     6da:	99 27       	eor	r25, r25
     6dc:	ee 0f       	add	r30, r30
     6de:	97 95       	ror	r25
     6e0:	87 95       	ror	r24
     6e2:	08 95       	ret

000006e4 <__cmpsf2>:
     6e4:	d4 d0       	rcall	.+424    	; 0x88e <__fp_cmp>
     6e6:	08 f4       	brcc	.+2      	; 0x6ea <__cmpsf2+0x6>
     6e8:	81 e0       	ldi	r24, 0x01	; 1
     6ea:	08 95       	ret

000006ec <__divsf3>:
     6ec:	0c d0       	rcall	.+24     	; 0x706 <__divsf3x>
     6ee:	0a c1       	rjmp	.+532    	; 0x904 <__fp_round>
     6f0:	02 d1       	rcall	.+516    	; 0x8f6 <__fp_pscB>
     6f2:	40 f0       	brcs	.+16     	; 0x704 <__divsf3+0x18>
     6f4:	f9 d0       	rcall	.+498    	; 0x8e8 <__fp_pscA>
     6f6:	30 f0       	brcs	.+12     	; 0x704 <__divsf3+0x18>
     6f8:	21 f4       	brne	.+8      	; 0x702 <__divsf3+0x16>
     6fa:	5f 3f       	cpi	r21, 0xFF	; 255
     6fc:	19 f0       	breq	.+6      	; 0x704 <__divsf3+0x18>
     6fe:	eb c0       	rjmp	.+470    	; 0x8d6 <__fp_inf>
     700:	51 11       	cpse	r21, r1
     702:	34 c1       	rjmp	.+616    	; 0x96c <__fp_szero>
     704:	ee c0       	rjmp	.+476    	; 0x8e2 <__fp_nan>

00000706 <__divsf3x>:
     706:	0f d1       	rcall	.+542    	; 0x926 <__fp_split3>
     708:	98 f3       	brcs	.-26     	; 0x6f0 <__divsf3+0x4>

0000070a <__divsf3_pse>:
     70a:	99 23       	and	r25, r25
     70c:	c9 f3       	breq	.-14     	; 0x700 <__divsf3+0x14>
     70e:	55 23       	and	r21, r21
     710:	b1 f3       	breq	.-20     	; 0x6fe <__divsf3+0x12>
     712:	95 1b       	sub	r25, r21
     714:	55 0b       	sbc	r21, r21
     716:	bb 27       	eor	r27, r27
     718:	aa 27       	eor	r26, r26
     71a:	62 17       	cp	r22, r18
     71c:	73 07       	cpc	r23, r19
     71e:	84 07       	cpc	r24, r20
     720:	38 f0       	brcs	.+14     	; 0x730 <__divsf3_pse+0x26>
     722:	9f 5f       	subi	r25, 0xFF	; 255
     724:	5f 4f       	sbci	r21, 0xFF	; 255
     726:	22 0f       	add	r18, r18
     728:	33 1f       	adc	r19, r19
     72a:	44 1f       	adc	r20, r20
     72c:	aa 1f       	adc	r26, r26
     72e:	a9 f3       	breq	.-22     	; 0x71a <__divsf3_pse+0x10>
     730:	33 d0       	rcall	.+102    	; 0x798 <__divsf3_pse+0x8e>
     732:	0e 2e       	mov	r0, r30
     734:	3a f0       	brmi	.+14     	; 0x744 <__divsf3_pse+0x3a>
     736:	e0 e8       	ldi	r30, 0x80	; 128
     738:	30 d0       	rcall	.+96     	; 0x79a <__divsf3_pse+0x90>
     73a:	91 50       	subi	r25, 0x01	; 1
     73c:	50 40       	sbci	r21, 0x00	; 0
     73e:	e6 95       	lsr	r30
     740:	00 1c       	adc	r0, r0
     742:	ca f7       	brpl	.-14     	; 0x736 <__divsf3_pse+0x2c>
     744:	29 d0       	rcall	.+82     	; 0x798 <__divsf3_pse+0x8e>
     746:	fe 2f       	mov	r31, r30
     748:	27 d0       	rcall	.+78     	; 0x798 <__divsf3_pse+0x8e>
     74a:	66 0f       	add	r22, r22
     74c:	77 1f       	adc	r23, r23
     74e:	88 1f       	adc	r24, r24
     750:	bb 1f       	adc	r27, r27
     752:	26 17       	cp	r18, r22
     754:	37 07       	cpc	r19, r23
     756:	48 07       	cpc	r20, r24
     758:	ab 07       	cpc	r26, r27
     75a:	b0 e8       	ldi	r27, 0x80	; 128
     75c:	09 f0       	breq	.+2      	; 0x760 <__divsf3_pse+0x56>
     75e:	bb 0b       	sbc	r27, r27
     760:	80 2d       	mov	r24, r0
     762:	bf 01       	movw	r22, r30
     764:	ff 27       	eor	r31, r31
     766:	93 58       	subi	r25, 0x83	; 131
     768:	5f 4f       	sbci	r21, 0xFF	; 255
     76a:	2a f0       	brmi	.+10     	; 0x776 <__divsf3_pse+0x6c>
     76c:	9e 3f       	cpi	r25, 0xFE	; 254
     76e:	51 05       	cpc	r21, r1
     770:	68 f0       	brcs	.+26     	; 0x78c <__divsf3_pse+0x82>
     772:	b1 c0       	rjmp	.+354    	; 0x8d6 <__fp_inf>
     774:	fb c0       	rjmp	.+502    	; 0x96c <__fp_szero>
     776:	5f 3f       	cpi	r21, 0xFF	; 255
     778:	ec f3       	brlt	.-6      	; 0x774 <__divsf3_pse+0x6a>
     77a:	98 3e       	cpi	r25, 0xE8	; 232
     77c:	dc f3       	brlt	.-10     	; 0x774 <__divsf3_pse+0x6a>
     77e:	86 95       	lsr	r24
     780:	77 95       	ror	r23
     782:	67 95       	ror	r22
     784:	b7 95       	ror	r27
     786:	f7 95       	ror	r31
     788:	9f 5f       	subi	r25, 0xFF	; 255
     78a:	c9 f7       	brne	.-14     	; 0x77e <__divsf3_pse+0x74>
     78c:	88 0f       	add	r24, r24
     78e:	91 1d       	adc	r25, r1
     790:	96 95       	lsr	r25
     792:	87 95       	ror	r24
     794:	97 f9       	bld	r25, 7
     796:	08 95       	ret
     798:	e1 e0       	ldi	r30, 0x01	; 1
     79a:	66 0f       	add	r22, r22
     79c:	77 1f       	adc	r23, r23
     79e:	88 1f       	adc	r24, r24
     7a0:	bb 1f       	adc	r27, r27
     7a2:	62 17       	cp	r22, r18
     7a4:	73 07       	cpc	r23, r19
     7a6:	84 07       	cpc	r24, r20
     7a8:	ba 07       	cpc	r27, r26
     7aa:	20 f0       	brcs	.+8      	; 0x7b4 <__divsf3_pse+0xaa>
     7ac:	62 1b       	sub	r22, r18
     7ae:	73 0b       	sbc	r23, r19
     7b0:	84 0b       	sbc	r24, r20
     7b2:	ba 0b       	sbc	r27, r26
     7b4:	ee 1f       	adc	r30, r30
     7b6:	88 f7       	brcc	.-30     	; 0x79a <__divsf3_pse+0x90>
     7b8:	e0 95       	com	r30
     7ba:	08 95       	ret

000007bc <__fixunssfsi>:
     7bc:	bc d0       	rcall	.+376    	; 0x936 <__fp_splitA>
     7be:	88 f0       	brcs	.+34     	; 0x7e2 <__fixunssfsi+0x26>
     7c0:	9f 57       	subi	r25, 0x7F	; 127
     7c2:	90 f0       	brcs	.+36     	; 0x7e8 <__fixunssfsi+0x2c>
     7c4:	b9 2f       	mov	r27, r25
     7c6:	99 27       	eor	r25, r25
     7c8:	b7 51       	subi	r27, 0x17	; 23
     7ca:	a0 f0       	brcs	.+40     	; 0x7f4 <__fixunssfsi+0x38>
     7cc:	d1 f0       	breq	.+52     	; 0x802 <__fixunssfsi+0x46>
     7ce:	66 0f       	add	r22, r22
     7d0:	77 1f       	adc	r23, r23
     7d2:	88 1f       	adc	r24, r24
     7d4:	99 1f       	adc	r25, r25
     7d6:	1a f0       	brmi	.+6      	; 0x7de <__fixunssfsi+0x22>
     7d8:	ba 95       	dec	r27
     7da:	c9 f7       	brne	.-14     	; 0x7ce <__fixunssfsi+0x12>
     7dc:	12 c0       	rjmp	.+36     	; 0x802 <__fixunssfsi+0x46>
     7de:	b1 30       	cpi	r27, 0x01	; 1
     7e0:	81 f0       	breq	.+32     	; 0x802 <__fixunssfsi+0x46>
     7e2:	c3 d0       	rcall	.+390    	; 0x96a <__fp_zero>
     7e4:	b1 e0       	ldi	r27, 0x01	; 1
     7e6:	08 95       	ret
     7e8:	c0 c0       	rjmp	.+384    	; 0x96a <__fp_zero>
     7ea:	67 2f       	mov	r22, r23
     7ec:	78 2f       	mov	r23, r24
     7ee:	88 27       	eor	r24, r24
     7f0:	b8 5f       	subi	r27, 0xF8	; 248
     7f2:	39 f0       	breq	.+14     	; 0x802 <__fixunssfsi+0x46>
     7f4:	b9 3f       	cpi	r27, 0xF9	; 249
     7f6:	cc f3       	brlt	.-14     	; 0x7ea <__fixunssfsi+0x2e>
     7f8:	86 95       	lsr	r24
     7fa:	77 95       	ror	r23
     7fc:	67 95       	ror	r22
     7fe:	b3 95       	inc	r27
     800:	d9 f7       	brne	.-10     	; 0x7f8 <__fixunssfsi+0x3c>
     802:	3e f4       	brtc	.+14     	; 0x812 <__fixunssfsi+0x56>
     804:	90 95       	com	r25
     806:	80 95       	com	r24
     808:	70 95       	com	r23
     80a:	61 95       	neg	r22
     80c:	7f 4f       	sbci	r23, 0xFF	; 255
     80e:	8f 4f       	sbci	r24, 0xFF	; 255
     810:	9f 4f       	sbci	r25, 0xFF	; 255
     812:	08 95       	ret

00000814 <__floatunsisf>:
     814:	e8 94       	clt
     816:	09 c0       	rjmp	.+18     	; 0x82a <__floatsisf+0x12>

00000818 <__floatsisf>:
     818:	97 fb       	bst	r25, 7
     81a:	3e f4       	brtc	.+14     	; 0x82a <__floatsisf+0x12>
     81c:	90 95       	com	r25
     81e:	80 95       	com	r24
     820:	70 95       	com	r23
     822:	61 95       	neg	r22
     824:	7f 4f       	sbci	r23, 0xFF	; 255
     826:	8f 4f       	sbci	r24, 0xFF	; 255
     828:	9f 4f       	sbci	r25, 0xFF	; 255
     82a:	99 23       	and	r25, r25
     82c:	a9 f0       	breq	.+42     	; 0x858 <__floatsisf+0x40>
     82e:	f9 2f       	mov	r31, r25
     830:	96 e9       	ldi	r25, 0x96	; 150
     832:	bb 27       	eor	r27, r27
     834:	93 95       	inc	r25
     836:	f6 95       	lsr	r31
     838:	87 95       	ror	r24
     83a:	77 95       	ror	r23
     83c:	67 95       	ror	r22
     83e:	b7 95       	ror	r27
     840:	f1 11       	cpse	r31, r1
     842:	f8 cf       	rjmp	.-16     	; 0x834 <__floatsisf+0x1c>
     844:	fa f4       	brpl	.+62     	; 0x884 <__floatsisf+0x6c>
     846:	bb 0f       	add	r27, r27
     848:	11 f4       	brne	.+4      	; 0x84e <__floatsisf+0x36>
     84a:	60 ff       	sbrs	r22, 0
     84c:	1b c0       	rjmp	.+54     	; 0x884 <__floatsisf+0x6c>
     84e:	6f 5f       	subi	r22, 0xFF	; 255
     850:	7f 4f       	sbci	r23, 0xFF	; 255
     852:	8f 4f       	sbci	r24, 0xFF	; 255
     854:	9f 4f       	sbci	r25, 0xFF	; 255
     856:	16 c0       	rjmp	.+44     	; 0x884 <__floatsisf+0x6c>
     858:	88 23       	and	r24, r24
     85a:	11 f0       	breq	.+4      	; 0x860 <__floatsisf+0x48>
     85c:	96 e9       	ldi	r25, 0x96	; 150
     85e:	11 c0       	rjmp	.+34     	; 0x882 <__floatsisf+0x6a>
     860:	77 23       	and	r23, r23
     862:	21 f0       	breq	.+8      	; 0x86c <__floatsisf+0x54>
     864:	9e e8       	ldi	r25, 0x8E	; 142
     866:	87 2f       	mov	r24, r23
     868:	76 2f       	mov	r23, r22
     86a:	05 c0       	rjmp	.+10     	; 0x876 <__floatsisf+0x5e>
     86c:	66 23       	and	r22, r22
     86e:	71 f0       	breq	.+28     	; 0x88c <__floatsisf+0x74>
     870:	96 e8       	ldi	r25, 0x86	; 134
     872:	86 2f       	mov	r24, r22
     874:	70 e0       	ldi	r23, 0x00	; 0
     876:	60 e0       	ldi	r22, 0x00	; 0
     878:	2a f0       	brmi	.+10     	; 0x884 <__floatsisf+0x6c>
     87a:	9a 95       	dec	r25
     87c:	66 0f       	add	r22, r22
     87e:	77 1f       	adc	r23, r23
     880:	88 1f       	adc	r24, r24
     882:	da f7       	brpl	.-10     	; 0x87a <__floatsisf+0x62>
     884:	88 0f       	add	r24, r24
     886:	96 95       	lsr	r25
     888:	87 95       	ror	r24
     88a:	97 f9       	bld	r25, 7
     88c:	08 95       	ret

0000088e <__fp_cmp>:
     88e:	99 0f       	add	r25, r25
     890:	00 08       	sbc	r0, r0
     892:	55 0f       	add	r21, r21
     894:	aa 0b       	sbc	r26, r26
     896:	e0 e8       	ldi	r30, 0x80	; 128
     898:	fe ef       	ldi	r31, 0xFE	; 254
     89a:	16 16       	cp	r1, r22
     89c:	17 06       	cpc	r1, r23
     89e:	e8 07       	cpc	r30, r24
     8a0:	f9 07       	cpc	r31, r25
     8a2:	c0 f0       	brcs	.+48     	; 0x8d4 <__fp_cmp+0x46>
     8a4:	12 16       	cp	r1, r18
     8a6:	13 06       	cpc	r1, r19
     8a8:	e4 07       	cpc	r30, r20
     8aa:	f5 07       	cpc	r31, r21
     8ac:	98 f0       	brcs	.+38     	; 0x8d4 <__fp_cmp+0x46>
     8ae:	62 1b       	sub	r22, r18
     8b0:	73 0b       	sbc	r23, r19
     8b2:	84 0b       	sbc	r24, r20
     8b4:	95 0b       	sbc	r25, r21
     8b6:	39 f4       	brne	.+14     	; 0x8c6 <__fp_cmp+0x38>
     8b8:	0a 26       	eor	r0, r26
     8ba:	61 f0       	breq	.+24     	; 0x8d4 <__fp_cmp+0x46>
     8bc:	23 2b       	or	r18, r19
     8be:	24 2b       	or	r18, r20
     8c0:	25 2b       	or	r18, r21
     8c2:	21 f4       	brne	.+8      	; 0x8cc <__fp_cmp+0x3e>
     8c4:	08 95       	ret
     8c6:	0a 26       	eor	r0, r26
     8c8:	09 f4       	brne	.+2      	; 0x8cc <__fp_cmp+0x3e>
     8ca:	a1 40       	sbci	r26, 0x01	; 1
     8cc:	a6 95       	lsr	r26
     8ce:	8f ef       	ldi	r24, 0xFF	; 255
     8d0:	81 1d       	adc	r24, r1
     8d2:	81 1d       	adc	r24, r1
     8d4:	08 95       	ret

000008d6 <__fp_inf>:
     8d6:	97 f9       	bld	r25, 7
     8d8:	9f 67       	ori	r25, 0x7F	; 127
     8da:	80 e8       	ldi	r24, 0x80	; 128
     8dc:	70 e0       	ldi	r23, 0x00	; 0
     8de:	60 e0       	ldi	r22, 0x00	; 0
     8e0:	08 95       	ret

000008e2 <__fp_nan>:
     8e2:	9f ef       	ldi	r25, 0xFF	; 255
     8e4:	80 ec       	ldi	r24, 0xC0	; 192
     8e6:	08 95       	ret

000008e8 <__fp_pscA>:
     8e8:	00 24       	eor	r0, r0
     8ea:	0a 94       	dec	r0
     8ec:	16 16       	cp	r1, r22
     8ee:	17 06       	cpc	r1, r23
     8f0:	18 06       	cpc	r1, r24
     8f2:	09 06       	cpc	r0, r25
     8f4:	08 95       	ret

000008f6 <__fp_pscB>:
     8f6:	00 24       	eor	r0, r0
     8f8:	0a 94       	dec	r0
     8fa:	12 16       	cp	r1, r18
     8fc:	13 06       	cpc	r1, r19
     8fe:	14 06       	cpc	r1, r20
     900:	05 06       	cpc	r0, r21
     902:	08 95       	ret

00000904 <__fp_round>:
     904:	09 2e       	mov	r0, r25
     906:	03 94       	inc	r0
     908:	00 0c       	add	r0, r0
     90a:	11 f4       	brne	.+4      	; 0x910 <__fp_round+0xc>
     90c:	88 23       	and	r24, r24
     90e:	52 f0       	brmi	.+20     	; 0x924 <__fp_round+0x20>
     910:	bb 0f       	add	r27, r27
     912:	40 f4       	brcc	.+16     	; 0x924 <__fp_round+0x20>
     914:	bf 2b       	or	r27, r31
     916:	11 f4       	brne	.+4      	; 0x91c <__fp_round+0x18>
     918:	60 ff       	sbrs	r22, 0
     91a:	04 c0       	rjmp	.+8      	; 0x924 <__fp_round+0x20>
     91c:	6f 5f       	subi	r22, 0xFF	; 255
     91e:	7f 4f       	sbci	r23, 0xFF	; 255
     920:	8f 4f       	sbci	r24, 0xFF	; 255
     922:	9f 4f       	sbci	r25, 0xFF	; 255
     924:	08 95       	ret

00000926 <__fp_split3>:
     926:	57 fd       	sbrc	r21, 7
     928:	90 58       	subi	r25, 0x80	; 128
     92a:	44 0f       	add	r20, r20
     92c:	55 1f       	adc	r21, r21
     92e:	59 f0       	breq	.+22     	; 0x946 <__fp_splitA+0x10>
     930:	5f 3f       	cpi	r21, 0xFF	; 255
     932:	71 f0       	breq	.+28     	; 0x950 <__fp_splitA+0x1a>
     934:	47 95       	ror	r20

00000936 <__fp_splitA>:
     936:	88 0f       	add	r24, r24
     938:	97 fb       	bst	r25, 7
     93a:	99 1f       	adc	r25, r25
     93c:	61 f0       	breq	.+24     	; 0x956 <__fp_splitA+0x20>
     93e:	9f 3f       	cpi	r25, 0xFF	; 255
     940:	79 f0       	breq	.+30     	; 0x960 <__fp_splitA+0x2a>
     942:	87 95       	ror	r24
     944:	08 95       	ret
     946:	12 16       	cp	r1, r18
     948:	13 06       	cpc	r1, r19
     94a:	14 06       	cpc	r1, r20
     94c:	55 1f       	adc	r21, r21
     94e:	f2 cf       	rjmp	.-28     	; 0x934 <__fp_split3+0xe>
     950:	46 95       	lsr	r20
     952:	f1 df       	rcall	.-30     	; 0x936 <__fp_splitA>
     954:	08 c0       	rjmp	.+16     	; 0x966 <__fp_splitA+0x30>
     956:	16 16       	cp	r1, r22
     958:	17 06       	cpc	r1, r23
     95a:	18 06       	cpc	r1, r24
     95c:	99 1f       	adc	r25, r25
     95e:	f1 cf       	rjmp	.-30     	; 0x942 <__fp_splitA+0xc>
     960:	86 95       	lsr	r24
     962:	71 05       	cpc	r23, r1
     964:	61 05       	cpc	r22, r1
     966:	08 94       	sec
     968:	08 95       	ret

0000096a <__fp_zero>:
     96a:	e8 94       	clt

0000096c <__fp_szero>:
     96c:	bb 27       	eor	r27, r27
     96e:	66 27       	eor	r22, r22
     970:	77 27       	eor	r23, r23
     972:	cb 01       	movw	r24, r22
     974:	97 f9       	bld	r25, 7
     976:	08 95       	ret

00000978 <__gesf2>:
     978:	8a df       	rcall	.-236    	; 0x88e <__fp_cmp>
     97a:	08 f4       	brcc	.+2      	; 0x97e <__gesf2+0x6>
     97c:	8f ef       	ldi	r24, 0xFF	; 255
     97e:	08 95       	ret

00000980 <__mulsf3>:
     980:	0b d0       	rcall	.+22     	; 0x998 <__mulsf3x>
     982:	c0 cf       	rjmp	.-128    	; 0x904 <__fp_round>
     984:	b1 df       	rcall	.-158    	; 0x8e8 <__fp_pscA>
     986:	28 f0       	brcs	.+10     	; 0x992 <__mulsf3+0x12>
     988:	b6 df       	rcall	.-148    	; 0x8f6 <__fp_pscB>
     98a:	18 f0       	brcs	.+6      	; 0x992 <__mulsf3+0x12>
     98c:	95 23       	and	r25, r21
     98e:	09 f0       	breq	.+2      	; 0x992 <__mulsf3+0x12>
     990:	a2 cf       	rjmp	.-188    	; 0x8d6 <__fp_inf>
     992:	a7 cf       	rjmp	.-178    	; 0x8e2 <__fp_nan>
     994:	11 24       	eor	r1, r1
     996:	ea cf       	rjmp	.-44     	; 0x96c <__fp_szero>

00000998 <__mulsf3x>:
     998:	c6 df       	rcall	.-116    	; 0x926 <__fp_split3>
     99a:	a0 f3       	brcs	.-24     	; 0x984 <__mulsf3+0x4>

0000099c <__mulsf3_pse>:
     99c:	95 9f       	mul	r25, r21
     99e:	d1 f3       	breq	.-12     	; 0x994 <__mulsf3+0x14>
     9a0:	95 0f       	add	r25, r21
     9a2:	50 e0       	ldi	r21, 0x00	; 0
     9a4:	55 1f       	adc	r21, r21
     9a6:	62 9f       	mul	r22, r18
     9a8:	f0 01       	movw	r30, r0
     9aa:	72 9f       	mul	r23, r18
     9ac:	bb 27       	eor	r27, r27
     9ae:	f0 0d       	add	r31, r0
     9b0:	b1 1d       	adc	r27, r1
     9b2:	63 9f       	mul	r22, r19
     9b4:	aa 27       	eor	r26, r26
     9b6:	f0 0d       	add	r31, r0
     9b8:	b1 1d       	adc	r27, r1
     9ba:	aa 1f       	adc	r26, r26
     9bc:	64 9f       	mul	r22, r20
     9be:	66 27       	eor	r22, r22
     9c0:	b0 0d       	add	r27, r0
     9c2:	a1 1d       	adc	r26, r1
     9c4:	66 1f       	adc	r22, r22
     9c6:	82 9f       	mul	r24, r18
     9c8:	22 27       	eor	r18, r18
     9ca:	b0 0d       	add	r27, r0
     9cc:	a1 1d       	adc	r26, r1
     9ce:	62 1f       	adc	r22, r18
     9d0:	73 9f       	mul	r23, r19
     9d2:	b0 0d       	add	r27, r0
     9d4:	a1 1d       	adc	r26, r1
     9d6:	62 1f       	adc	r22, r18
     9d8:	83 9f       	mul	r24, r19
     9da:	a0 0d       	add	r26, r0
     9dc:	61 1d       	adc	r22, r1
     9de:	22 1f       	adc	r18, r18
     9e0:	74 9f       	mul	r23, r20
     9e2:	33 27       	eor	r19, r19
     9e4:	a0 0d       	add	r26, r0
     9e6:	61 1d       	adc	r22, r1
     9e8:	23 1f       	adc	r18, r19
     9ea:	84 9f       	mul	r24, r20
     9ec:	60 0d       	add	r22, r0
     9ee:	21 1d       	adc	r18, r1
     9f0:	82 2f       	mov	r24, r18
     9f2:	76 2f       	mov	r23, r22
     9f4:	6a 2f       	mov	r22, r26
     9f6:	11 24       	eor	r1, r1
     9f8:	9f 57       	subi	r25, 0x7F	; 127
     9fa:	50 40       	sbci	r21, 0x00	; 0
     9fc:	8a f0       	brmi	.+34     	; 0xa20 <__mulsf3_pse+0x84>
     9fe:	e1 f0       	breq	.+56     	; 0xa38 <__mulsf3_pse+0x9c>
     a00:	88 23       	and	r24, r24
     a02:	4a f0       	brmi	.+18     	; 0xa16 <__mulsf3_pse+0x7a>
     a04:	ee 0f       	add	r30, r30
     a06:	ff 1f       	adc	r31, r31
     a08:	bb 1f       	adc	r27, r27
     a0a:	66 1f       	adc	r22, r22
     a0c:	77 1f       	adc	r23, r23
     a0e:	88 1f       	adc	r24, r24
     a10:	91 50       	subi	r25, 0x01	; 1
     a12:	50 40       	sbci	r21, 0x00	; 0
     a14:	a9 f7       	brne	.-22     	; 0xa00 <__mulsf3_pse+0x64>
     a16:	9e 3f       	cpi	r25, 0xFE	; 254
     a18:	51 05       	cpc	r21, r1
     a1a:	70 f0       	brcs	.+28     	; 0xa38 <__mulsf3_pse+0x9c>
     a1c:	5c cf       	rjmp	.-328    	; 0x8d6 <__fp_inf>
     a1e:	a6 cf       	rjmp	.-180    	; 0x96c <__fp_szero>
     a20:	5f 3f       	cpi	r21, 0xFF	; 255
     a22:	ec f3       	brlt	.-6      	; 0xa1e <__mulsf3_pse+0x82>
     a24:	98 3e       	cpi	r25, 0xE8	; 232
     a26:	dc f3       	brlt	.-10     	; 0xa1e <__mulsf3_pse+0x82>
     a28:	86 95       	lsr	r24
     a2a:	77 95       	ror	r23
     a2c:	67 95       	ror	r22
     a2e:	b7 95       	ror	r27
     a30:	f7 95       	ror	r31
     a32:	e7 95       	ror	r30
     a34:	9f 5f       	subi	r25, 0xFF	; 255
     a36:	c1 f7       	brne	.-16     	; 0xa28 <__mulsf3_pse+0x8c>
     a38:	fe 2b       	or	r31, r30
     a3a:	88 0f       	add	r24, r24
     a3c:	91 1d       	adc	r25, r1
     a3e:	96 95       	lsr	r25
     a40:	87 95       	ror	r24
     a42:	97 f9       	bld	r25, 7
     a44:	08 95       	ret

00000a46 <malloc>:
     a46:	0f 93       	push	r16
     a48:	1f 93       	push	r17
     a4a:	cf 93       	push	r28
     a4c:	df 93       	push	r29
     a4e:	82 30       	cpi	r24, 0x02	; 2
     a50:	91 05       	cpc	r25, r1
     a52:	10 f4       	brcc	.+4      	; 0xa58 <malloc+0x12>
     a54:	82 e0       	ldi	r24, 0x02	; 2
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	e0 91 34 01 	lds	r30, 0x0134	; 0x800134 <__flp>
     a5c:	f0 91 35 01 	lds	r31, 0x0135	; 0x800135 <__flp+0x1>
     a60:	20 e0       	ldi	r18, 0x00	; 0
     a62:	30 e0       	ldi	r19, 0x00	; 0
     a64:	a0 e0       	ldi	r26, 0x00	; 0
     a66:	b0 e0       	ldi	r27, 0x00	; 0
     a68:	30 97       	sbiw	r30, 0x00	; 0
     a6a:	19 f1       	breq	.+70     	; 0xab2 <malloc+0x6c>
     a6c:	40 81       	ld	r20, Z
     a6e:	51 81       	ldd	r21, Z+1	; 0x01
     a70:	02 81       	ldd	r16, Z+2	; 0x02
     a72:	13 81       	ldd	r17, Z+3	; 0x03
     a74:	48 17       	cp	r20, r24
     a76:	59 07       	cpc	r21, r25
     a78:	c8 f0       	brcs	.+50     	; 0xaac <malloc+0x66>
     a7a:	84 17       	cp	r24, r20
     a7c:	95 07       	cpc	r25, r21
     a7e:	69 f4       	brne	.+26     	; 0xa9a <malloc+0x54>
     a80:	10 97       	sbiw	r26, 0x00	; 0
     a82:	31 f0       	breq	.+12     	; 0xa90 <malloc+0x4a>
     a84:	12 96       	adiw	r26, 0x02	; 2
     a86:	0c 93       	st	X, r16
     a88:	12 97       	sbiw	r26, 0x02	; 2
     a8a:	13 96       	adiw	r26, 0x03	; 3
     a8c:	1c 93       	st	X, r17
     a8e:	27 c0       	rjmp	.+78     	; 0xade <malloc+0x98>
     a90:	00 93 34 01 	sts	0x0134, r16	; 0x800134 <__flp>
     a94:	10 93 35 01 	sts	0x0135, r17	; 0x800135 <__flp+0x1>
     a98:	22 c0       	rjmp	.+68     	; 0xade <malloc+0x98>
     a9a:	21 15       	cp	r18, r1
     a9c:	31 05       	cpc	r19, r1
     a9e:	19 f0       	breq	.+6      	; 0xaa6 <malloc+0x60>
     aa0:	42 17       	cp	r20, r18
     aa2:	53 07       	cpc	r21, r19
     aa4:	18 f4       	brcc	.+6      	; 0xaac <malloc+0x66>
     aa6:	9a 01       	movw	r18, r20
     aa8:	bd 01       	movw	r22, r26
     aaa:	ef 01       	movw	r28, r30
     aac:	df 01       	movw	r26, r30
     aae:	f8 01       	movw	r30, r16
     ab0:	db cf       	rjmp	.-74     	; 0xa68 <malloc+0x22>
     ab2:	21 15       	cp	r18, r1
     ab4:	31 05       	cpc	r19, r1
     ab6:	f9 f0       	breq	.+62     	; 0xaf6 <malloc+0xb0>
     ab8:	28 1b       	sub	r18, r24
     aba:	39 0b       	sbc	r19, r25
     abc:	24 30       	cpi	r18, 0x04	; 4
     abe:	31 05       	cpc	r19, r1
     ac0:	80 f4       	brcc	.+32     	; 0xae2 <malloc+0x9c>
     ac2:	8a 81       	ldd	r24, Y+2	; 0x02
     ac4:	9b 81       	ldd	r25, Y+3	; 0x03
     ac6:	61 15       	cp	r22, r1
     ac8:	71 05       	cpc	r23, r1
     aca:	21 f0       	breq	.+8      	; 0xad4 <malloc+0x8e>
     acc:	fb 01       	movw	r30, r22
     ace:	93 83       	std	Z+3, r25	; 0x03
     ad0:	82 83       	std	Z+2, r24	; 0x02
     ad2:	04 c0       	rjmp	.+8      	; 0xadc <malloc+0x96>
     ad4:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__flp+0x1>
     ad8:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__flp>
     adc:	fe 01       	movw	r30, r28
     ade:	32 96       	adiw	r30, 0x02	; 2
     ae0:	44 c0       	rjmp	.+136    	; 0xb6a <malloc+0x124>
     ae2:	fe 01       	movw	r30, r28
     ae4:	e2 0f       	add	r30, r18
     ae6:	f3 1f       	adc	r31, r19
     ae8:	81 93       	st	Z+, r24
     aea:	91 93       	st	Z+, r25
     aec:	22 50       	subi	r18, 0x02	; 2
     aee:	31 09       	sbc	r19, r1
     af0:	39 83       	std	Y+1, r19	; 0x01
     af2:	28 83       	st	Y, r18
     af4:	3a c0       	rjmp	.+116    	; 0xb6a <malloc+0x124>
     af6:	20 91 32 01 	lds	r18, 0x0132	; 0x800132 <__brkval>
     afa:	30 91 33 01 	lds	r19, 0x0133	; 0x800133 <__brkval+0x1>
     afe:	23 2b       	or	r18, r19
     b00:	41 f4       	brne	.+16     	; 0xb12 <malloc+0xcc>
     b02:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     b06:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     b0a:	30 93 33 01 	sts	0x0133, r19	; 0x800133 <__brkval+0x1>
     b0e:	20 93 32 01 	sts	0x0132, r18	; 0x800132 <__brkval>
     b12:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     b16:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     b1a:	21 15       	cp	r18, r1
     b1c:	31 05       	cpc	r19, r1
     b1e:	41 f4       	brne	.+16     	; 0xb30 <malloc+0xea>
     b20:	2d b7       	in	r18, 0x3d	; 61
     b22:	3e b7       	in	r19, 0x3e	; 62
     b24:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     b28:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     b2c:	24 1b       	sub	r18, r20
     b2e:	35 0b       	sbc	r19, r21
     b30:	e0 91 32 01 	lds	r30, 0x0132	; 0x800132 <__brkval>
     b34:	f0 91 33 01 	lds	r31, 0x0133	; 0x800133 <__brkval+0x1>
     b38:	e2 17       	cp	r30, r18
     b3a:	f3 07       	cpc	r31, r19
     b3c:	a0 f4       	brcc	.+40     	; 0xb66 <malloc+0x120>
     b3e:	2e 1b       	sub	r18, r30
     b40:	3f 0b       	sbc	r19, r31
     b42:	28 17       	cp	r18, r24
     b44:	39 07       	cpc	r19, r25
     b46:	78 f0       	brcs	.+30     	; 0xb66 <malloc+0x120>
     b48:	ac 01       	movw	r20, r24
     b4a:	4e 5f       	subi	r20, 0xFE	; 254
     b4c:	5f 4f       	sbci	r21, 0xFF	; 255
     b4e:	24 17       	cp	r18, r20
     b50:	35 07       	cpc	r19, r21
     b52:	48 f0       	brcs	.+18     	; 0xb66 <malloc+0x120>
     b54:	4e 0f       	add	r20, r30
     b56:	5f 1f       	adc	r21, r31
     b58:	50 93 33 01 	sts	0x0133, r21	; 0x800133 <__brkval+0x1>
     b5c:	40 93 32 01 	sts	0x0132, r20	; 0x800132 <__brkval>
     b60:	81 93       	st	Z+, r24
     b62:	91 93       	st	Z+, r25
     b64:	02 c0       	rjmp	.+4      	; 0xb6a <malloc+0x124>
     b66:	e0 e0       	ldi	r30, 0x00	; 0
     b68:	f0 e0       	ldi	r31, 0x00	; 0
     b6a:	cf 01       	movw	r24, r30
     b6c:	df 91       	pop	r29
     b6e:	cf 91       	pop	r28
     b70:	1f 91       	pop	r17
     b72:	0f 91       	pop	r16
     b74:	08 95       	ret

00000b76 <free>:
     b76:	cf 93       	push	r28
     b78:	df 93       	push	r29
     b7a:	00 97       	sbiw	r24, 0x00	; 0
     b7c:	09 f4       	brne	.+2      	; 0xb80 <free+0xa>
     b7e:	81 c0       	rjmp	.+258    	; 0xc82 <free+0x10c>
     b80:	fc 01       	movw	r30, r24
     b82:	32 97       	sbiw	r30, 0x02	; 2
     b84:	13 82       	std	Z+3, r1	; 0x03
     b86:	12 82       	std	Z+2, r1	; 0x02
     b88:	a0 91 34 01 	lds	r26, 0x0134	; 0x800134 <__flp>
     b8c:	b0 91 35 01 	lds	r27, 0x0135	; 0x800135 <__flp+0x1>
     b90:	10 97       	sbiw	r26, 0x00	; 0
     b92:	81 f4       	brne	.+32     	; 0xbb4 <free+0x3e>
     b94:	20 81       	ld	r18, Z
     b96:	31 81       	ldd	r19, Z+1	; 0x01
     b98:	82 0f       	add	r24, r18
     b9a:	93 1f       	adc	r25, r19
     b9c:	20 91 32 01 	lds	r18, 0x0132	; 0x800132 <__brkval>
     ba0:	30 91 33 01 	lds	r19, 0x0133	; 0x800133 <__brkval+0x1>
     ba4:	28 17       	cp	r18, r24
     ba6:	39 07       	cpc	r19, r25
     ba8:	51 f5       	brne	.+84     	; 0xbfe <free+0x88>
     baa:	f0 93 33 01 	sts	0x0133, r31	; 0x800133 <__brkval+0x1>
     bae:	e0 93 32 01 	sts	0x0132, r30	; 0x800132 <__brkval>
     bb2:	67 c0       	rjmp	.+206    	; 0xc82 <free+0x10c>
     bb4:	ed 01       	movw	r28, r26
     bb6:	20 e0       	ldi	r18, 0x00	; 0
     bb8:	30 e0       	ldi	r19, 0x00	; 0
     bba:	ce 17       	cp	r28, r30
     bbc:	df 07       	cpc	r29, r31
     bbe:	40 f4       	brcc	.+16     	; 0xbd0 <free+0x5a>
     bc0:	4a 81       	ldd	r20, Y+2	; 0x02
     bc2:	5b 81       	ldd	r21, Y+3	; 0x03
     bc4:	9e 01       	movw	r18, r28
     bc6:	41 15       	cp	r20, r1
     bc8:	51 05       	cpc	r21, r1
     bca:	f1 f0       	breq	.+60     	; 0xc08 <free+0x92>
     bcc:	ea 01       	movw	r28, r20
     bce:	f5 cf       	rjmp	.-22     	; 0xbba <free+0x44>
     bd0:	d3 83       	std	Z+3, r29	; 0x03
     bd2:	c2 83       	std	Z+2, r28	; 0x02
     bd4:	40 81       	ld	r20, Z
     bd6:	51 81       	ldd	r21, Z+1	; 0x01
     bd8:	84 0f       	add	r24, r20
     bda:	95 1f       	adc	r25, r21
     bdc:	c8 17       	cp	r28, r24
     bde:	d9 07       	cpc	r29, r25
     be0:	59 f4       	brne	.+22     	; 0xbf8 <free+0x82>
     be2:	88 81       	ld	r24, Y
     be4:	99 81       	ldd	r25, Y+1	; 0x01
     be6:	84 0f       	add	r24, r20
     be8:	95 1f       	adc	r25, r21
     bea:	02 96       	adiw	r24, 0x02	; 2
     bec:	91 83       	std	Z+1, r25	; 0x01
     bee:	80 83       	st	Z, r24
     bf0:	8a 81       	ldd	r24, Y+2	; 0x02
     bf2:	9b 81       	ldd	r25, Y+3	; 0x03
     bf4:	93 83       	std	Z+3, r25	; 0x03
     bf6:	82 83       	std	Z+2, r24	; 0x02
     bf8:	21 15       	cp	r18, r1
     bfa:	31 05       	cpc	r19, r1
     bfc:	29 f4       	brne	.+10     	; 0xc08 <free+0x92>
     bfe:	f0 93 35 01 	sts	0x0135, r31	; 0x800135 <__flp+0x1>
     c02:	e0 93 34 01 	sts	0x0134, r30	; 0x800134 <__flp>
     c06:	3d c0       	rjmp	.+122    	; 0xc82 <free+0x10c>
     c08:	e9 01       	movw	r28, r18
     c0a:	fb 83       	std	Y+3, r31	; 0x03
     c0c:	ea 83       	std	Y+2, r30	; 0x02
     c0e:	49 91       	ld	r20, Y+
     c10:	59 91       	ld	r21, Y+
     c12:	c4 0f       	add	r28, r20
     c14:	d5 1f       	adc	r29, r21
     c16:	ec 17       	cp	r30, r28
     c18:	fd 07       	cpc	r31, r29
     c1a:	61 f4       	brne	.+24     	; 0xc34 <free+0xbe>
     c1c:	80 81       	ld	r24, Z
     c1e:	91 81       	ldd	r25, Z+1	; 0x01
     c20:	84 0f       	add	r24, r20
     c22:	95 1f       	adc	r25, r21
     c24:	02 96       	adiw	r24, 0x02	; 2
     c26:	e9 01       	movw	r28, r18
     c28:	99 83       	std	Y+1, r25	; 0x01
     c2a:	88 83       	st	Y, r24
     c2c:	82 81       	ldd	r24, Z+2	; 0x02
     c2e:	93 81       	ldd	r25, Z+3	; 0x03
     c30:	9b 83       	std	Y+3, r25	; 0x03
     c32:	8a 83       	std	Y+2, r24	; 0x02
     c34:	e0 e0       	ldi	r30, 0x00	; 0
     c36:	f0 e0       	ldi	r31, 0x00	; 0
     c38:	12 96       	adiw	r26, 0x02	; 2
     c3a:	8d 91       	ld	r24, X+
     c3c:	9c 91       	ld	r25, X
     c3e:	13 97       	sbiw	r26, 0x03	; 3
     c40:	00 97       	sbiw	r24, 0x00	; 0
     c42:	19 f0       	breq	.+6      	; 0xc4a <free+0xd4>
     c44:	fd 01       	movw	r30, r26
     c46:	dc 01       	movw	r26, r24
     c48:	f7 cf       	rjmp	.-18     	; 0xc38 <free+0xc2>
     c4a:	8d 91       	ld	r24, X+
     c4c:	9c 91       	ld	r25, X
     c4e:	11 97       	sbiw	r26, 0x01	; 1
     c50:	9d 01       	movw	r18, r26
     c52:	2e 5f       	subi	r18, 0xFE	; 254
     c54:	3f 4f       	sbci	r19, 0xFF	; 255
     c56:	82 0f       	add	r24, r18
     c58:	93 1f       	adc	r25, r19
     c5a:	20 91 32 01 	lds	r18, 0x0132	; 0x800132 <__brkval>
     c5e:	30 91 33 01 	lds	r19, 0x0133	; 0x800133 <__brkval+0x1>
     c62:	28 17       	cp	r18, r24
     c64:	39 07       	cpc	r19, r25
     c66:	69 f4       	brne	.+26     	; 0xc82 <free+0x10c>
     c68:	30 97       	sbiw	r30, 0x00	; 0
     c6a:	29 f4       	brne	.+10     	; 0xc76 <free+0x100>
     c6c:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <__flp+0x1>
     c70:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <__flp>
     c74:	02 c0       	rjmp	.+4      	; 0xc7a <free+0x104>
     c76:	13 82       	std	Z+3, r1	; 0x03
     c78:	12 82       	std	Z+2, r1	; 0x02
     c7a:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <__brkval+0x1>
     c7e:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <__brkval>
     c82:	df 91       	pop	r29
     c84:	cf 91       	pop	r28
     c86:	08 95       	ret

00000c88 <sprintf>:
     c88:	0f 93       	push	r16
     c8a:	1f 93       	push	r17
     c8c:	cf 93       	push	r28
     c8e:	df 93       	push	r29
     c90:	cd b7       	in	r28, 0x3d	; 61
     c92:	de b7       	in	r29, 0x3e	; 62
     c94:	2e 97       	sbiw	r28, 0x0e	; 14
     c96:	0f b6       	in	r0, 0x3f	; 63
     c98:	f8 94       	cli
     c9a:	de bf       	out	0x3e, r29	; 62
     c9c:	0f be       	out	0x3f, r0	; 63
     c9e:	cd bf       	out	0x3d, r28	; 61
     ca0:	0d 89       	ldd	r16, Y+21	; 0x15
     ca2:	1e 89       	ldd	r17, Y+22	; 0x16
     ca4:	86 e0       	ldi	r24, 0x06	; 6
     ca6:	8c 83       	std	Y+4, r24	; 0x04
     ca8:	1a 83       	std	Y+2, r17	; 0x02
     caa:	09 83       	std	Y+1, r16	; 0x01
     cac:	8f ef       	ldi	r24, 0xFF	; 255
     cae:	9f e7       	ldi	r25, 0x7F	; 127
     cb0:	9e 83       	std	Y+6, r25	; 0x06
     cb2:	8d 83       	std	Y+5, r24	; 0x05
     cb4:	ae 01       	movw	r20, r28
     cb6:	47 5e       	subi	r20, 0xE7	; 231
     cb8:	5f 4f       	sbci	r21, 0xFF	; 255
     cba:	6f 89       	ldd	r22, Y+23	; 0x17
     cbc:	78 8d       	ldd	r23, Y+24	; 0x18
     cbe:	ce 01       	movw	r24, r28
     cc0:	01 96       	adiw	r24, 0x01	; 1
     cc2:	31 d0       	rcall	.+98     	; 0xd26 <vfprintf>
     cc4:	ef 81       	ldd	r30, Y+7	; 0x07
     cc6:	f8 85       	ldd	r31, Y+8	; 0x08
     cc8:	e0 0f       	add	r30, r16
     cca:	f1 1f       	adc	r31, r17
     ccc:	10 82       	st	Z, r1
     cce:	2e 96       	adiw	r28, 0x0e	; 14
     cd0:	0f b6       	in	r0, 0x3f	; 63
     cd2:	f8 94       	cli
     cd4:	de bf       	out	0x3e, r29	; 62
     cd6:	0f be       	out	0x3f, r0	; 63
     cd8:	cd bf       	out	0x3d, r28	; 61
     cda:	df 91       	pop	r29
     cdc:	cf 91       	pop	r28
     cde:	1f 91       	pop	r17
     ce0:	0f 91       	pop	r16
     ce2:	08 95       	ret

00000ce4 <sscanf>:
     ce4:	cf 93       	push	r28
     ce6:	df 93       	push	r29
     ce8:	cd b7       	in	r28, 0x3d	; 61
     cea:	de b7       	in	r29, 0x3e	; 62
     cec:	2e 97       	sbiw	r28, 0x0e	; 14
     cee:	0f b6       	in	r0, 0x3f	; 63
     cf0:	f8 94       	cli
     cf2:	de bf       	out	0x3e, r29	; 62
     cf4:	0f be       	out	0x3f, r0	; 63
     cf6:	cd bf       	out	0x3d, r28	; 61
     cf8:	85 e0       	ldi	r24, 0x05	; 5
     cfa:	8c 83       	std	Y+4, r24	; 0x04
     cfc:	8b 89       	ldd	r24, Y+19	; 0x13
     cfe:	9c 89       	ldd	r25, Y+20	; 0x14
     d00:	9a 83       	std	Y+2, r25	; 0x02
     d02:	89 83       	std	Y+1, r24	; 0x01
     d04:	ae 01       	movw	r20, r28
     d06:	49 5e       	subi	r20, 0xE9	; 233
     d08:	5f 4f       	sbci	r21, 0xFF	; 255
     d0a:	6d 89       	ldd	r22, Y+21	; 0x15
     d0c:	7e 89       	ldd	r23, Y+22	; 0x16
     d0e:	ce 01       	movw	r24, r28
     d10:	01 96       	adiw	r24, 0x01	; 1
     d12:	b8 d3       	rcall	.+1904   	; 0x1484 <vfscanf>
     d14:	2e 96       	adiw	r28, 0x0e	; 14
     d16:	0f b6       	in	r0, 0x3f	; 63
     d18:	f8 94       	cli
     d1a:	de bf       	out	0x3e, r29	; 62
     d1c:	0f be       	out	0x3f, r0	; 63
     d1e:	cd bf       	out	0x3d, r28	; 61
     d20:	df 91       	pop	r29
     d22:	cf 91       	pop	r28
     d24:	08 95       	ret

00000d26 <vfprintf>:
     d26:	2f 92       	push	r2
     d28:	3f 92       	push	r3
     d2a:	4f 92       	push	r4
     d2c:	5f 92       	push	r5
     d2e:	6f 92       	push	r6
     d30:	7f 92       	push	r7
     d32:	8f 92       	push	r8
     d34:	9f 92       	push	r9
     d36:	af 92       	push	r10
     d38:	bf 92       	push	r11
     d3a:	cf 92       	push	r12
     d3c:	df 92       	push	r13
     d3e:	ef 92       	push	r14
     d40:	ff 92       	push	r15
     d42:	0f 93       	push	r16
     d44:	1f 93       	push	r17
     d46:	cf 93       	push	r28
     d48:	df 93       	push	r29
     d4a:	cd b7       	in	r28, 0x3d	; 61
     d4c:	de b7       	in	r29, 0x3e	; 62
     d4e:	2b 97       	sbiw	r28, 0x0b	; 11
     d50:	0f b6       	in	r0, 0x3f	; 63
     d52:	f8 94       	cli
     d54:	de bf       	out	0x3e, r29	; 62
     d56:	0f be       	out	0x3f, r0	; 63
     d58:	cd bf       	out	0x3d, r28	; 61
     d5a:	6c 01       	movw	r12, r24
     d5c:	7b 01       	movw	r14, r22
     d5e:	8a 01       	movw	r16, r20
     d60:	fc 01       	movw	r30, r24
     d62:	17 82       	std	Z+7, r1	; 0x07
     d64:	16 82       	std	Z+6, r1	; 0x06
     d66:	83 81       	ldd	r24, Z+3	; 0x03
     d68:	81 ff       	sbrs	r24, 1
     d6a:	bf c1       	rjmp	.+894    	; 0x10ea <__DATA_REGION_LENGTH__+0xea>
     d6c:	ce 01       	movw	r24, r28
     d6e:	01 96       	adiw	r24, 0x01	; 1
     d70:	3c 01       	movw	r6, r24
     d72:	f6 01       	movw	r30, r12
     d74:	93 81       	ldd	r25, Z+3	; 0x03
     d76:	f7 01       	movw	r30, r14
     d78:	93 fd       	sbrc	r25, 3
     d7a:	85 91       	lpm	r24, Z+
     d7c:	93 ff       	sbrs	r25, 3
     d7e:	81 91       	ld	r24, Z+
     d80:	7f 01       	movw	r14, r30
     d82:	88 23       	and	r24, r24
     d84:	09 f4       	brne	.+2      	; 0xd88 <vfprintf+0x62>
     d86:	ad c1       	rjmp	.+858    	; 0x10e2 <__DATA_REGION_LENGTH__+0xe2>
     d88:	85 32       	cpi	r24, 0x25	; 37
     d8a:	39 f4       	brne	.+14     	; 0xd9a <vfprintf+0x74>
     d8c:	93 fd       	sbrc	r25, 3
     d8e:	85 91       	lpm	r24, Z+
     d90:	93 ff       	sbrs	r25, 3
     d92:	81 91       	ld	r24, Z+
     d94:	7f 01       	movw	r14, r30
     d96:	85 32       	cpi	r24, 0x25	; 37
     d98:	21 f4       	brne	.+8      	; 0xda2 <vfprintf+0x7c>
     d9a:	b6 01       	movw	r22, r12
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	f0 d4       	rcall	.+2528   	; 0x1780 <fputc>
     da0:	e8 cf       	rjmp	.-48     	; 0xd72 <vfprintf+0x4c>
     da2:	91 2c       	mov	r9, r1
     da4:	21 2c       	mov	r2, r1
     da6:	31 2c       	mov	r3, r1
     da8:	ff e1       	ldi	r31, 0x1F	; 31
     daa:	f3 15       	cp	r31, r3
     dac:	d8 f0       	brcs	.+54     	; 0xde4 <vfprintf+0xbe>
     dae:	8b 32       	cpi	r24, 0x2B	; 43
     db0:	79 f0       	breq	.+30     	; 0xdd0 <vfprintf+0xaa>
     db2:	38 f4       	brcc	.+14     	; 0xdc2 <vfprintf+0x9c>
     db4:	80 32       	cpi	r24, 0x20	; 32
     db6:	79 f0       	breq	.+30     	; 0xdd6 <vfprintf+0xb0>
     db8:	83 32       	cpi	r24, 0x23	; 35
     dba:	a1 f4       	brne	.+40     	; 0xde4 <vfprintf+0xbe>
     dbc:	23 2d       	mov	r18, r3
     dbe:	20 61       	ori	r18, 0x10	; 16
     dc0:	1d c0       	rjmp	.+58     	; 0xdfc <vfprintf+0xd6>
     dc2:	8d 32       	cpi	r24, 0x2D	; 45
     dc4:	61 f0       	breq	.+24     	; 0xdde <vfprintf+0xb8>
     dc6:	80 33       	cpi	r24, 0x30	; 48
     dc8:	69 f4       	brne	.+26     	; 0xde4 <vfprintf+0xbe>
     dca:	23 2d       	mov	r18, r3
     dcc:	21 60       	ori	r18, 0x01	; 1
     dce:	16 c0       	rjmp	.+44     	; 0xdfc <vfprintf+0xd6>
     dd0:	83 2d       	mov	r24, r3
     dd2:	82 60       	ori	r24, 0x02	; 2
     dd4:	38 2e       	mov	r3, r24
     dd6:	e3 2d       	mov	r30, r3
     dd8:	e4 60       	ori	r30, 0x04	; 4
     dda:	3e 2e       	mov	r3, r30
     ddc:	2a c0       	rjmp	.+84     	; 0xe32 <vfprintf+0x10c>
     dde:	f3 2d       	mov	r31, r3
     de0:	f8 60       	ori	r31, 0x08	; 8
     de2:	1d c0       	rjmp	.+58     	; 0xe1e <vfprintf+0xf8>
     de4:	37 fc       	sbrc	r3, 7
     de6:	2d c0       	rjmp	.+90     	; 0xe42 <vfprintf+0x11c>
     de8:	20 ed       	ldi	r18, 0xD0	; 208
     dea:	28 0f       	add	r18, r24
     dec:	2a 30       	cpi	r18, 0x0A	; 10
     dee:	40 f0       	brcs	.+16     	; 0xe00 <vfprintf+0xda>
     df0:	8e 32       	cpi	r24, 0x2E	; 46
     df2:	b9 f4       	brne	.+46     	; 0xe22 <vfprintf+0xfc>
     df4:	36 fc       	sbrc	r3, 6
     df6:	75 c1       	rjmp	.+746    	; 0x10e2 <__DATA_REGION_LENGTH__+0xe2>
     df8:	23 2d       	mov	r18, r3
     dfa:	20 64       	ori	r18, 0x40	; 64
     dfc:	32 2e       	mov	r3, r18
     dfe:	19 c0       	rjmp	.+50     	; 0xe32 <vfprintf+0x10c>
     e00:	36 fe       	sbrs	r3, 6
     e02:	06 c0       	rjmp	.+12     	; 0xe10 <vfprintf+0xea>
     e04:	8a e0       	ldi	r24, 0x0A	; 10
     e06:	98 9e       	mul	r9, r24
     e08:	20 0d       	add	r18, r0
     e0a:	11 24       	eor	r1, r1
     e0c:	92 2e       	mov	r9, r18
     e0e:	11 c0       	rjmp	.+34     	; 0xe32 <vfprintf+0x10c>
     e10:	ea e0       	ldi	r30, 0x0A	; 10
     e12:	2e 9e       	mul	r2, r30
     e14:	20 0d       	add	r18, r0
     e16:	11 24       	eor	r1, r1
     e18:	22 2e       	mov	r2, r18
     e1a:	f3 2d       	mov	r31, r3
     e1c:	f0 62       	ori	r31, 0x20	; 32
     e1e:	3f 2e       	mov	r3, r31
     e20:	08 c0       	rjmp	.+16     	; 0xe32 <vfprintf+0x10c>
     e22:	8c 36       	cpi	r24, 0x6C	; 108
     e24:	21 f4       	brne	.+8      	; 0xe2e <vfprintf+0x108>
     e26:	83 2d       	mov	r24, r3
     e28:	80 68       	ori	r24, 0x80	; 128
     e2a:	38 2e       	mov	r3, r24
     e2c:	02 c0       	rjmp	.+4      	; 0xe32 <vfprintf+0x10c>
     e2e:	88 36       	cpi	r24, 0x68	; 104
     e30:	41 f4       	brne	.+16     	; 0xe42 <vfprintf+0x11c>
     e32:	f7 01       	movw	r30, r14
     e34:	93 fd       	sbrc	r25, 3
     e36:	85 91       	lpm	r24, Z+
     e38:	93 ff       	sbrs	r25, 3
     e3a:	81 91       	ld	r24, Z+
     e3c:	7f 01       	movw	r14, r30
     e3e:	81 11       	cpse	r24, r1
     e40:	b3 cf       	rjmp	.-154    	; 0xda8 <vfprintf+0x82>
     e42:	98 2f       	mov	r25, r24
     e44:	9f 7d       	andi	r25, 0xDF	; 223
     e46:	95 54       	subi	r25, 0x45	; 69
     e48:	93 30       	cpi	r25, 0x03	; 3
     e4a:	28 f4       	brcc	.+10     	; 0xe56 <vfprintf+0x130>
     e4c:	0c 5f       	subi	r16, 0xFC	; 252
     e4e:	1f 4f       	sbci	r17, 0xFF	; 255
     e50:	9f e3       	ldi	r25, 0x3F	; 63
     e52:	99 83       	std	Y+1, r25	; 0x01
     e54:	0d c0       	rjmp	.+26     	; 0xe70 <vfprintf+0x14a>
     e56:	83 36       	cpi	r24, 0x63	; 99
     e58:	31 f0       	breq	.+12     	; 0xe66 <vfprintf+0x140>
     e5a:	83 37       	cpi	r24, 0x73	; 115
     e5c:	71 f0       	breq	.+28     	; 0xe7a <vfprintf+0x154>
     e5e:	83 35       	cpi	r24, 0x53	; 83
     e60:	09 f0       	breq	.+2      	; 0xe64 <vfprintf+0x13e>
     e62:	55 c0       	rjmp	.+170    	; 0xf0e <vfprintf+0x1e8>
     e64:	20 c0       	rjmp	.+64     	; 0xea6 <vfprintf+0x180>
     e66:	f8 01       	movw	r30, r16
     e68:	80 81       	ld	r24, Z
     e6a:	89 83       	std	Y+1, r24	; 0x01
     e6c:	0e 5f       	subi	r16, 0xFE	; 254
     e6e:	1f 4f       	sbci	r17, 0xFF	; 255
     e70:	88 24       	eor	r8, r8
     e72:	83 94       	inc	r8
     e74:	91 2c       	mov	r9, r1
     e76:	53 01       	movw	r10, r6
     e78:	12 c0       	rjmp	.+36     	; 0xe9e <vfprintf+0x178>
     e7a:	28 01       	movw	r4, r16
     e7c:	f2 e0       	ldi	r31, 0x02	; 2
     e7e:	4f 0e       	add	r4, r31
     e80:	51 1c       	adc	r5, r1
     e82:	f8 01       	movw	r30, r16
     e84:	a0 80       	ld	r10, Z
     e86:	b1 80       	ldd	r11, Z+1	; 0x01
     e88:	36 fe       	sbrs	r3, 6
     e8a:	03 c0       	rjmp	.+6      	; 0xe92 <vfprintf+0x16c>
     e8c:	69 2d       	mov	r22, r9
     e8e:	70 e0       	ldi	r23, 0x00	; 0
     e90:	02 c0       	rjmp	.+4      	; 0xe96 <vfprintf+0x170>
     e92:	6f ef       	ldi	r22, 0xFF	; 255
     e94:	7f ef       	ldi	r23, 0xFF	; 255
     e96:	c5 01       	movw	r24, r10
     e98:	2a d4       	rcall	.+2132   	; 0x16ee <strnlen>
     e9a:	4c 01       	movw	r8, r24
     e9c:	82 01       	movw	r16, r4
     e9e:	f3 2d       	mov	r31, r3
     ea0:	ff 77       	andi	r31, 0x7F	; 127
     ea2:	3f 2e       	mov	r3, r31
     ea4:	15 c0       	rjmp	.+42     	; 0xed0 <vfprintf+0x1aa>
     ea6:	28 01       	movw	r4, r16
     ea8:	22 e0       	ldi	r18, 0x02	; 2
     eaa:	42 0e       	add	r4, r18
     eac:	51 1c       	adc	r5, r1
     eae:	f8 01       	movw	r30, r16
     eb0:	a0 80       	ld	r10, Z
     eb2:	b1 80       	ldd	r11, Z+1	; 0x01
     eb4:	36 fe       	sbrs	r3, 6
     eb6:	03 c0       	rjmp	.+6      	; 0xebe <vfprintf+0x198>
     eb8:	69 2d       	mov	r22, r9
     eba:	70 e0       	ldi	r23, 0x00	; 0
     ebc:	02 c0       	rjmp	.+4      	; 0xec2 <vfprintf+0x19c>
     ebe:	6f ef       	ldi	r22, 0xFF	; 255
     ec0:	7f ef       	ldi	r23, 0xFF	; 255
     ec2:	c5 01       	movw	r24, r10
     ec4:	09 d4       	rcall	.+2066   	; 0x16d8 <strnlen_P>
     ec6:	4c 01       	movw	r8, r24
     ec8:	f3 2d       	mov	r31, r3
     eca:	f0 68       	ori	r31, 0x80	; 128
     ecc:	3f 2e       	mov	r3, r31
     ece:	82 01       	movw	r16, r4
     ed0:	33 fc       	sbrc	r3, 3
     ed2:	19 c0       	rjmp	.+50     	; 0xf06 <vfprintf+0x1e0>
     ed4:	82 2d       	mov	r24, r2
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	88 16       	cp	r8, r24
     eda:	99 06       	cpc	r9, r25
     edc:	a0 f4       	brcc	.+40     	; 0xf06 <vfprintf+0x1e0>
     ede:	b6 01       	movw	r22, r12
     ee0:	80 e2       	ldi	r24, 0x20	; 32
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	4d d4       	rcall	.+2202   	; 0x1780 <fputc>
     ee6:	2a 94       	dec	r2
     ee8:	f5 cf       	rjmp	.-22     	; 0xed4 <vfprintf+0x1ae>
     eea:	f5 01       	movw	r30, r10
     eec:	37 fc       	sbrc	r3, 7
     eee:	85 91       	lpm	r24, Z+
     ef0:	37 fe       	sbrs	r3, 7
     ef2:	81 91       	ld	r24, Z+
     ef4:	5f 01       	movw	r10, r30
     ef6:	b6 01       	movw	r22, r12
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	42 d4       	rcall	.+2180   	; 0x1780 <fputc>
     efc:	21 10       	cpse	r2, r1
     efe:	2a 94       	dec	r2
     f00:	21 e0       	ldi	r18, 0x01	; 1
     f02:	82 1a       	sub	r8, r18
     f04:	91 08       	sbc	r9, r1
     f06:	81 14       	cp	r8, r1
     f08:	91 04       	cpc	r9, r1
     f0a:	79 f7       	brne	.-34     	; 0xeea <vfprintf+0x1c4>
     f0c:	e1 c0       	rjmp	.+450    	; 0x10d0 <__DATA_REGION_LENGTH__+0xd0>
     f0e:	84 36       	cpi	r24, 0x64	; 100
     f10:	11 f0       	breq	.+4      	; 0xf16 <vfprintf+0x1f0>
     f12:	89 36       	cpi	r24, 0x69	; 105
     f14:	39 f5       	brne	.+78     	; 0xf64 <vfprintf+0x23e>
     f16:	f8 01       	movw	r30, r16
     f18:	37 fe       	sbrs	r3, 7
     f1a:	07 c0       	rjmp	.+14     	; 0xf2a <vfprintf+0x204>
     f1c:	60 81       	ld	r22, Z
     f1e:	71 81       	ldd	r23, Z+1	; 0x01
     f20:	82 81       	ldd	r24, Z+2	; 0x02
     f22:	93 81       	ldd	r25, Z+3	; 0x03
     f24:	0c 5f       	subi	r16, 0xFC	; 252
     f26:	1f 4f       	sbci	r17, 0xFF	; 255
     f28:	08 c0       	rjmp	.+16     	; 0xf3a <vfprintf+0x214>
     f2a:	60 81       	ld	r22, Z
     f2c:	71 81       	ldd	r23, Z+1	; 0x01
     f2e:	07 2e       	mov	r0, r23
     f30:	00 0c       	add	r0, r0
     f32:	88 0b       	sbc	r24, r24
     f34:	99 0b       	sbc	r25, r25
     f36:	0e 5f       	subi	r16, 0xFE	; 254
     f38:	1f 4f       	sbci	r17, 0xFF	; 255
     f3a:	f3 2d       	mov	r31, r3
     f3c:	ff 76       	andi	r31, 0x6F	; 111
     f3e:	3f 2e       	mov	r3, r31
     f40:	97 ff       	sbrs	r25, 7
     f42:	09 c0       	rjmp	.+18     	; 0xf56 <vfprintf+0x230>
     f44:	90 95       	com	r25
     f46:	80 95       	com	r24
     f48:	70 95       	com	r23
     f4a:	61 95       	neg	r22
     f4c:	7f 4f       	sbci	r23, 0xFF	; 255
     f4e:	8f 4f       	sbci	r24, 0xFF	; 255
     f50:	9f 4f       	sbci	r25, 0xFF	; 255
     f52:	f0 68       	ori	r31, 0x80	; 128
     f54:	3f 2e       	mov	r3, r31
     f56:	2a e0       	ldi	r18, 0x0A	; 10
     f58:	30 e0       	ldi	r19, 0x00	; 0
     f5a:	a3 01       	movw	r20, r6
     f5c:	66 d4       	rcall	.+2252   	; 0x182a <__ultoa_invert>
     f5e:	88 2e       	mov	r8, r24
     f60:	86 18       	sub	r8, r6
     f62:	44 c0       	rjmp	.+136    	; 0xfec <vfprintf+0x2c6>
     f64:	85 37       	cpi	r24, 0x75	; 117
     f66:	31 f4       	brne	.+12     	; 0xf74 <vfprintf+0x24e>
     f68:	23 2d       	mov	r18, r3
     f6a:	2f 7e       	andi	r18, 0xEF	; 239
     f6c:	b2 2e       	mov	r11, r18
     f6e:	2a e0       	ldi	r18, 0x0A	; 10
     f70:	30 e0       	ldi	r19, 0x00	; 0
     f72:	25 c0       	rjmp	.+74     	; 0xfbe <vfprintf+0x298>
     f74:	93 2d       	mov	r25, r3
     f76:	99 7f       	andi	r25, 0xF9	; 249
     f78:	b9 2e       	mov	r11, r25
     f7a:	8f 36       	cpi	r24, 0x6F	; 111
     f7c:	c1 f0       	breq	.+48     	; 0xfae <vfprintf+0x288>
     f7e:	18 f4       	brcc	.+6      	; 0xf86 <vfprintf+0x260>
     f80:	88 35       	cpi	r24, 0x58	; 88
     f82:	79 f0       	breq	.+30     	; 0xfa2 <vfprintf+0x27c>
     f84:	ae c0       	rjmp	.+348    	; 0x10e2 <__DATA_REGION_LENGTH__+0xe2>
     f86:	80 37       	cpi	r24, 0x70	; 112
     f88:	19 f0       	breq	.+6      	; 0xf90 <vfprintf+0x26a>
     f8a:	88 37       	cpi	r24, 0x78	; 120
     f8c:	21 f0       	breq	.+8      	; 0xf96 <vfprintf+0x270>
     f8e:	a9 c0       	rjmp	.+338    	; 0x10e2 <__DATA_REGION_LENGTH__+0xe2>
     f90:	e9 2f       	mov	r30, r25
     f92:	e0 61       	ori	r30, 0x10	; 16
     f94:	be 2e       	mov	r11, r30
     f96:	b4 fe       	sbrs	r11, 4
     f98:	0d c0       	rjmp	.+26     	; 0xfb4 <vfprintf+0x28e>
     f9a:	fb 2d       	mov	r31, r11
     f9c:	f4 60       	ori	r31, 0x04	; 4
     f9e:	bf 2e       	mov	r11, r31
     fa0:	09 c0       	rjmp	.+18     	; 0xfb4 <vfprintf+0x28e>
     fa2:	34 fe       	sbrs	r3, 4
     fa4:	0a c0       	rjmp	.+20     	; 0xfba <vfprintf+0x294>
     fa6:	29 2f       	mov	r18, r25
     fa8:	26 60       	ori	r18, 0x06	; 6
     faa:	b2 2e       	mov	r11, r18
     fac:	06 c0       	rjmp	.+12     	; 0xfba <vfprintf+0x294>
     fae:	28 e0       	ldi	r18, 0x08	; 8
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	05 c0       	rjmp	.+10     	; 0xfbe <vfprintf+0x298>
     fb4:	20 e1       	ldi	r18, 0x10	; 16
     fb6:	30 e0       	ldi	r19, 0x00	; 0
     fb8:	02 c0       	rjmp	.+4      	; 0xfbe <vfprintf+0x298>
     fba:	20 e1       	ldi	r18, 0x10	; 16
     fbc:	32 e0       	ldi	r19, 0x02	; 2
     fbe:	f8 01       	movw	r30, r16
     fc0:	b7 fe       	sbrs	r11, 7
     fc2:	07 c0       	rjmp	.+14     	; 0xfd2 <vfprintf+0x2ac>
     fc4:	60 81       	ld	r22, Z
     fc6:	71 81       	ldd	r23, Z+1	; 0x01
     fc8:	82 81       	ldd	r24, Z+2	; 0x02
     fca:	93 81       	ldd	r25, Z+3	; 0x03
     fcc:	0c 5f       	subi	r16, 0xFC	; 252
     fce:	1f 4f       	sbci	r17, 0xFF	; 255
     fd0:	06 c0       	rjmp	.+12     	; 0xfde <vfprintf+0x2b8>
     fd2:	60 81       	ld	r22, Z
     fd4:	71 81       	ldd	r23, Z+1	; 0x01
     fd6:	80 e0       	ldi	r24, 0x00	; 0
     fd8:	90 e0       	ldi	r25, 0x00	; 0
     fda:	0e 5f       	subi	r16, 0xFE	; 254
     fdc:	1f 4f       	sbci	r17, 0xFF	; 255
     fde:	a3 01       	movw	r20, r6
     fe0:	24 d4       	rcall	.+2120   	; 0x182a <__ultoa_invert>
     fe2:	88 2e       	mov	r8, r24
     fe4:	86 18       	sub	r8, r6
     fe6:	fb 2d       	mov	r31, r11
     fe8:	ff 77       	andi	r31, 0x7F	; 127
     fea:	3f 2e       	mov	r3, r31
     fec:	36 fe       	sbrs	r3, 6
     fee:	0d c0       	rjmp	.+26     	; 0x100a <__DATA_REGION_LENGTH__+0xa>
     ff0:	23 2d       	mov	r18, r3
     ff2:	2e 7f       	andi	r18, 0xFE	; 254
     ff4:	a2 2e       	mov	r10, r18
     ff6:	89 14       	cp	r8, r9
     ff8:	58 f4       	brcc	.+22     	; 0x1010 <__DATA_REGION_LENGTH__+0x10>
     ffa:	34 fe       	sbrs	r3, 4
     ffc:	0b c0       	rjmp	.+22     	; 0x1014 <__DATA_REGION_LENGTH__+0x14>
     ffe:	32 fc       	sbrc	r3, 2
    1000:	09 c0       	rjmp	.+18     	; 0x1014 <__DATA_REGION_LENGTH__+0x14>
    1002:	83 2d       	mov	r24, r3
    1004:	8e 7e       	andi	r24, 0xEE	; 238
    1006:	a8 2e       	mov	r10, r24
    1008:	05 c0       	rjmp	.+10     	; 0x1014 <__DATA_REGION_LENGTH__+0x14>
    100a:	b8 2c       	mov	r11, r8
    100c:	a3 2c       	mov	r10, r3
    100e:	03 c0       	rjmp	.+6      	; 0x1016 <__DATA_REGION_LENGTH__+0x16>
    1010:	b8 2c       	mov	r11, r8
    1012:	01 c0       	rjmp	.+2      	; 0x1016 <__DATA_REGION_LENGTH__+0x16>
    1014:	b9 2c       	mov	r11, r9
    1016:	a4 fe       	sbrs	r10, 4
    1018:	0f c0       	rjmp	.+30     	; 0x1038 <__DATA_REGION_LENGTH__+0x38>
    101a:	fe 01       	movw	r30, r28
    101c:	e8 0d       	add	r30, r8
    101e:	f1 1d       	adc	r31, r1
    1020:	80 81       	ld	r24, Z
    1022:	80 33       	cpi	r24, 0x30	; 48
    1024:	21 f4       	brne	.+8      	; 0x102e <__DATA_REGION_LENGTH__+0x2e>
    1026:	9a 2d       	mov	r25, r10
    1028:	99 7e       	andi	r25, 0xE9	; 233
    102a:	a9 2e       	mov	r10, r25
    102c:	09 c0       	rjmp	.+18     	; 0x1040 <__DATA_REGION_LENGTH__+0x40>
    102e:	a2 fe       	sbrs	r10, 2
    1030:	06 c0       	rjmp	.+12     	; 0x103e <__DATA_REGION_LENGTH__+0x3e>
    1032:	b3 94       	inc	r11
    1034:	b3 94       	inc	r11
    1036:	04 c0       	rjmp	.+8      	; 0x1040 <__DATA_REGION_LENGTH__+0x40>
    1038:	8a 2d       	mov	r24, r10
    103a:	86 78       	andi	r24, 0x86	; 134
    103c:	09 f0       	breq	.+2      	; 0x1040 <__DATA_REGION_LENGTH__+0x40>
    103e:	b3 94       	inc	r11
    1040:	a3 fc       	sbrc	r10, 3
    1042:	10 c0       	rjmp	.+32     	; 0x1064 <__DATA_REGION_LENGTH__+0x64>
    1044:	a0 fe       	sbrs	r10, 0
    1046:	06 c0       	rjmp	.+12     	; 0x1054 <__DATA_REGION_LENGTH__+0x54>
    1048:	b2 14       	cp	r11, r2
    104a:	80 f4       	brcc	.+32     	; 0x106c <__DATA_REGION_LENGTH__+0x6c>
    104c:	28 0c       	add	r2, r8
    104e:	92 2c       	mov	r9, r2
    1050:	9b 18       	sub	r9, r11
    1052:	0d c0       	rjmp	.+26     	; 0x106e <__DATA_REGION_LENGTH__+0x6e>
    1054:	b2 14       	cp	r11, r2
    1056:	58 f4       	brcc	.+22     	; 0x106e <__DATA_REGION_LENGTH__+0x6e>
    1058:	b6 01       	movw	r22, r12
    105a:	80 e2       	ldi	r24, 0x20	; 32
    105c:	90 e0       	ldi	r25, 0x00	; 0
    105e:	90 d3       	rcall	.+1824   	; 0x1780 <fputc>
    1060:	b3 94       	inc	r11
    1062:	f8 cf       	rjmp	.-16     	; 0x1054 <__DATA_REGION_LENGTH__+0x54>
    1064:	b2 14       	cp	r11, r2
    1066:	18 f4       	brcc	.+6      	; 0x106e <__DATA_REGION_LENGTH__+0x6e>
    1068:	2b 18       	sub	r2, r11
    106a:	02 c0       	rjmp	.+4      	; 0x1070 <__DATA_REGION_LENGTH__+0x70>
    106c:	98 2c       	mov	r9, r8
    106e:	21 2c       	mov	r2, r1
    1070:	a4 fe       	sbrs	r10, 4
    1072:	0f c0       	rjmp	.+30     	; 0x1092 <__DATA_REGION_LENGTH__+0x92>
    1074:	b6 01       	movw	r22, r12
    1076:	80 e3       	ldi	r24, 0x30	; 48
    1078:	90 e0       	ldi	r25, 0x00	; 0
    107a:	82 d3       	rcall	.+1796   	; 0x1780 <fputc>
    107c:	a2 fe       	sbrs	r10, 2
    107e:	16 c0       	rjmp	.+44     	; 0x10ac <__DATA_REGION_LENGTH__+0xac>
    1080:	a1 fc       	sbrc	r10, 1
    1082:	03 c0       	rjmp	.+6      	; 0x108a <__DATA_REGION_LENGTH__+0x8a>
    1084:	88 e7       	ldi	r24, 0x78	; 120
    1086:	90 e0       	ldi	r25, 0x00	; 0
    1088:	02 c0       	rjmp	.+4      	; 0x108e <__DATA_REGION_LENGTH__+0x8e>
    108a:	88 e5       	ldi	r24, 0x58	; 88
    108c:	90 e0       	ldi	r25, 0x00	; 0
    108e:	b6 01       	movw	r22, r12
    1090:	0c c0       	rjmp	.+24     	; 0x10aa <__DATA_REGION_LENGTH__+0xaa>
    1092:	8a 2d       	mov	r24, r10
    1094:	86 78       	andi	r24, 0x86	; 134
    1096:	51 f0       	breq	.+20     	; 0x10ac <__DATA_REGION_LENGTH__+0xac>
    1098:	a1 fe       	sbrs	r10, 1
    109a:	02 c0       	rjmp	.+4      	; 0x10a0 <__DATA_REGION_LENGTH__+0xa0>
    109c:	8b e2       	ldi	r24, 0x2B	; 43
    109e:	01 c0       	rjmp	.+2      	; 0x10a2 <__DATA_REGION_LENGTH__+0xa2>
    10a0:	80 e2       	ldi	r24, 0x20	; 32
    10a2:	a7 fc       	sbrc	r10, 7
    10a4:	8d e2       	ldi	r24, 0x2D	; 45
    10a6:	b6 01       	movw	r22, r12
    10a8:	90 e0       	ldi	r25, 0x00	; 0
    10aa:	6a d3       	rcall	.+1748   	; 0x1780 <fputc>
    10ac:	89 14       	cp	r8, r9
    10ae:	30 f4       	brcc	.+12     	; 0x10bc <__DATA_REGION_LENGTH__+0xbc>
    10b0:	b6 01       	movw	r22, r12
    10b2:	80 e3       	ldi	r24, 0x30	; 48
    10b4:	90 e0       	ldi	r25, 0x00	; 0
    10b6:	64 d3       	rcall	.+1736   	; 0x1780 <fputc>
    10b8:	9a 94       	dec	r9
    10ba:	f8 cf       	rjmp	.-16     	; 0x10ac <__DATA_REGION_LENGTH__+0xac>
    10bc:	8a 94       	dec	r8
    10be:	f3 01       	movw	r30, r6
    10c0:	e8 0d       	add	r30, r8
    10c2:	f1 1d       	adc	r31, r1
    10c4:	80 81       	ld	r24, Z
    10c6:	b6 01       	movw	r22, r12
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	5a d3       	rcall	.+1716   	; 0x1780 <fputc>
    10cc:	81 10       	cpse	r8, r1
    10ce:	f6 cf       	rjmp	.-20     	; 0x10bc <__DATA_REGION_LENGTH__+0xbc>
    10d0:	22 20       	and	r2, r2
    10d2:	09 f4       	brne	.+2      	; 0x10d6 <__DATA_REGION_LENGTH__+0xd6>
    10d4:	4e ce       	rjmp	.-868    	; 0xd72 <vfprintf+0x4c>
    10d6:	b6 01       	movw	r22, r12
    10d8:	80 e2       	ldi	r24, 0x20	; 32
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	51 d3       	rcall	.+1698   	; 0x1780 <fputc>
    10de:	2a 94       	dec	r2
    10e0:	f7 cf       	rjmp	.-18     	; 0x10d0 <__DATA_REGION_LENGTH__+0xd0>
    10e2:	f6 01       	movw	r30, r12
    10e4:	86 81       	ldd	r24, Z+6	; 0x06
    10e6:	97 81       	ldd	r25, Z+7	; 0x07
    10e8:	02 c0       	rjmp	.+4      	; 0x10ee <__DATA_REGION_LENGTH__+0xee>
    10ea:	8f ef       	ldi	r24, 0xFF	; 255
    10ec:	9f ef       	ldi	r25, 0xFF	; 255
    10ee:	2b 96       	adiw	r28, 0x0b	; 11
    10f0:	0f b6       	in	r0, 0x3f	; 63
    10f2:	f8 94       	cli
    10f4:	de bf       	out	0x3e, r29	; 62
    10f6:	0f be       	out	0x3f, r0	; 63
    10f8:	cd bf       	out	0x3d, r28	; 61
    10fa:	df 91       	pop	r29
    10fc:	cf 91       	pop	r28
    10fe:	1f 91       	pop	r17
    1100:	0f 91       	pop	r16
    1102:	ff 90       	pop	r15
    1104:	ef 90       	pop	r14
    1106:	df 90       	pop	r13
    1108:	cf 90       	pop	r12
    110a:	bf 90       	pop	r11
    110c:	af 90       	pop	r10
    110e:	9f 90       	pop	r9
    1110:	8f 90       	pop	r8
    1112:	7f 90       	pop	r7
    1114:	6f 90       	pop	r6
    1116:	5f 90       	pop	r5
    1118:	4f 90       	pop	r4
    111a:	3f 90       	pop	r3
    111c:	2f 90       	pop	r2
    111e:	08 95       	ret

00001120 <putval>:
    1120:	20 fd       	sbrc	r18, 0
    1122:	09 c0       	rjmp	.+18     	; 0x1136 <putval+0x16>
    1124:	fc 01       	movw	r30, r24
    1126:	23 fd       	sbrc	r18, 3
    1128:	05 c0       	rjmp	.+10     	; 0x1134 <putval+0x14>
    112a:	22 ff       	sbrs	r18, 2
    112c:	02 c0       	rjmp	.+4      	; 0x1132 <putval+0x12>
    112e:	73 83       	std	Z+3, r23	; 0x03
    1130:	62 83       	std	Z+2, r22	; 0x02
    1132:	51 83       	std	Z+1, r21	; 0x01
    1134:	40 83       	st	Z, r20
    1136:	08 95       	ret

00001138 <mulacc>:
    1138:	44 fd       	sbrc	r20, 4
    113a:	17 c0       	rjmp	.+46     	; 0x116a <mulacc+0x32>
    113c:	46 fd       	sbrc	r20, 6
    113e:	17 c0       	rjmp	.+46     	; 0x116e <mulacc+0x36>
    1140:	ab 01       	movw	r20, r22
    1142:	bc 01       	movw	r22, r24
    1144:	da 01       	movw	r26, r20
    1146:	fb 01       	movw	r30, r22
    1148:	aa 0f       	add	r26, r26
    114a:	bb 1f       	adc	r27, r27
    114c:	ee 1f       	adc	r30, r30
    114e:	ff 1f       	adc	r31, r31
    1150:	10 94       	com	r1
    1152:	d1 f7       	brne	.-12     	; 0x1148 <mulacc+0x10>
    1154:	4a 0f       	add	r20, r26
    1156:	5b 1f       	adc	r21, r27
    1158:	6e 1f       	adc	r22, r30
    115a:	7f 1f       	adc	r23, r31
    115c:	cb 01       	movw	r24, r22
    115e:	ba 01       	movw	r22, r20
    1160:	66 0f       	add	r22, r22
    1162:	77 1f       	adc	r23, r23
    1164:	88 1f       	adc	r24, r24
    1166:	99 1f       	adc	r25, r25
    1168:	09 c0       	rjmp	.+18     	; 0x117c <mulacc+0x44>
    116a:	33 e0       	ldi	r19, 0x03	; 3
    116c:	01 c0       	rjmp	.+2      	; 0x1170 <mulacc+0x38>
    116e:	34 e0       	ldi	r19, 0x04	; 4
    1170:	66 0f       	add	r22, r22
    1172:	77 1f       	adc	r23, r23
    1174:	88 1f       	adc	r24, r24
    1176:	99 1f       	adc	r25, r25
    1178:	31 50       	subi	r19, 0x01	; 1
    117a:	d1 f7       	brne	.-12     	; 0x1170 <mulacc+0x38>
    117c:	62 0f       	add	r22, r18
    117e:	71 1d       	adc	r23, r1
    1180:	81 1d       	adc	r24, r1
    1182:	91 1d       	adc	r25, r1
    1184:	08 95       	ret

00001186 <skip_spaces>:
    1186:	0f 93       	push	r16
    1188:	1f 93       	push	r17
    118a:	cf 93       	push	r28
    118c:	df 93       	push	r29
    118e:	8c 01       	movw	r16, r24
    1190:	c8 01       	movw	r24, r16
    1192:	b8 d2       	rcall	.+1392   	; 0x1704 <fgetc>
    1194:	ec 01       	movw	r28, r24
    1196:	97 fd       	sbrc	r25, 7
    1198:	06 c0       	rjmp	.+12     	; 0x11a6 <skip_spaces+0x20>
    119a:	8b d2       	rcall	.+1302   	; 0x16b2 <isspace>
    119c:	89 2b       	or	r24, r25
    119e:	c1 f7       	brne	.-16     	; 0x1190 <skip_spaces+0xa>
    11a0:	b8 01       	movw	r22, r16
    11a2:	ce 01       	movw	r24, r28
    11a4:	29 d3       	rcall	.+1618   	; 0x17f8 <ungetc>
    11a6:	ce 01       	movw	r24, r28
    11a8:	df 91       	pop	r29
    11aa:	cf 91       	pop	r28
    11ac:	1f 91       	pop	r17
    11ae:	0f 91       	pop	r16
    11b0:	08 95       	ret

000011b2 <conv_int>:
    11b2:	8f 92       	push	r8
    11b4:	9f 92       	push	r9
    11b6:	af 92       	push	r10
    11b8:	bf 92       	push	r11
    11ba:	ef 92       	push	r14
    11bc:	ff 92       	push	r15
    11be:	0f 93       	push	r16
    11c0:	1f 93       	push	r17
    11c2:	cf 93       	push	r28
    11c4:	df 93       	push	r29
    11c6:	8c 01       	movw	r16, r24
    11c8:	d6 2f       	mov	r29, r22
    11ca:	7a 01       	movw	r14, r20
    11cc:	b2 2e       	mov	r11, r18
    11ce:	9a d2       	rcall	.+1332   	; 0x1704 <fgetc>
    11d0:	9c 01       	movw	r18, r24
    11d2:	33 27       	eor	r19, r19
    11d4:	2b 32       	cpi	r18, 0x2B	; 43
    11d6:	31 05       	cpc	r19, r1
    11d8:	31 f0       	breq	.+12     	; 0x11e6 <conv_int+0x34>
    11da:	2d 32       	cpi	r18, 0x2D	; 45
    11dc:	31 05       	cpc	r19, r1
    11de:	59 f4       	brne	.+22     	; 0x11f6 <conv_int+0x44>
    11e0:	8b 2d       	mov	r24, r11
    11e2:	80 68       	ori	r24, 0x80	; 128
    11e4:	b8 2e       	mov	r11, r24
    11e6:	d1 50       	subi	r29, 0x01	; 1
    11e8:	11 f4       	brne	.+4      	; 0x11ee <conv_int+0x3c>
    11ea:	80 e0       	ldi	r24, 0x00	; 0
    11ec:	61 c0       	rjmp	.+194    	; 0x12b0 <conv_int+0xfe>
    11ee:	c8 01       	movw	r24, r16
    11f0:	89 d2       	rcall	.+1298   	; 0x1704 <fgetc>
    11f2:	97 fd       	sbrc	r25, 7
    11f4:	fa cf       	rjmp	.-12     	; 0x11ea <conv_int+0x38>
    11f6:	cb 2d       	mov	r28, r11
    11f8:	cd 7f       	andi	r28, 0xFD	; 253
    11fa:	2b 2d       	mov	r18, r11
    11fc:	20 73       	andi	r18, 0x30	; 48
    11fe:	f9 f4       	brne	.+62     	; 0x123e <conv_int+0x8c>
    1200:	80 33       	cpi	r24, 0x30	; 48
    1202:	e9 f4       	brne	.+58     	; 0x123e <conv_int+0x8c>
    1204:	aa 24       	eor	r10, r10
    1206:	aa 94       	dec	r10
    1208:	ad 0e       	add	r10, r29
    120a:	09 f4       	brne	.+2      	; 0x120e <conv_int+0x5c>
    120c:	3e c0       	rjmp	.+124    	; 0x128a <conv_int+0xd8>
    120e:	c8 01       	movw	r24, r16
    1210:	79 d2       	rcall	.+1266   	; 0x1704 <fgetc>
    1212:	97 fd       	sbrc	r25, 7
    1214:	3a c0       	rjmp	.+116    	; 0x128a <conv_int+0xd8>
    1216:	9c 01       	movw	r18, r24
    1218:	2f 7d       	andi	r18, 0xDF	; 223
    121a:	33 27       	eor	r19, r19
    121c:	28 35       	cpi	r18, 0x58	; 88
    121e:	31 05       	cpc	r19, r1
    1220:	41 f4       	brne	.+16     	; 0x1232 <conv_int+0x80>
    1222:	c2 64       	ori	r28, 0x42	; 66
    1224:	d2 50       	subi	r29, 0x02	; 2
    1226:	89 f1       	breq	.+98     	; 0x128a <conv_int+0xd8>
    1228:	c8 01       	movw	r24, r16
    122a:	6c d2       	rcall	.+1240   	; 0x1704 <fgetc>
    122c:	97 ff       	sbrs	r25, 7
    122e:	07 c0       	rjmp	.+14     	; 0x123e <conv_int+0x8c>
    1230:	2c c0       	rjmp	.+88     	; 0x128a <conv_int+0xd8>
    1232:	b6 fe       	sbrs	r11, 6
    1234:	02 c0       	rjmp	.+4      	; 0x123a <conv_int+0x88>
    1236:	c2 60       	ori	r28, 0x02	; 2
    1238:	01 c0       	rjmp	.+2      	; 0x123c <conv_int+0x8a>
    123a:	c2 61       	ori	r28, 0x12	; 18
    123c:	da 2d       	mov	r29, r10
    123e:	81 2c       	mov	r8, r1
    1240:	91 2c       	mov	r9, r1
    1242:	54 01       	movw	r10, r8
    1244:	20 ed       	ldi	r18, 0xD0	; 208
    1246:	28 0f       	add	r18, r24
    1248:	28 30       	cpi	r18, 0x08	; 8
    124a:	78 f0       	brcs	.+30     	; 0x126a <conv_int+0xb8>
    124c:	c4 ff       	sbrs	r28, 4
    124e:	03 c0       	rjmp	.+6      	; 0x1256 <conv_int+0xa4>
    1250:	b8 01       	movw	r22, r16
    1252:	d2 d2       	rcall	.+1444   	; 0x17f8 <ungetc>
    1254:	17 c0       	rjmp	.+46     	; 0x1284 <conv_int+0xd2>
    1256:	2a 30       	cpi	r18, 0x0A	; 10
    1258:	40 f0       	brcs	.+16     	; 0x126a <conv_int+0xb8>
    125a:	c6 ff       	sbrs	r28, 6
    125c:	f9 cf       	rjmp	.-14     	; 0x1250 <conv_int+0x9e>
    125e:	2f 7d       	andi	r18, 0xDF	; 223
    1260:	3f ee       	ldi	r19, 0xEF	; 239
    1262:	32 0f       	add	r19, r18
    1264:	36 30       	cpi	r19, 0x06	; 6
    1266:	a0 f7       	brcc	.-24     	; 0x1250 <conv_int+0x9e>
    1268:	27 50       	subi	r18, 0x07	; 7
    126a:	4c 2f       	mov	r20, r28
    126c:	c5 01       	movw	r24, r10
    126e:	b4 01       	movw	r22, r8
    1270:	63 df       	rcall	.-314    	; 0x1138 <mulacc>
    1272:	4b 01       	movw	r8, r22
    1274:	5c 01       	movw	r10, r24
    1276:	c2 60       	ori	r28, 0x02	; 2
    1278:	d1 50       	subi	r29, 0x01	; 1
    127a:	51 f0       	breq	.+20     	; 0x1290 <conv_int+0xde>
    127c:	c8 01       	movw	r24, r16
    127e:	42 d2       	rcall	.+1156   	; 0x1704 <fgetc>
    1280:	97 ff       	sbrs	r25, 7
    1282:	e0 cf       	rjmp	.-64     	; 0x1244 <conv_int+0x92>
    1284:	c1 fd       	sbrc	r28, 1
    1286:	04 c0       	rjmp	.+8      	; 0x1290 <conv_int+0xde>
    1288:	b0 cf       	rjmp	.-160    	; 0x11ea <conv_int+0x38>
    128a:	81 2c       	mov	r8, r1
    128c:	91 2c       	mov	r9, r1
    128e:	54 01       	movw	r10, r8
    1290:	c7 ff       	sbrs	r28, 7
    1292:	08 c0       	rjmp	.+16     	; 0x12a4 <conv_int+0xf2>
    1294:	b0 94       	com	r11
    1296:	a0 94       	com	r10
    1298:	90 94       	com	r9
    129a:	80 94       	com	r8
    129c:	81 1c       	adc	r8, r1
    129e:	91 1c       	adc	r9, r1
    12a0:	a1 1c       	adc	r10, r1
    12a2:	b1 1c       	adc	r11, r1
    12a4:	2c 2f       	mov	r18, r28
    12a6:	b5 01       	movw	r22, r10
    12a8:	a4 01       	movw	r20, r8
    12aa:	c7 01       	movw	r24, r14
    12ac:	39 df       	rcall	.-398    	; 0x1120 <putval>
    12ae:	81 e0       	ldi	r24, 0x01	; 1
    12b0:	df 91       	pop	r29
    12b2:	cf 91       	pop	r28
    12b4:	1f 91       	pop	r17
    12b6:	0f 91       	pop	r16
    12b8:	ff 90       	pop	r15
    12ba:	ef 90       	pop	r14
    12bc:	bf 90       	pop	r11
    12be:	af 90       	pop	r10
    12c0:	9f 90       	pop	r9
    12c2:	8f 90       	pop	r8
    12c4:	08 95       	ret

000012c6 <conv_brk>:
    12c6:	5f 92       	push	r5
    12c8:	6f 92       	push	r6
    12ca:	7f 92       	push	r7
    12cc:	8f 92       	push	r8
    12ce:	9f 92       	push	r9
    12d0:	af 92       	push	r10
    12d2:	bf 92       	push	r11
    12d4:	cf 92       	push	r12
    12d6:	df 92       	push	r13
    12d8:	ef 92       	push	r14
    12da:	ff 92       	push	r15
    12dc:	0f 93       	push	r16
    12de:	1f 93       	push	r17
    12e0:	cf 93       	push	r28
    12e2:	df 93       	push	r29
    12e4:	cd b7       	in	r28, 0x3d	; 61
    12e6:	de b7       	in	r29, 0x3e	; 62
    12e8:	a0 97       	sbiw	r28, 0x20	; 32
    12ea:	0f b6       	in	r0, 0x3f	; 63
    12ec:	f8 94       	cli
    12ee:	de bf       	out	0x3e, r29	; 62
    12f0:	0f be       	out	0x3f, r0	; 63
    12f2:	cd bf       	out	0x3d, r28	; 61
    12f4:	5c 01       	movw	r10, r24
    12f6:	96 2e       	mov	r9, r22
    12f8:	7a 01       	movw	r14, r20
    12fa:	f9 01       	movw	r30, r18
    12fc:	8e 01       	movw	r16, r28
    12fe:	0f 5f       	subi	r16, 0xFF	; 255
    1300:	1f 4f       	sbci	r17, 0xFF	; 255
    1302:	68 01       	movw	r12, r16
    1304:	80 e2       	ldi	r24, 0x20	; 32
    1306:	d8 01       	movw	r26, r16
    1308:	1d 92       	st	X+, r1
    130a:	8a 95       	dec	r24
    130c:	e9 f7       	brne	.-6      	; 0x1308 <conv_brk+0x42>
    130e:	d5 01       	movw	r26, r10
    1310:	13 96       	adiw	r26, 0x03	; 3
    1312:	8c 90       	ld	r8, X
    1314:	80 e0       	ldi	r24, 0x00	; 0
    1316:	90 e0       	ldi	r25, 0x00	; 0
    1318:	61 2c       	mov	r6, r1
    131a:	71 2c       	mov	r7, r1
    131c:	30 e0       	ldi	r19, 0x00	; 0
    131e:	61 e0       	ldi	r22, 0x01	; 1
    1320:	70 e0       	ldi	r23, 0x00	; 0
    1322:	83 fc       	sbrc	r8, 3
    1324:	25 91       	lpm	r18, Z+
    1326:	83 fe       	sbrs	r8, 3
    1328:	21 91       	ld	r18, Z+
    132a:	8f 01       	movw	r16, r30
    132c:	52 2e       	mov	r5, r18
    132e:	21 11       	cpse	r18, r1
    1330:	03 c0       	rjmp	.+6      	; 0x1338 <conv_brk+0x72>
    1332:	80 e0       	ldi	r24, 0x00	; 0
    1334:	90 e0       	ldi	r25, 0x00	; 0
    1336:	90 c0       	rjmp	.+288    	; 0x1458 <conv_brk+0x192>
    1338:	2e 35       	cpi	r18, 0x5E	; 94
    133a:	11 f4       	brne	.+4      	; 0x1340 <conv_brk+0x7a>
    133c:	00 97       	sbiw	r24, 0x00	; 0
    133e:	51 f1       	breq	.+84     	; 0x1394 <conv_brk+0xce>
    1340:	43 2f       	mov	r20, r19
    1342:	50 e0       	ldi	r21, 0x00	; 0
    1344:	48 17       	cp	r20, r24
    1346:	59 07       	cpc	r21, r25
    1348:	3c f4       	brge	.+14     	; 0x1358 <conv_brk+0x92>
    134a:	2d 35       	cpi	r18, 0x5D	; 93
    134c:	59 f1       	breq	.+86     	; 0x13a4 <conv_brk+0xde>
    134e:	2d 32       	cpi	r18, 0x2D	; 45
    1350:	19 f4       	brne	.+6      	; 0x1358 <conv_brk+0x92>
    1352:	77 20       	and	r7, r7
    1354:	09 f1       	breq	.+66     	; 0x1398 <conv_brk+0xd2>
    1356:	03 c0       	rjmp	.+6      	; 0x135e <conv_brk+0x98>
    1358:	77 20       	and	r7, r7
    135a:	09 f4       	brne	.+2      	; 0x135e <conv_brk+0x98>
    135c:	68 c0       	rjmp	.+208    	; 0x142e <conv_brk+0x168>
    135e:	45 2d       	mov	r20, r5
    1360:	46 95       	lsr	r20
    1362:	46 95       	lsr	r20
    1364:	46 95       	lsr	r20
    1366:	d6 01       	movw	r26, r12
    1368:	a4 0f       	add	r26, r20
    136a:	b1 1d       	adc	r27, r1
    136c:	45 2d       	mov	r20, r5
    136e:	47 70       	andi	r20, 0x07	; 7
    1370:	8b 01       	movw	r16, r22
    1372:	02 c0       	rjmp	.+4      	; 0x1378 <conv_brk+0xb2>
    1374:	00 0f       	add	r16, r16
    1376:	11 1f       	adc	r17, r17
    1378:	4a 95       	dec	r20
    137a:	e2 f7       	brpl	.-8      	; 0x1374 <conv_brk+0xae>
    137c:	a8 01       	movw	r20, r16
    137e:	5c 91       	ld	r21, X
    1380:	45 2b       	or	r20, r21
    1382:	4c 93       	st	X, r20
    1384:	65 14       	cp	r6, r5
    1386:	59 f0       	breq	.+22     	; 0x139e <conv_brk+0xd8>
    1388:	56 14       	cp	r5, r6
    138a:	10 f4       	brcc	.+4      	; 0x1390 <conv_brk+0xca>
    138c:	53 94       	inc	r5
    138e:	e7 cf       	rjmp	.-50     	; 0x135e <conv_brk+0x98>
    1390:	5a 94       	dec	r5
    1392:	e5 cf       	rjmp	.-54     	; 0x135e <conv_brk+0x98>
    1394:	31 e0       	ldi	r19, 0x01	; 1
    1396:	04 c0       	rjmp	.+8      	; 0x13a0 <conv_brk+0xda>
    1398:	77 24       	eor	r7, r7
    139a:	73 94       	inc	r7
    139c:	01 c0       	rjmp	.+2      	; 0x13a0 <conv_brk+0xda>
    139e:	71 2c       	mov	r7, r1
    13a0:	01 96       	adiw	r24, 0x01	; 1
    13a2:	bf cf       	rjmp	.-130    	; 0x1322 <conv_brk+0x5c>
    13a4:	77 20       	and	r7, r7
    13a6:	19 f0       	breq	.+6      	; 0x13ae <conv_brk+0xe8>
    13a8:	8e 81       	ldd	r24, Y+6	; 0x06
    13aa:	80 62       	ori	r24, 0x20	; 32
    13ac:	8e 83       	std	Y+6, r24	; 0x06
    13ae:	31 11       	cpse	r19, r1
    13b0:	03 c0       	rjmp	.+6      	; 0x13b8 <conv_brk+0xf2>
    13b2:	88 24       	eor	r8, r8
    13b4:	83 94       	inc	r8
    13b6:	17 c0       	rjmp	.+46     	; 0x13e6 <conv_brk+0x120>
    13b8:	f6 01       	movw	r30, r12
    13ba:	9e 01       	movw	r18, r28
    13bc:	2f 5d       	subi	r18, 0xDF	; 223
    13be:	3f 4f       	sbci	r19, 0xFF	; 255
    13c0:	80 81       	ld	r24, Z
    13c2:	80 95       	com	r24
    13c4:	81 93       	st	Z+, r24
    13c6:	2e 17       	cp	r18, r30
    13c8:	3f 07       	cpc	r19, r31
    13ca:	d1 f7       	brne	.-12     	; 0x13c0 <conv_brk+0xfa>
    13cc:	f2 cf       	rjmp	.-28     	; 0x13b2 <conv_brk+0xec>
    13ce:	e1 14       	cp	r14, r1
    13d0:	f1 04       	cpc	r15, r1
    13d2:	29 f0       	breq	.+10     	; 0x13de <conv_brk+0x118>
    13d4:	d7 01       	movw	r26, r14
    13d6:	8c 93       	st	X, r24
    13d8:	f7 01       	movw	r30, r14
    13da:	31 96       	adiw	r30, 0x01	; 1
    13dc:	7f 01       	movw	r14, r30
    13de:	9a 94       	dec	r9
    13e0:	81 2c       	mov	r8, r1
    13e2:	99 20       	and	r9, r9
    13e4:	e9 f0       	breq	.+58     	; 0x1420 <conv_brk+0x15a>
    13e6:	c5 01       	movw	r24, r10
    13e8:	8d d1       	rcall	.+794    	; 0x1704 <fgetc>
    13ea:	97 fd       	sbrc	r25, 7
    13ec:	17 c0       	rjmp	.+46     	; 0x141c <conv_brk+0x156>
    13ee:	fc 01       	movw	r30, r24
    13f0:	ff 27       	eor	r31, r31
    13f2:	23 e0       	ldi	r18, 0x03	; 3
    13f4:	f5 95       	asr	r31
    13f6:	e7 95       	ror	r30
    13f8:	2a 95       	dec	r18
    13fa:	e1 f7       	brne	.-8      	; 0x13f4 <conv_brk+0x12e>
    13fc:	ec 0d       	add	r30, r12
    13fe:	fd 1d       	adc	r31, r13
    1400:	20 81       	ld	r18, Z
    1402:	30 e0       	ldi	r19, 0x00	; 0
    1404:	ac 01       	movw	r20, r24
    1406:	47 70       	andi	r20, 0x07	; 7
    1408:	55 27       	eor	r21, r21
    140a:	02 c0       	rjmp	.+4      	; 0x1410 <conv_brk+0x14a>
    140c:	35 95       	asr	r19
    140e:	27 95       	ror	r18
    1410:	4a 95       	dec	r20
    1412:	e2 f7       	brpl	.-8      	; 0x140c <conv_brk+0x146>
    1414:	20 fd       	sbrc	r18, 0
    1416:	db cf       	rjmp	.-74     	; 0x13ce <conv_brk+0x108>
    1418:	b5 01       	movw	r22, r10
    141a:	ee d1       	rcall	.+988    	; 0x17f8 <ungetc>
    141c:	81 10       	cpse	r8, r1
    141e:	89 cf       	rjmp	.-238    	; 0x1332 <conv_brk+0x6c>
    1420:	e1 14       	cp	r14, r1
    1422:	f1 04       	cpc	r15, r1
    1424:	11 f0       	breq	.+4      	; 0x142a <conv_brk+0x164>
    1426:	d7 01       	movw	r26, r14
    1428:	1c 92       	st	X, r1
    142a:	c8 01       	movw	r24, r16
    142c:	15 c0       	rjmp	.+42     	; 0x1458 <conv_brk+0x192>
    142e:	42 2f       	mov	r20, r18
    1430:	46 95       	lsr	r20
    1432:	46 95       	lsr	r20
    1434:	46 95       	lsr	r20
    1436:	d6 01       	movw	r26, r12
    1438:	a4 0f       	add	r26, r20
    143a:	b1 1d       	adc	r27, r1
    143c:	42 2f       	mov	r20, r18
    143e:	47 70       	andi	r20, 0x07	; 7
    1440:	8b 01       	movw	r16, r22
    1442:	02 c0       	rjmp	.+4      	; 0x1448 <conv_brk+0x182>
    1444:	00 0f       	add	r16, r16
    1446:	11 1f       	adc	r17, r17
    1448:	4a 95       	dec	r20
    144a:	e2 f7       	brpl	.-8      	; 0x1444 <conv_brk+0x17e>
    144c:	a8 01       	movw	r20, r16
    144e:	5c 91       	ld	r21, X
    1450:	45 2b       	or	r20, r21
    1452:	4c 93       	st	X, r20
    1454:	62 2e       	mov	r6, r18
    1456:	a4 cf       	rjmp	.-184    	; 0x13a0 <conv_brk+0xda>
    1458:	a0 96       	adiw	r28, 0x20	; 32
    145a:	0f b6       	in	r0, 0x3f	; 63
    145c:	f8 94       	cli
    145e:	de bf       	out	0x3e, r29	; 62
    1460:	0f be       	out	0x3f, r0	; 63
    1462:	cd bf       	out	0x3d, r28	; 61
    1464:	df 91       	pop	r29
    1466:	cf 91       	pop	r28
    1468:	1f 91       	pop	r17
    146a:	0f 91       	pop	r16
    146c:	ff 90       	pop	r15
    146e:	ef 90       	pop	r14
    1470:	df 90       	pop	r13
    1472:	cf 90       	pop	r12
    1474:	bf 90       	pop	r11
    1476:	af 90       	pop	r10
    1478:	9f 90       	pop	r9
    147a:	8f 90       	pop	r8
    147c:	7f 90       	pop	r7
    147e:	6f 90       	pop	r6
    1480:	5f 90       	pop	r5
    1482:	08 95       	ret

00001484 <vfscanf>:
    1484:	5f 92       	push	r5
    1486:	6f 92       	push	r6
    1488:	7f 92       	push	r7
    148a:	8f 92       	push	r8
    148c:	9f 92       	push	r9
    148e:	af 92       	push	r10
    1490:	bf 92       	push	r11
    1492:	cf 92       	push	r12
    1494:	df 92       	push	r13
    1496:	ef 92       	push	r14
    1498:	ff 92       	push	r15
    149a:	0f 93       	push	r16
    149c:	1f 93       	push	r17
    149e:	cf 93       	push	r28
    14a0:	df 93       	push	r29
    14a2:	6c 01       	movw	r12, r24
    14a4:	eb 01       	movw	r28, r22
    14a6:	5a 01       	movw	r10, r20
    14a8:	fc 01       	movw	r30, r24
    14aa:	17 82       	std	Z+7, r1	; 0x07
    14ac:	16 82       	std	Z+6, r1	; 0x06
    14ae:	51 2c       	mov	r5, r1
    14b0:	f6 01       	movw	r30, r12
    14b2:	e3 80       	ldd	r14, Z+3	; 0x03
    14b4:	fe 01       	movw	r30, r28
    14b6:	e3 fc       	sbrc	r14, 3
    14b8:	85 91       	lpm	r24, Z+
    14ba:	e3 fe       	sbrs	r14, 3
    14bc:	81 91       	ld	r24, Z+
    14be:	18 2f       	mov	r17, r24
    14c0:	ef 01       	movw	r28, r30
    14c2:	88 23       	and	r24, r24
    14c4:	09 f4       	brne	.+2      	; 0x14c8 <vfscanf+0x44>
    14c6:	e0 c0       	rjmp	.+448    	; 0x1688 <vfscanf+0x204>
    14c8:	90 e0       	ldi	r25, 0x00	; 0
    14ca:	f3 d0       	rcall	.+486    	; 0x16b2 <isspace>
    14cc:	89 2b       	or	r24, r25
    14ce:	19 f0       	breq	.+6      	; 0x14d6 <vfscanf+0x52>
    14d0:	c6 01       	movw	r24, r12
    14d2:	59 de       	rcall	.-846    	; 0x1186 <skip_spaces>
    14d4:	ed cf       	rjmp	.-38     	; 0x14b0 <vfscanf+0x2c>
    14d6:	15 32       	cpi	r17, 0x25	; 37
    14d8:	41 f4       	brne	.+16     	; 0x14ea <vfscanf+0x66>
    14da:	fe 01       	movw	r30, r28
    14dc:	e3 fc       	sbrc	r14, 3
    14de:	15 91       	lpm	r17, Z+
    14e0:	e3 fe       	sbrs	r14, 3
    14e2:	11 91       	ld	r17, Z+
    14e4:	ef 01       	movw	r28, r30
    14e6:	15 32       	cpi	r17, 0x25	; 37
    14e8:	71 f4       	brne	.+28     	; 0x1506 <vfscanf+0x82>
    14ea:	c6 01       	movw	r24, r12
    14ec:	0b d1       	rcall	.+534    	; 0x1704 <fgetc>
    14ee:	97 fd       	sbrc	r25, 7
    14f0:	c9 c0       	rjmp	.+402    	; 0x1684 <vfscanf+0x200>
    14f2:	41 2f       	mov	r20, r17
    14f4:	50 e0       	ldi	r21, 0x00	; 0
    14f6:	9c 01       	movw	r18, r24
    14f8:	33 27       	eor	r19, r19
    14fa:	24 17       	cp	r18, r20
    14fc:	35 07       	cpc	r19, r21
    14fe:	c1 f2       	breq	.-80     	; 0x14b0 <vfscanf+0x2c>
    1500:	b6 01       	movw	r22, r12
    1502:	7a d1       	rcall	.+756    	; 0x17f8 <ungetc>
    1504:	c1 c0       	rjmp	.+386    	; 0x1688 <vfscanf+0x204>
    1506:	1a 32       	cpi	r17, 0x2A	; 42
    1508:	39 f4       	brne	.+14     	; 0x1518 <vfscanf+0x94>
    150a:	e3 fc       	sbrc	r14, 3
    150c:	15 91       	lpm	r17, Z+
    150e:	e3 fe       	sbrs	r14, 3
    1510:	11 91       	ld	r17, Z+
    1512:	ef 01       	movw	r28, r30
    1514:	01 e0       	ldi	r16, 0x01	; 1
    1516:	01 c0       	rjmp	.+2      	; 0x151a <vfscanf+0x96>
    1518:	00 e0       	ldi	r16, 0x00	; 0
    151a:	f1 2c       	mov	r15, r1
    151c:	20 ed       	ldi	r18, 0xD0	; 208
    151e:	21 0f       	add	r18, r17
    1520:	2a 30       	cpi	r18, 0x0A	; 10
    1522:	78 f4       	brcc	.+30     	; 0x1542 <vfscanf+0xbe>
    1524:	02 60       	ori	r16, 0x02	; 2
    1526:	6f 2d       	mov	r22, r15
    1528:	70 e0       	ldi	r23, 0x00	; 0
    152a:	80 e0       	ldi	r24, 0x00	; 0
    152c:	90 e0       	ldi	r25, 0x00	; 0
    152e:	40 e2       	ldi	r20, 0x20	; 32
    1530:	03 de       	rcall	.-1018   	; 0x1138 <mulacc>
    1532:	f6 2e       	mov	r15, r22
    1534:	fe 01       	movw	r30, r28
    1536:	e3 fc       	sbrc	r14, 3
    1538:	15 91       	lpm	r17, Z+
    153a:	e3 fe       	sbrs	r14, 3
    153c:	11 91       	ld	r17, Z+
    153e:	ef 01       	movw	r28, r30
    1540:	ed cf       	rjmp	.-38     	; 0x151c <vfscanf+0x98>
    1542:	01 ff       	sbrs	r16, 1
    1544:	03 c0       	rjmp	.+6      	; 0x154c <vfscanf+0xc8>
    1546:	f1 10       	cpse	r15, r1
    1548:	03 c0       	rjmp	.+6      	; 0x1550 <vfscanf+0xcc>
    154a:	9e c0       	rjmp	.+316    	; 0x1688 <vfscanf+0x204>
    154c:	ff 24       	eor	r15, r15
    154e:	fa 94       	dec	r15
    1550:	18 36       	cpi	r17, 0x68	; 104
    1552:	19 f0       	breq	.+6      	; 0x155a <vfscanf+0xd6>
    1554:	1c 36       	cpi	r17, 0x6C	; 108
    1556:	51 f0       	breq	.+20     	; 0x156c <vfscanf+0xe8>
    1558:	10 c0       	rjmp	.+32     	; 0x157a <vfscanf+0xf6>
    155a:	fe 01       	movw	r30, r28
    155c:	e3 fc       	sbrc	r14, 3
    155e:	15 91       	lpm	r17, Z+
    1560:	e3 fe       	sbrs	r14, 3
    1562:	11 91       	ld	r17, Z+
    1564:	ef 01       	movw	r28, r30
    1566:	18 36       	cpi	r17, 0x68	; 104
    1568:	41 f4       	brne	.+16     	; 0x157a <vfscanf+0xf6>
    156a:	08 60       	ori	r16, 0x08	; 8
    156c:	04 60       	ori	r16, 0x04	; 4
    156e:	fe 01       	movw	r30, r28
    1570:	e3 fc       	sbrc	r14, 3
    1572:	15 91       	lpm	r17, Z+
    1574:	e3 fe       	sbrs	r14, 3
    1576:	11 91       	ld	r17, Z+
    1578:	ef 01       	movw	r28, r30
    157a:	11 23       	and	r17, r17
    157c:	09 f4       	brne	.+2      	; 0x1580 <vfscanf+0xfc>
    157e:	84 c0       	rjmp	.+264    	; 0x1688 <vfscanf+0x204>
    1580:	61 2f       	mov	r22, r17
    1582:	70 e0       	ldi	r23, 0x00	; 0
    1584:	8c e8       	ldi	r24, 0x8C	; 140
    1586:	90 e0       	ldi	r25, 0x00	; 0
    1588:	9c d0       	rcall	.+312    	; 0x16c2 <strchr_P>
    158a:	89 2b       	or	r24, r25
    158c:	09 f4       	brne	.+2      	; 0x1590 <vfscanf+0x10c>
    158e:	7c c0       	rjmp	.+248    	; 0x1688 <vfscanf+0x204>
    1590:	00 fd       	sbrc	r16, 0
    1592:	07 c0       	rjmp	.+14     	; 0x15a2 <vfscanf+0x11e>
    1594:	f5 01       	movw	r30, r10
    1596:	80 80       	ld	r8, Z
    1598:	91 80       	ldd	r9, Z+1	; 0x01
    159a:	c5 01       	movw	r24, r10
    159c:	02 96       	adiw	r24, 0x02	; 2
    159e:	5c 01       	movw	r10, r24
    15a0:	02 c0       	rjmp	.+4      	; 0x15a6 <vfscanf+0x122>
    15a2:	81 2c       	mov	r8, r1
    15a4:	91 2c       	mov	r9, r1
    15a6:	1e 36       	cpi	r17, 0x6E	; 110
    15a8:	49 f4       	brne	.+18     	; 0x15bc <vfscanf+0x138>
    15aa:	f6 01       	movw	r30, r12
    15ac:	46 81       	ldd	r20, Z+6	; 0x06
    15ae:	57 81       	ldd	r21, Z+7	; 0x07
    15b0:	60 e0       	ldi	r22, 0x00	; 0
    15b2:	70 e0       	ldi	r23, 0x00	; 0
    15b4:	20 2f       	mov	r18, r16
    15b6:	c4 01       	movw	r24, r8
    15b8:	b3 dd       	rcall	.-1178   	; 0x1120 <putval>
    15ba:	7a cf       	rjmp	.-268    	; 0x14b0 <vfscanf+0x2c>
    15bc:	13 36       	cpi	r17, 0x63	; 99
    15be:	a1 f4       	brne	.+40     	; 0x15e8 <vfscanf+0x164>
    15c0:	01 fd       	sbrc	r16, 1
    15c2:	02 c0       	rjmp	.+4      	; 0x15c8 <vfscanf+0x144>
    15c4:	ff 24       	eor	r15, r15
    15c6:	f3 94       	inc	r15
    15c8:	c6 01       	movw	r24, r12
    15ca:	9c d0       	rcall	.+312    	; 0x1704 <fgetc>
    15cc:	97 fd       	sbrc	r25, 7
    15ce:	5a c0       	rjmp	.+180    	; 0x1684 <vfscanf+0x200>
    15d0:	81 14       	cp	r8, r1
    15d2:	91 04       	cpc	r9, r1
    15d4:	29 f0       	breq	.+10     	; 0x15e0 <vfscanf+0x15c>
    15d6:	f4 01       	movw	r30, r8
    15d8:	80 83       	st	Z, r24
    15da:	c4 01       	movw	r24, r8
    15dc:	01 96       	adiw	r24, 0x01	; 1
    15de:	4c 01       	movw	r8, r24
    15e0:	fa 94       	dec	r15
    15e2:	f1 10       	cpse	r15, r1
    15e4:	f1 cf       	rjmp	.-30     	; 0x15c8 <vfscanf+0x144>
    15e6:	4a c0       	rjmp	.+148    	; 0x167c <vfscanf+0x1f8>
    15e8:	1b 35       	cpi	r17, 0x5B	; 91
    15ea:	51 f4       	brne	.+20     	; 0x1600 <vfscanf+0x17c>
    15ec:	9e 01       	movw	r18, r28
    15ee:	a4 01       	movw	r20, r8
    15f0:	6f 2d       	mov	r22, r15
    15f2:	c6 01       	movw	r24, r12
    15f4:	68 de       	rcall	.-816    	; 0x12c6 <conv_brk>
    15f6:	ec 01       	movw	r28, r24
    15f8:	89 2b       	or	r24, r25
    15fa:	09 f0       	breq	.+2      	; 0x15fe <vfscanf+0x17a>
    15fc:	3f c0       	rjmp	.+126    	; 0x167c <vfscanf+0x1f8>
    15fe:	39 c0       	rjmp	.+114    	; 0x1672 <vfscanf+0x1ee>
    1600:	c6 01       	movw	r24, r12
    1602:	c1 dd       	rcall	.-1150   	; 0x1186 <skip_spaces>
    1604:	97 fd       	sbrc	r25, 7
    1606:	3e c0       	rjmp	.+124    	; 0x1684 <vfscanf+0x200>
    1608:	1f 36       	cpi	r17, 0x6F	; 111
    160a:	49 f1       	breq	.+82     	; 0x165e <vfscanf+0x1da>
    160c:	28 f4       	brcc	.+10     	; 0x1618 <vfscanf+0x194>
    160e:	14 36       	cpi	r17, 0x64	; 100
    1610:	21 f1       	breq	.+72     	; 0x165a <vfscanf+0x1d6>
    1612:	19 36       	cpi	r17, 0x69	; 105
    1614:	39 f1       	breq	.+78     	; 0x1664 <vfscanf+0x1e0>
    1616:	25 c0       	rjmp	.+74     	; 0x1662 <vfscanf+0x1de>
    1618:	13 37       	cpi	r17, 0x73	; 115
    161a:	71 f0       	breq	.+28     	; 0x1638 <vfscanf+0x1b4>
    161c:	15 37       	cpi	r17, 0x75	; 117
    161e:	e9 f0       	breq	.+58     	; 0x165a <vfscanf+0x1d6>
    1620:	20 c0       	rjmp	.+64     	; 0x1662 <vfscanf+0x1de>
    1622:	81 14       	cp	r8, r1
    1624:	91 04       	cpc	r9, r1
    1626:	29 f0       	breq	.+10     	; 0x1632 <vfscanf+0x1ae>
    1628:	f4 01       	movw	r30, r8
    162a:	60 82       	st	Z, r6
    162c:	c4 01       	movw	r24, r8
    162e:	01 96       	adiw	r24, 0x01	; 1
    1630:	4c 01       	movw	r8, r24
    1632:	fa 94       	dec	r15
    1634:	ff 20       	and	r15, r15
    1636:	59 f0       	breq	.+22     	; 0x164e <vfscanf+0x1ca>
    1638:	c6 01       	movw	r24, r12
    163a:	64 d0       	rcall	.+200    	; 0x1704 <fgetc>
    163c:	3c 01       	movw	r6, r24
    163e:	97 fd       	sbrc	r25, 7
    1640:	06 c0       	rjmp	.+12     	; 0x164e <vfscanf+0x1ca>
    1642:	37 d0       	rcall	.+110    	; 0x16b2 <isspace>
    1644:	89 2b       	or	r24, r25
    1646:	69 f3       	breq	.-38     	; 0x1622 <vfscanf+0x19e>
    1648:	b6 01       	movw	r22, r12
    164a:	c3 01       	movw	r24, r6
    164c:	d5 d0       	rcall	.+426    	; 0x17f8 <ungetc>
    164e:	81 14       	cp	r8, r1
    1650:	91 04       	cpc	r9, r1
    1652:	a1 f0       	breq	.+40     	; 0x167c <vfscanf+0x1f8>
    1654:	f4 01       	movw	r30, r8
    1656:	10 82       	st	Z, r1
    1658:	11 c0       	rjmp	.+34     	; 0x167c <vfscanf+0x1f8>
    165a:	00 62       	ori	r16, 0x20	; 32
    165c:	03 c0       	rjmp	.+6      	; 0x1664 <vfscanf+0x1e0>
    165e:	00 61       	ori	r16, 0x10	; 16
    1660:	01 c0       	rjmp	.+2      	; 0x1664 <vfscanf+0x1e0>
    1662:	00 64       	ori	r16, 0x40	; 64
    1664:	20 2f       	mov	r18, r16
    1666:	a4 01       	movw	r20, r8
    1668:	6f 2d       	mov	r22, r15
    166a:	c6 01       	movw	r24, r12
    166c:	a2 dd       	rcall	.-1212   	; 0x11b2 <conv_int>
    166e:	81 11       	cpse	r24, r1
    1670:	05 c0       	rjmp	.+10     	; 0x167c <vfscanf+0x1f8>
    1672:	f6 01       	movw	r30, r12
    1674:	83 81       	ldd	r24, Z+3	; 0x03
    1676:	80 73       	andi	r24, 0x30	; 48
    1678:	29 f4       	brne	.+10     	; 0x1684 <vfscanf+0x200>
    167a:	06 c0       	rjmp	.+12     	; 0x1688 <vfscanf+0x204>
    167c:	00 fd       	sbrc	r16, 0
    167e:	18 cf       	rjmp	.-464    	; 0x14b0 <vfscanf+0x2c>
    1680:	53 94       	inc	r5
    1682:	16 cf       	rjmp	.-468    	; 0x14b0 <vfscanf+0x2c>
    1684:	55 20       	and	r5, r5
    1686:	19 f0       	breq	.+6      	; 0x168e <vfscanf+0x20a>
    1688:	85 2d       	mov	r24, r5
    168a:	90 e0       	ldi	r25, 0x00	; 0
    168c:	02 c0       	rjmp	.+4      	; 0x1692 <vfscanf+0x20e>
    168e:	8f ef       	ldi	r24, 0xFF	; 255
    1690:	9f ef       	ldi	r25, 0xFF	; 255
    1692:	df 91       	pop	r29
    1694:	cf 91       	pop	r28
    1696:	1f 91       	pop	r17
    1698:	0f 91       	pop	r16
    169a:	ff 90       	pop	r15
    169c:	ef 90       	pop	r14
    169e:	df 90       	pop	r13
    16a0:	cf 90       	pop	r12
    16a2:	bf 90       	pop	r11
    16a4:	af 90       	pop	r10
    16a6:	9f 90       	pop	r9
    16a8:	8f 90       	pop	r8
    16aa:	7f 90       	pop	r7
    16ac:	6f 90       	pop	r6
    16ae:	5f 90       	pop	r5
    16b0:	08 95       	ret

000016b2 <isspace>:
    16b2:	91 11       	cpse	r25, r1
    16b4:	18 c1       	rjmp	.+560    	; 0x18e6 <__ctype_isfalse>
    16b6:	80 32       	cpi	r24, 0x20	; 32
    16b8:	19 f0       	breq	.+6      	; 0x16c0 <isspace+0xe>
    16ba:	89 50       	subi	r24, 0x09	; 9
    16bc:	85 50       	subi	r24, 0x05	; 5
    16be:	d0 f7       	brcc	.-12     	; 0x16b4 <isspace+0x2>
    16c0:	08 95       	ret

000016c2 <strchr_P>:
    16c2:	fc 01       	movw	r30, r24
    16c4:	05 90       	lpm	r0, Z+
    16c6:	06 16       	cp	r0, r22
    16c8:	21 f0       	breq	.+8      	; 0x16d2 <strchr_P+0x10>
    16ca:	00 20       	and	r0, r0
    16cc:	d9 f7       	brne	.-10     	; 0x16c4 <strchr_P+0x2>
    16ce:	c0 01       	movw	r24, r0
    16d0:	08 95       	ret
    16d2:	31 97       	sbiw	r30, 0x01	; 1
    16d4:	cf 01       	movw	r24, r30
    16d6:	08 95       	ret

000016d8 <strnlen_P>:
    16d8:	fc 01       	movw	r30, r24
    16da:	05 90       	lpm	r0, Z+
    16dc:	61 50       	subi	r22, 0x01	; 1
    16de:	70 40       	sbci	r23, 0x00	; 0
    16e0:	01 10       	cpse	r0, r1
    16e2:	d8 f7       	brcc	.-10     	; 0x16da <strnlen_P+0x2>
    16e4:	80 95       	com	r24
    16e6:	90 95       	com	r25
    16e8:	8e 0f       	add	r24, r30
    16ea:	9f 1f       	adc	r25, r31
    16ec:	08 95       	ret

000016ee <strnlen>:
    16ee:	fc 01       	movw	r30, r24
    16f0:	61 50       	subi	r22, 0x01	; 1
    16f2:	70 40       	sbci	r23, 0x00	; 0
    16f4:	01 90       	ld	r0, Z+
    16f6:	01 10       	cpse	r0, r1
    16f8:	d8 f7       	brcc	.-10     	; 0x16f0 <strnlen+0x2>
    16fa:	80 95       	com	r24
    16fc:	90 95       	com	r25
    16fe:	8e 0f       	add	r24, r30
    1700:	9f 1f       	adc	r25, r31
    1702:	08 95       	ret

00001704 <fgetc>:
    1704:	cf 93       	push	r28
    1706:	df 93       	push	r29
    1708:	ec 01       	movw	r28, r24
    170a:	2b 81       	ldd	r18, Y+3	; 0x03
    170c:	20 ff       	sbrs	r18, 0
    170e:	33 c0       	rjmp	.+102    	; 0x1776 <fgetc+0x72>
    1710:	26 ff       	sbrs	r18, 6
    1712:	0a c0       	rjmp	.+20     	; 0x1728 <fgetc+0x24>
    1714:	2f 7b       	andi	r18, 0xBF	; 191
    1716:	2b 83       	std	Y+3, r18	; 0x03
    1718:	8e 81       	ldd	r24, Y+6	; 0x06
    171a:	9f 81       	ldd	r25, Y+7	; 0x07
    171c:	01 96       	adiw	r24, 0x01	; 1
    171e:	9f 83       	std	Y+7, r25	; 0x07
    1720:	8e 83       	std	Y+6, r24	; 0x06
    1722:	8a 81       	ldd	r24, Y+2	; 0x02
    1724:	90 e0       	ldi	r25, 0x00	; 0
    1726:	29 c0       	rjmp	.+82     	; 0x177a <fgetc+0x76>
    1728:	22 ff       	sbrs	r18, 2
    172a:	0f c0       	rjmp	.+30     	; 0x174a <fgetc+0x46>
    172c:	e8 81       	ld	r30, Y
    172e:	f9 81       	ldd	r31, Y+1	; 0x01
    1730:	80 81       	ld	r24, Z
    1732:	08 2e       	mov	r0, r24
    1734:	00 0c       	add	r0, r0
    1736:	99 0b       	sbc	r25, r25
    1738:	00 97       	sbiw	r24, 0x00	; 0
    173a:	19 f4       	brne	.+6      	; 0x1742 <fgetc+0x3e>
    173c:	20 62       	ori	r18, 0x20	; 32
    173e:	2b 83       	std	Y+3, r18	; 0x03
    1740:	1a c0       	rjmp	.+52     	; 0x1776 <fgetc+0x72>
    1742:	31 96       	adiw	r30, 0x01	; 1
    1744:	f9 83       	std	Y+1, r31	; 0x01
    1746:	e8 83       	st	Y, r30
    1748:	0e c0       	rjmp	.+28     	; 0x1766 <fgetc+0x62>
    174a:	ea 85       	ldd	r30, Y+10	; 0x0a
    174c:	fb 85       	ldd	r31, Y+11	; 0x0b
    174e:	09 95       	icall
    1750:	97 ff       	sbrs	r25, 7
    1752:	09 c0       	rjmp	.+18     	; 0x1766 <fgetc+0x62>
    1754:	2b 81       	ldd	r18, Y+3	; 0x03
    1756:	01 96       	adiw	r24, 0x01	; 1
    1758:	11 f0       	breq	.+4      	; 0x175e <fgetc+0x5a>
    175a:	80 e2       	ldi	r24, 0x20	; 32
    175c:	01 c0       	rjmp	.+2      	; 0x1760 <fgetc+0x5c>
    175e:	80 e1       	ldi	r24, 0x10	; 16
    1760:	82 2b       	or	r24, r18
    1762:	8b 83       	std	Y+3, r24	; 0x03
    1764:	08 c0       	rjmp	.+16     	; 0x1776 <fgetc+0x72>
    1766:	2e 81       	ldd	r18, Y+6	; 0x06
    1768:	3f 81       	ldd	r19, Y+7	; 0x07
    176a:	2f 5f       	subi	r18, 0xFF	; 255
    176c:	3f 4f       	sbci	r19, 0xFF	; 255
    176e:	3f 83       	std	Y+7, r19	; 0x07
    1770:	2e 83       	std	Y+6, r18	; 0x06
    1772:	99 27       	eor	r25, r25
    1774:	02 c0       	rjmp	.+4      	; 0x177a <fgetc+0x76>
    1776:	8f ef       	ldi	r24, 0xFF	; 255
    1778:	9f ef       	ldi	r25, 0xFF	; 255
    177a:	df 91       	pop	r29
    177c:	cf 91       	pop	r28
    177e:	08 95       	ret

00001780 <fputc>:
    1780:	0f 93       	push	r16
    1782:	1f 93       	push	r17
    1784:	cf 93       	push	r28
    1786:	df 93       	push	r29
    1788:	fb 01       	movw	r30, r22
    178a:	23 81       	ldd	r18, Z+3	; 0x03
    178c:	21 fd       	sbrc	r18, 1
    178e:	03 c0       	rjmp	.+6      	; 0x1796 <fputc+0x16>
    1790:	8f ef       	ldi	r24, 0xFF	; 255
    1792:	9f ef       	ldi	r25, 0xFF	; 255
    1794:	2c c0       	rjmp	.+88     	; 0x17ee <fputc+0x6e>
    1796:	22 ff       	sbrs	r18, 2
    1798:	16 c0       	rjmp	.+44     	; 0x17c6 <fputc+0x46>
    179a:	46 81       	ldd	r20, Z+6	; 0x06
    179c:	57 81       	ldd	r21, Z+7	; 0x07
    179e:	24 81       	ldd	r18, Z+4	; 0x04
    17a0:	35 81       	ldd	r19, Z+5	; 0x05
    17a2:	42 17       	cp	r20, r18
    17a4:	53 07       	cpc	r21, r19
    17a6:	44 f4       	brge	.+16     	; 0x17b8 <fputc+0x38>
    17a8:	a0 81       	ld	r26, Z
    17aa:	b1 81       	ldd	r27, Z+1	; 0x01
    17ac:	9d 01       	movw	r18, r26
    17ae:	2f 5f       	subi	r18, 0xFF	; 255
    17b0:	3f 4f       	sbci	r19, 0xFF	; 255
    17b2:	31 83       	std	Z+1, r19	; 0x01
    17b4:	20 83       	st	Z, r18
    17b6:	8c 93       	st	X, r24
    17b8:	26 81       	ldd	r18, Z+6	; 0x06
    17ba:	37 81       	ldd	r19, Z+7	; 0x07
    17bc:	2f 5f       	subi	r18, 0xFF	; 255
    17be:	3f 4f       	sbci	r19, 0xFF	; 255
    17c0:	37 83       	std	Z+7, r19	; 0x07
    17c2:	26 83       	std	Z+6, r18	; 0x06
    17c4:	14 c0       	rjmp	.+40     	; 0x17ee <fputc+0x6e>
    17c6:	8b 01       	movw	r16, r22
    17c8:	ec 01       	movw	r28, r24
    17ca:	fb 01       	movw	r30, r22
    17cc:	00 84       	ldd	r0, Z+8	; 0x08
    17ce:	f1 85       	ldd	r31, Z+9	; 0x09
    17d0:	e0 2d       	mov	r30, r0
    17d2:	09 95       	icall
    17d4:	89 2b       	or	r24, r25
    17d6:	e1 f6       	brne	.-72     	; 0x1790 <fputc+0x10>
    17d8:	d8 01       	movw	r26, r16
    17da:	16 96       	adiw	r26, 0x06	; 6
    17dc:	8d 91       	ld	r24, X+
    17de:	9c 91       	ld	r25, X
    17e0:	17 97       	sbiw	r26, 0x07	; 7
    17e2:	01 96       	adiw	r24, 0x01	; 1
    17e4:	17 96       	adiw	r26, 0x07	; 7
    17e6:	9c 93       	st	X, r25
    17e8:	8e 93       	st	-X, r24
    17ea:	16 97       	sbiw	r26, 0x06	; 6
    17ec:	ce 01       	movw	r24, r28
    17ee:	df 91       	pop	r29
    17f0:	cf 91       	pop	r28
    17f2:	1f 91       	pop	r17
    17f4:	0f 91       	pop	r16
    17f6:	08 95       	ret

000017f8 <ungetc>:
    17f8:	fb 01       	movw	r30, r22
    17fa:	23 81       	ldd	r18, Z+3	; 0x03
    17fc:	20 ff       	sbrs	r18, 0
    17fe:	12 c0       	rjmp	.+36     	; 0x1824 <ungetc+0x2c>
    1800:	26 fd       	sbrc	r18, 6
    1802:	10 c0       	rjmp	.+32     	; 0x1824 <ungetc+0x2c>
    1804:	8f 3f       	cpi	r24, 0xFF	; 255
    1806:	3f ef       	ldi	r19, 0xFF	; 255
    1808:	93 07       	cpc	r25, r19
    180a:	61 f0       	breq	.+24     	; 0x1824 <ungetc+0x2c>
    180c:	82 83       	std	Z+2, r24	; 0x02
    180e:	2f 7d       	andi	r18, 0xDF	; 223
    1810:	20 64       	ori	r18, 0x40	; 64
    1812:	23 83       	std	Z+3, r18	; 0x03
    1814:	26 81       	ldd	r18, Z+6	; 0x06
    1816:	37 81       	ldd	r19, Z+7	; 0x07
    1818:	21 50       	subi	r18, 0x01	; 1
    181a:	31 09       	sbc	r19, r1
    181c:	37 83       	std	Z+7, r19	; 0x07
    181e:	26 83       	std	Z+6, r18	; 0x06
    1820:	99 27       	eor	r25, r25
    1822:	08 95       	ret
    1824:	8f ef       	ldi	r24, 0xFF	; 255
    1826:	9f ef       	ldi	r25, 0xFF	; 255
    1828:	08 95       	ret

0000182a <__ultoa_invert>:
    182a:	fa 01       	movw	r30, r20
    182c:	aa 27       	eor	r26, r26
    182e:	28 30       	cpi	r18, 0x08	; 8
    1830:	51 f1       	breq	.+84     	; 0x1886 <__ultoa_invert+0x5c>
    1832:	20 31       	cpi	r18, 0x10	; 16
    1834:	81 f1       	breq	.+96     	; 0x1896 <__ultoa_invert+0x6c>
    1836:	e8 94       	clt
    1838:	6f 93       	push	r22
    183a:	6e 7f       	andi	r22, 0xFE	; 254
    183c:	6e 5f       	subi	r22, 0xFE	; 254
    183e:	7f 4f       	sbci	r23, 0xFF	; 255
    1840:	8f 4f       	sbci	r24, 0xFF	; 255
    1842:	9f 4f       	sbci	r25, 0xFF	; 255
    1844:	af 4f       	sbci	r26, 0xFF	; 255
    1846:	b1 e0       	ldi	r27, 0x01	; 1
    1848:	3e d0       	rcall	.+124    	; 0x18c6 <__ultoa_invert+0x9c>
    184a:	b4 e0       	ldi	r27, 0x04	; 4
    184c:	3c d0       	rcall	.+120    	; 0x18c6 <__ultoa_invert+0x9c>
    184e:	67 0f       	add	r22, r23
    1850:	78 1f       	adc	r23, r24
    1852:	89 1f       	adc	r24, r25
    1854:	9a 1f       	adc	r25, r26
    1856:	a1 1d       	adc	r26, r1
    1858:	68 0f       	add	r22, r24
    185a:	79 1f       	adc	r23, r25
    185c:	8a 1f       	adc	r24, r26
    185e:	91 1d       	adc	r25, r1
    1860:	a1 1d       	adc	r26, r1
    1862:	6a 0f       	add	r22, r26
    1864:	71 1d       	adc	r23, r1
    1866:	81 1d       	adc	r24, r1
    1868:	91 1d       	adc	r25, r1
    186a:	a1 1d       	adc	r26, r1
    186c:	20 d0       	rcall	.+64     	; 0x18ae <__ultoa_invert+0x84>
    186e:	09 f4       	brne	.+2      	; 0x1872 <__ultoa_invert+0x48>
    1870:	68 94       	set
    1872:	3f 91       	pop	r19
    1874:	2a e0       	ldi	r18, 0x0A	; 10
    1876:	26 9f       	mul	r18, r22
    1878:	11 24       	eor	r1, r1
    187a:	30 19       	sub	r19, r0
    187c:	30 5d       	subi	r19, 0xD0	; 208
    187e:	31 93       	st	Z+, r19
    1880:	de f6       	brtc	.-74     	; 0x1838 <__ultoa_invert+0xe>
    1882:	cf 01       	movw	r24, r30
    1884:	08 95       	ret
    1886:	46 2f       	mov	r20, r22
    1888:	47 70       	andi	r20, 0x07	; 7
    188a:	40 5d       	subi	r20, 0xD0	; 208
    188c:	41 93       	st	Z+, r20
    188e:	b3 e0       	ldi	r27, 0x03	; 3
    1890:	0f d0       	rcall	.+30     	; 0x18b0 <__ultoa_invert+0x86>
    1892:	c9 f7       	brne	.-14     	; 0x1886 <__ultoa_invert+0x5c>
    1894:	f6 cf       	rjmp	.-20     	; 0x1882 <__ultoa_invert+0x58>
    1896:	46 2f       	mov	r20, r22
    1898:	4f 70       	andi	r20, 0x0F	; 15
    189a:	40 5d       	subi	r20, 0xD0	; 208
    189c:	4a 33       	cpi	r20, 0x3A	; 58
    189e:	18 f0       	brcs	.+6      	; 0x18a6 <__ultoa_invert+0x7c>
    18a0:	49 5d       	subi	r20, 0xD9	; 217
    18a2:	31 fd       	sbrc	r19, 1
    18a4:	40 52       	subi	r20, 0x20	; 32
    18a6:	41 93       	st	Z+, r20
    18a8:	02 d0       	rcall	.+4      	; 0x18ae <__ultoa_invert+0x84>
    18aa:	a9 f7       	brne	.-22     	; 0x1896 <__ultoa_invert+0x6c>
    18ac:	ea cf       	rjmp	.-44     	; 0x1882 <__ultoa_invert+0x58>
    18ae:	b4 e0       	ldi	r27, 0x04	; 4
    18b0:	a6 95       	lsr	r26
    18b2:	97 95       	ror	r25
    18b4:	87 95       	ror	r24
    18b6:	77 95       	ror	r23
    18b8:	67 95       	ror	r22
    18ba:	ba 95       	dec	r27
    18bc:	c9 f7       	brne	.-14     	; 0x18b0 <__ultoa_invert+0x86>
    18be:	00 97       	sbiw	r24, 0x00	; 0
    18c0:	61 05       	cpc	r22, r1
    18c2:	71 05       	cpc	r23, r1
    18c4:	08 95       	ret
    18c6:	9b 01       	movw	r18, r22
    18c8:	ac 01       	movw	r20, r24
    18ca:	0a 2e       	mov	r0, r26
    18cc:	06 94       	lsr	r0
    18ce:	57 95       	ror	r21
    18d0:	47 95       	ror	r20
    18d2:	37 95       	ror	r19
    18d4:	27 95       	ror	r18
    18d6:	ba 95       	dec	r27
    18d8:	c9 f7       	brne	.-14     	; 0x18cc <__ultoa_invert+0xa2>
    18da:	62 0f       	add	r22, r18
    18dc:	73 1f       	adc	r23, r19
    18de:	84 1f       	adc	r24, r20
    18e0:	95 1f       	adc	r25, r21
    18e2:	a0 1d       	adc	r26, r0
    18e4:	08 95       	ret

000018e6 <__ctype_isfalse>:
    18e6:	99 27       	eor	r25, r25
    18e8:	88 27       	eor	r24, r24

000018ea <__ctype_istrue>:
    18ea:	08 95       	ret

000018ec <_exit>:
    18ec:	f8 94       	cli

000018ee <__stop_program>:
    18ee:	ff cf       	rjmp	.-2      	; 0x18ee <__stop_program>
