
Eindopdracht.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  000011c0  00001254  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011c0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800112  00800112  00001266  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001266  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000012c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00001300  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000de9  00000000  00000000  000013a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aa0  00000000  00000000  00002189  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000615  00000000  00000000  00002c29  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000204  00000000  00000000  00003240  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000568  00000000  00000000  00003444  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000556  00000000  00000000  000039ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00003f02  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
       2:	00 00       	nop
       4:	67 c0       	rjmp	.+206    	; 0xd4 <__bad_interrupt>
       6:	00 00       	nop
       8:	65 c0       	rjmp	.+202    	; 0xd4 <__bad_interrupt>
       a:	00 00       	nop
       c:	63 c0       	rjmp	.+198    	; 0xd4 <__bad_interrupt>
       e:	00 00       	nop
      10:	61 c0       	rjmp	.+194    	; 0xd4 <__bad_interrupt>
      12:	00 00       	nop
      14:	5f c0       	rjmp	.+190    	; 0xd4 <__bad_interrupt>
      16:	00 00       	nop
      18:	5d c0       	rjmp	.+186    	; 0xd4 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	5b c0       	rjmp	.+182    	; 0xd4 <__bad_interrupt>
      1e:	00 00       	nop
      20:	59 c0       	rjmp	.+178    	; 0xd4 <__bad_interrupt>
      22:	00 00       	nop
      24:	57 c0       	rjmp	.+174    	; 0xd4 <__bad_interrupt>
      26:	00 00       	nop
      28:	55 c0       	rjmp	.+170    	; 0xd4 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	53 c0       	rjmp	.+166    	; 0xd4 <__bad_interrupt>
      2e:	00 00       	nop
      30:	2f c1       	rjmp	.+606    	; 0x290 <__vector_12>
      32:	00 00       	nop
      34:	b1 c1       	rjmp	.+866    	; 0x398 <__vector_13>
      36:	00 00       	nop
      38:	4d c0       	rjmp	.+154    	; 0xd4 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	4b c0       	rjmp	.+150    	; 0xd4 <__bad_interrupt>
      3e:	00 00       	nop
      40:	49 c0       	rjmp	.+146    	; 0xd4 <__bad_interrupt>
      42:	00 00       	nop
      44:	47 c0       	rjmp	.+142    	; 0xd4 <__bad_interrupt>
      46:	00 00       	nop
      48:	45 c0       	rjmp	.+138    	; 0xd4 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	43 c0       	rjmp	.+134    	; 0xd4 <__bad_interrupt>
      4e:	00 00       	nop
      50:	41 c0       	rjmp	.+130    	; 0xd4 <__bad_interrupt>
      52:	00 00       	nop
      54:	3f c0       	rjmp	.+126    	; 0xd4 <__bad_interrupt>
      56:	00 00       	nop
      58:	3d c0       	rjmp	.+122    	; 0xd4 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	3b c0       	rjmp	.+118    	; 0xd4 <__bad_interrupt>
      5e:	00 00       	nop
      60:	39 c0       	rjmp	.+114    	; 0xd4 <__bad_interrupt>
      62:	00 00       	nop
      64:	37 c0       	rjmp	.+110    	; 0xd4 <__bad_interrupt>
      66:	00 00       	nop
      68:	35 c0       	rjmp	.+106    	; 0xd4 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	33 c0       	rjmp	.+102    	; 0xd4 <__bad_interrupt>
      6e:	00 00       	nop
      70:	31 c0       	rjmp	.+98     	; 0xd4 <__bad_interrupt>
      72:	00 00       	nop
      74:	2f c0       	rjmp	.+94     	; 0xd4 <__bad_interrupt>
      76:	00 00       	nop
      78:	2d c0       	rjmp	.+90     	; 0xd4 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	2b c0       	rjmp	.+86     	; 0xd4 <__bad_interrupt>
      7e:	00 00       	nop
      80:	29 c0       	rjmp	.+82     	; 0xd4 <__bad_interrupt>
      82:	00 00       	nop
      84:	27 c0       	rjmp	.+78     	; 0xd4 <__bad_interrupt>
      86:	00 00       	nop
      88:	25 c0       	rjmp	.+74     	; 0xd4 <__bad_interrupt>
	...

0000008c <__trampolines_end>:
      8c:	63 64       	ori	r22, 0x43	; 67
      8e:	69 6e       	ori	r22, 0xE9	; 233
      90:	6f 70       	andi	r22, 0x0F	; 15
      92:	73 75       	andi	r23, 0x53	; 83
      94:	78 58       	subi	r23, 0x88	; 136
      96:	5b 00       	.word	0x005b	; ????

00000098 <__ctors_end>:
      98:	11 24       	eor	r1, r1
      9a:	1f be       	out	0x3f, r1	; 63
      9c:	cf ef       	ldi	r28, 0xFF	; 255
      9e:	d0 e1       	ldi	r29, 0x10	; 16
      a0:	de bf       	out	0x3e, r29	; 62
      a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
      a4:	11 e0       	ldi	r17, 0x01	; 1
      a6:	a0 e0       	ldi	r26, 0x00	; 0
      a8:	b1 e0       	ldi	r27, 0x01	; 1
      aa:	e0 ec       	ldi	r30, 0xC0	; 192
      ac:	f1 e1       	ldi	r31, 0x11	; 17
      ae:	00 e0       	ldi	r16, 0x00	; 0
      b0:	0b bf       	out	0x3b, r16	; 59
      b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
      b4:	07 90       	elpm	r0, Z+
      b6:	0d 92       	st	X+, r0
      b8:	a2 31       	cpi	r26, 0x12	; 18
      ba:	b1 07       	cpc	r27, r17
      bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
      be:	21 e0       	ldi	r18, 0x01	; 1
      c0:	a2 e1       	ldi	r26, 0x12	; 18
      c2:	b1 e0       	ldi	r27, 0x01	; 1
      c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
      c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
      c8:	aa 31       	cpi	r26, 0x1A	; 26
      ca:	b2 07       	cpc	r27, r18
      cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
      ce:	70 d0       	rcall	.+224    	; 0x1b0 <main>
      d0:	0c 94 de 08 	jmp	0x11bc	; 0x11bc <_exit>

000000d4 <__bad_interrupt>:
      d4:	95 cf       	rjmp	.-214    	; 0x0 <__vectors>

000000d6 <USART_Init>:
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC)) )
	;
	/* Get and return received data from buffer */
	return UDR0;
}
      d6:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
      da:	89 b9       	out	0x09, r24	; 9
      dc:	88 e1       	ldi	r24, 0x18	; 24
      de:	8a b9       	out	0x0a, r24	; 10
      e0:	8e e0       	ldi	r24, 0x0E	; 14
      e2:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
      e6:	08 95       	ret

000000e8 <USART_Transmit>:
      e8:	5d 9b       	sbis	0x0b, 5	; 11
      ea:	fe cf       	rjmp	.-4      	; 0xe8 <USART_Transmit>
      ec:	8c b9       	out	0x0c, r24	; 12
      ee:	08 95       	ret

000000f0 <USART_Receive_String>:

void USART_Receive_String(char* data)
{
      f0:	ac 01       	movw	r20, r24
	int i = 0;
	
	char tempData = 'a';
      f2:	91 e6       	ldi	r25, 0x61	; 97
	return UDR0;
}

void USART_Receive_String(char* data)
{
	int i = 0;
      f4:	20 e0       	ldi	r18, 0x00	; 0
      f6:	30 e0       	ldi	r19, 0x00	; 0
	
	char tempData = 'a';
	
	//char *pChar = &tempData;
	
	while(tempData != ':')
      f8:	09 c0       	rjmp	.+18     	; 0x10c <USART_Receive_String+0x1c>
	{
		/* Wait for data to be received */
		while ( !(UCSR0A & (1<<RXC)) );
      fa:	5f 9b       	sbis	0x0b, 7	; 11
      fc:	fe cf       	rjmp	.-4      	; 0xfa <USART_Receive_String+0xa>
		
		tempData = UDR0;
      fe:	9c b1       	in	r25, 0x0c	; 12
		//display_text(pChar);
		
		data[i] = tempData;
     100:	fa 01       	movw	r30, r20
     102:	e2 0f       	add	r30, r18
     104:	f3 1f       	adc	r31, r19
     106:	90 83       	st	Z, r25
		i++;
     108:	2f 5f       	subi	r18, 0xFF	; 255
     10a:	3f 4f       	sbci	r19, 0xFF	; 255
	
	char tempData = 'a';
	
	//char *pChar = &tempData;
	
	while(tempData != ':')
     10c:	9a 33       	cpi	r25, 0x3A	; 58
     10e:	a9 f7       	brne	.-22     	; 0xfa <USART_Receive_String+0xa>
		//display_text(pChar);
		
		data[i] = tempData;
		i++;
	}
	data[i] = '\0';
     110:	fa 01       	movw	r30, r20
     112:	e2 0f       	add	r30, r18
     114:	f3 1f       	adc	r31, r19
     116:	10 82       	st	Z, r1
     118:	08 95       	ret

0000011a <USART_onlyNumbers>:
}

int USART_onlyNumbers(char* data)
{
     11a:	cf 93       	push	r28
     11c:	df 93       	push	r29
     11e:	cd b7       	in	r28, 0x3d	; 61
     120:	de b7       	in	r29, 0x3e	; 62
     122:	27 97       	sbiw	r28, 0x07	; 7
     124:	0f b6       	in	r0, 0x3f	; 63
     126:	f8 94       	cli
     128:	de bf       	out	0x3e, r29	; 62
     12a:	0f be       	out	0x3f, r0	; 63
     12c:	cd bf       	out	0x3d, r28	; 61
     12e:	ac 01       	movw	r20, r24
	char subArray[5];
		for (int i = 0; i < 4; i++)
     130:	20 e0       	ldi	r18, 0x00	; 0
     132:	30 e0       	ldi	r19, 0x00	; 0
     134:	0d c0       	rjmp	.+26     	; 0x150 <USART_onlyNumbers+0x36>
		{
			subArray[i] = data[i+5];
     136:	fa 01       	movw	r30, r20
     138:	e2 0f       	add	r30, r18
     13a:	f3 1f       	adc	r31, r19
     13c:	95 81       	ldd	r25, Z+5	; 0x05
     13e:	e1 e0       	ldi	r30, 0x01	; 1
     140:	f0 e0       	ldi	r31, 0x00	; 0
     142:	ec 0f       	add	r30, r28
     144:	fd 1f       	adc	r31, r29
     146:	e2 0f       	add	r30, r18
     148:	f3 1f       	adc	r31, r19
     14a:	90 83       	st	Z, r25
}

int USART_onlyNumbers(char* data)
{
	char subArray[5];
		for (int i = 0; i < 4; i++)
     14c:	2f 5f       	subi	r18, 0xFF	; 255
     14e:	3f 4f       	sbci	r19, 0xFF	; 255
     150:	24 30       	cpi	r18, 0x04	; 4
     152:	31 05       	cpc	r19, r1
     154:	84 f3       	brlt	.-32     	; 0x136 <USART_onlyNumbers+0x1c>
		{
			subArray[i] = data[i+5];
		}
		
		int distance;
		sscanf(subArray, "%d", &distance);
     156:	ce 01       	movw	r24, r28
     158:	06 96       	adiw	r24, 0x06	; 6
     15a:	9f 93       	push	r25
     15c:	8f 93       	push	r24
     15e:	8e e0       	ldi	r24, 0x0E	; 14
     160:	91 e0       	ldi	r25, 0x01	; 1
     162:	9f 93       	push	r25
     164:	8f 93       	push	r24
     166:	ce 01       	movw	r24, r28
     168:	01 96       	adiw	r24, 0x01	; 1
     16a:	9f 93       	push	r25
     16c:	8f 93       	push	r24
     16e:	cf d4       	rcall	.+2462   	; 0xb0e <sscanf>

	return distance;
     170:	0f 90       	pop	r0
     172:	0f 90       	pop	r0
     174:	0f 90       	pop	r0
     176:	0f 90       	pop	r0
     178:	0f 90       	pop	r0
     17a:	0f 90       	pop	r0
}
     17c:	8e 81       	ldd	r24, Y+6	; 0x06
     17e:	9f 81       	ldd	r25, Y+7	; 0x07
     180:	27 96       	adiw	r28, 0x07	; 7
     182:	0f b6       	in	r0, 0x3f	; 63
     184:	f8 94       	cli
     186:	de bf       	out	0x3e, r29	; 62
     188:	0f be       	out	0x3f, r0	; 63
     18a:	cd bf       	out	0x3d, r28	; 61
     18c:	df 91       	pop	r29
     18e:	cf 91       	pop	r28
     190:	08 95       	ret

00000192 <wait>:
	return 1;
}

void wait(int ms)
{
	for (int tms=0; tms<ms; tms++)
     192:	20 e0       	ldi	r18, 0x00	; 0
     194:	30 e0       	ldi	r19, 0x00	; 0
     196:	08 c0       	rjmp	.+16     	; 0x1a8 <wait+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     198:	ef ec       	ldi	r30, 0xCF	; 207
     19a:	f7 e0       	ldi	r31, 0x07	; 7
     19c:	31 97       	sbiw	r30, 0x01	; 1
     19e:	f1 f7       	brne	.-4      	; 0x19c <wait+0xa>
     1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <wait+0x10>
     1a2:	00 00       	nop
     1a4:	2f 5f       	subi	r18, 0xFF	; 255
     1a6:	3f 4f       	sbci	r19, 0xFF	; 255
     1a8:	28 17       	cp	r18, r24
     1aa:	39 07       	cpc	r19, r25
     1ac:	ac f3       	brlt	.-22     	; 0x198 <wait+0x6>
		_delay_ms(1);
     1ae:	08 95       	ret

000001b0 <main>:
int servo2_targetValue;


int main( void )
{
	DDRB = 0xFF; // Set whole port B as output
     1b0:	8f ef       	ldi	r24, 0xFF	; 255
     1b2:	87 bb       	out	0x17, r24	; 23
	
	servo_init();
     1b4:	1e d0       	rcall	.+60     	; 0x1f2 <servo_init>
	wait(200); // Wait for the init of the servo's
     1b6:	88 ec       	ldi	r24, 0xC8	; 200
     1b8:	90 e0       	ldi	r25, 0x00	; 0
     1ba:	eb df       	rcall	.-42     	; 0x192 <wait>
	servo1_targetValue = 90;
     1bc:	8a e5       	ldi	r24, 0x5A	; 90
     1be:	90 e0       	ldi	r25, 0x00	; 0
     1c0:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <__data_end+0x1>
     1c4:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
	servo2_targetValue = 90;
     1c8:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <servo2_targetValue+0x1>
     1cc:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <servo2_targetValue>
	
	USART_Init(MYUBRR);
     1d0:	83 e3       	ldi	r24, 0x33	; 51
     1d2:	90 e0       	ldi	r25, 0x00	; 0
     1d4:	80 df       	rcall	.-256    	; 0xd6 <USART_Init>
	char *data = (char*) malloc(sizeof(char) * 20);
     1d6:	84 e1       	ldi	r24, 0x14	; 20
     1d8:	90 e0       	ldi	r25, 0x00	; 0
     1da:	78 d3       	rcall	.+1776   	; 0x8cc <malloc>
     1dc:	ec 01       	movw	r28, r24
	int distance = 0;
	
	while (1)
	{	
		USART_Transmit('R');	// Send measure command to lrf
     1de:	82 e5       	ldi	r24, 0x52	; 82
     1e0:	83 df       	rcall	.-250    	; 0xe8 <USART_Transmit>
		USART_Receive_String(data);	// Receive string form lrf
     1e2:	ce 01       	movw	r24, r28
     1e4:	85 df       	rcall	.-246    	; 0xf0 <USART_Receive_String>
		distance = USART_onlyNumbers(data);	// Get the distance from the string
     1e6:	ce 01       	movw	r24, r28
     1e8:	98 df       	rcall	.-208    	; 0x11a <USART_onlyNumbers>
     1ea:	88 eb       	ldi	r24, 0xB8	; 184
		
		
		
		wait(3000);			
     1ec:	9b e0       	ldi	r25, 0x0B	; 11
     1ee:	d1 df       	rcall	.-94     	; 0x192 <wait>
     1f0:	f6 cf       	rjmp	.-20     	; 0x1de <main+0x2e>

000001f2 <servo_init>:
	OCR1B = currentValue;
}

void servo_init()
{
	OCR1A = startValue1;		// Sets the compare value of timer 1, (this is linked to port B5)
     1f2:	8a ef       	ldi	r24, 0xFA	; 250
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	9b bd       	out	0x2b, r25	; 43
     1f8:	8a bd       	out	0x2a, r24	; 42
	OCR1B = startValue2;		// Sets the compare value of timer 1, (this is linked to port B6)
     1fa:	99 bd       	out	0x29, r25	; 41
     1fc:	88 bd       	out	0x28, r24	; 40
	
	servo1_targetValue = startValue1;
     1fe:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <__data_end+0x1>
     202:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
	servo2_targetValue = startValue2;
     206:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <servo2_targetValue+0x1>
     20a:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <servo2_targetValue>
	
	TIMSK |= 1<<(3);			// Turn on compare mode for channel A
     20e:	87 b7       	in	r24, 0x37	; 55
     210:	88 60       	ori	r24, 0x08	; 8
     212:	87 bf       	out	0x37, r24	; 55
	TIMSK |= 1<<(4);			// Turn on compare mode for channel B
     214:	87 b7       	in	r24, 0x37	; 55
     216:	80 61       	ori	r24, 0x10	; 16
     218:	87 bf       	out	0x37, r24	; 55
	sei();						// Turn on interrupt system
     21a:	78 94       	sei
	
	ICR1 = 10000;				// Sets the upper limit to timer 1
     21c:	80 e1       	ldi	r24, 0x10	; 16
     21e:	97 e2       	ldi	r25, 0x27	; 39
     220:	97 bd       	out	0x27, r25	; 39
     222:	86 bd       	out	0x26, r24	; 38
	TCCR1A = 0b10100010;		// Set OC1A and OC1B as output
     224:	82 ea       	ldi	r24, 0xA2	; 162
     226:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = 0b00010010;		// fast PWM 8 bit, prescaler=8, RUN
     228:	82 e1       	ldi	r24, 0x12	; 18
     22a:	8e bd       	out	0x2e, r24	; 46
     22c:	08 95       	ret

0000022e <map>:
}

double map(double value, int newMin, int newMax)
{
     22e:	cf 92       	push	r12
     230:	df 92       	push	r13
     232:	ef 92       	push	r14
     234:	ff 92       	push	r15
     236:	0f 93       	push	r16
     238:	1f 93       	push	r17
     23a:	cf 93       	push	r28
     23c:	df 93       	push	r29
     23e:	8a 01       	movw	r16, r20
     240:	e9 01       	movw	r28, r18
	// Maps the value between two numbers: https://stackoverflow.com/questions/345187/math-mapping-numbers
	return (value - 0) / (180 - 0) * (newMax - newMin) + newMin;
     242:	20 e0       	ldi	r18, 0x00	; 0
     244:	30 e0       	ldi	r19, 0x00	; 0
     246:	44 e3       	ldi	r20, 0x34	; 52
     248:	53 e4       	ldi	r21, 0x43	; 67
     24a:	93 d1       	rcall	.+806    	; 0x572 <__divsf3>
     24c:	6b 01       	movw	r12, r22
     24e:	7c 01       	movw	r14, r24
     250:	be 01       	movw	r22, r28
     252:	60 1b       	sub	r22, r16
     254:	71 0b       	sbc	r23, r17
     256:	07 2e       	mov	r0, r23
     258:	00 0c       	add	r0, r0
     25a:	88 0b       	sbc	r24, r24
     25c:	99 0b       	sbc	r25, r25
     25e:	1f d2       	rcall	.+1086   	; 0x69e <__floatsisf>
     260:	a7 01       	movw	r20, r14
     262:	96 01       	movw	r18, r12
     264:	d0 d2       	rcall	.+1440   	; 0x806 <__mulsf3>
     266:	6b 01       	movw	r12, r22
     268:	7c 01       	movw	r14, r24
     26a:	b8 01       	movw	r22, r16
     26c:	11 0f       	add	r17, r17
     26e:	88 0b       	sbc	r24, r24
     270:	99 0b       	sbc	r25, r25
     272:	15 d2       	rcall	.+1066   	; 0x69e <__floatsisf>
     274:	9b 01       	movw	r18, r22
     276:	ac 01       	movw	r20, r24
     278:	c7 01       	movw	r24, r14
     27a:	b6 01       	movw	r22, r12
     27c:	12 d1       	rcall	.+548    	; 0x4a2 <__addsf3>
     27e:	df 91       	pop	r29
     280:	cf 91       	pop	r28
     282:	1f 91       	pop	r17
     284:	0f 91       	pop	r16
     286:	ff 90       	pop	r15
     288:	ef 90       	pop	r14
     28a:	df 90       	pop	r13
     28c:	cf 90       	pop	r12
     28e:	08 95       	ret

00000290 <__vector_12>:
int servo1_targetValue;
int servo2_targetValue;


ISR(TIMER1_COMPA_vect)
{
     290:	1f 92       	push	r1
     292:	0f 92       	push	r0
     294:	0f b6       	in	r0, 0x3f	; 63
     296:	0f 92       	push	r0
     298:	11 24       	eor	r1, r1
     29a:	0b b6       	in	r0, 0x3b	; 59
     29c:	0f 92       	push	r0
     29e:	8f 92       	push	r8
     2a0:	9f 92       	push	r9
     2a2:	af 92       	push	r10
     2a4:	bf 92       	push	r11
     2a6:	cf 92       	push	r12
     2a8:	df 92       	push	r13
     2aa:	ef 92       	push	r14
     2ac:	ff 92       	push	r15
     2ae:	2f 93       	push	r18
     2b0:	3f 93       	push	r19
     2b2:	4f 93       	push	r20
     2b4:	5f 93       	push	r21
     2b6:	6f 93       	push	r22
     2b8:	7f 93       	push	r23
     2ba:	8f 93       	push	r24
     2bc:	9f 93       	push	r25
     2be:	af 93       	push	r26
     2c0:	bf 93       	push	r27
     2c2:	ef 93       	push	r30
     2c4:	ff 93       	push	r31
	// Go slow to target value
	const float speed = 1;
	static float currentValue = startValue1;
	
	// Maps the value from 0-180 to 250-1300 (frequency of the servo)
	float targetValue = map(servo1_targetValue, 250, 1300);
     2c6:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <__data_end>
     2ca:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <__data_end+0x1>
     2ce:	07 2e       	mov	r0, r23
     2d0:	00 0c       	add	r0, r0
     2d2:	88 0b       	sbc	r24, r24
     2d4:	99 0b       	sbc	r25, r25
     2d6:	e3 d1       	rcall	.+966    	; 0x69e <__floatsisf>
     2d8:	24 e1       	ldi	r18, 0x14	; 20
     2da:	35 e0       	ldi	r19, 0x05	; 5
     2dc:	4a ef       	ldi	r20, 0xFA	; 250
     2de:	50 e0       	ldi	r21, 0x00	; 0
     2e0:	a6 df       	rcall	.-180    	; 0x22e <map>
     2e2:	4b 01       	movw	r8, r22
     2e4:	5c 01       	movw	r10, r24
	
	if (currentValue < targetValue)
     2e6:	c0 90 0a 01 	lds	r12, 0x010A	; 0x80010a <currentValue.1948>
     2ea:	d0 90 0b 01 	lds	r13, 0x010B	; 0x80010b <currentValue.1948+0x1>
     2ee:	e0 90 0c 01 	lds	r14, 0x010C	; 0x80010c <currentValue.1948+0x2>
     2f2:	f0 90 0d 01 	lds	r15, 0x010D	; 0x80010d <currentValue.1948+0x3>
     2f6:	a7 01       	movw	r20, r14
     2f8:	96 01       	movw	r18, r12
     2fa:	81 d2       	rcall	.+1282   	; 0x7fe <__gesf2>
     2fc:	18 16       	cp	r1, r24
     2fe:	84 f4       	brge	.+32     	; 0x320 <__vector_12+0x90>
	currentValue += speed;
     300:	20 e0       	ldi	r18, 0x00	; 0
     302:	30 e0       	ldi	r19, 0x00	; 0
     304:	40 e8       	ldi	r20, 0x80	; 128
     306:	5f e3       	ldi	r21, 0x3F	; 63
     308:	c7 01       	movw	r24, r14
     30a:	b6 01       	movw	r22, r12
     30c:	ca d0       	rcall	.+404    	; 0x4a2 <__addsf3>
     30e:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <currentValue.1948>
     312:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <currentValue.1948+0x1>
     316:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <currentValue.1948+0x2>
     31a:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <currentValue.1948+0x3>
     31e:	16 c0       	rjmp	.+44     	; 0x34c <__vector_12+0xbc>
	else if (currentValue > targetValue)
     320:	a7 01       	movw	r20, r14
     322:	96 01       	movw	r18, r12
     324:	c5 01       	movw	r24, r10
     326:	b4 01       	movw	r22, r8
     328:	20 d1       	rcall	.+576    	; 0x56a <__cmpsf2>
     32a:	88 23       	and	r24, r24
     32c:	7c f4       	brge	.+30     	; 0x34c <__vector_12+0xbc>
	currentValue -= speed;
     32e:	20 e0       	ldi	r18, 0x00	; 0
     330:	30 e0       	ldi	r19, 0x00	; 0
     332:	40 e8       	ldi	r20, 0x80	; 128
     334:	5f e3       	ldi	r21, 0x3F	; 63
     336:	c7 01       	movw	r24, r14
     338:	b6 01       	movw	r22, r12
     33a:	b2 d0       	rcall	.+356    	; 0x4a0 <__subsf3>
     33c:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <currentValue.1948>
     340:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <currentValue.1948+0x1>
     344:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <currentValue.1948+0x2>
     348:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <currentValue.1948+0x3>
	
	OCR1A = currentValue;
     34c:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <currentValue.1948>
     350:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <currentValue.1948+0x1>
     354:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <currentValue.1948+0x2>
     358:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <currentValue.1948+0x3>
     35c:	72 d1       	rcall	.+740    	; 0x642 <__fixunssfsi>
     35e:	7b bd       	out	0x2b, r23	; 43
     360:	6a bd       	out	0x2a, r22	; 42
}
     362:	ff 91       	pop	r31
     364:	ef 91       	pop	r30
     366:	bf 91       	pop	r27
     368:	af 91       	pop	r26
     36a:	9f 91       	pop	r25
     36c:	8f 91       	pop	r24
     36e:	7f 91       	pop	r23
     370:	6f 91       	pop	r22
     372:	5f 91       	pop	r21
     374:	4f 91       	pop	r20
     376:	3f 91       	pop	r19
     378:	2f 91       	pop	r18
     37a:	ff 90       	pop	r15
     37c:	ef 90       	pop	r14
     37e:	df 90       	pop	r13
     380:	cf 90       	pop	r12
     382:	bf 90       	pop	r11
     384:	af 90       	pop	r10
     386:	9f 90       	pop	r9
     388:	8f 90       	pop	r8
     38a:	0f 90       	pop	r0
     38c:	0b be       	out	0x3b, r0	; 59
     38e:	0f 90       	pop	r0
     390:	0f be       	out	0x3f, r0	; 63
     392:	0f 90       	pop	r0
     394:	1f 90       	pop	r1
     396:	18 95       	reti

00000398 <__vector_13>:

ISR(TIMER1_COMPB_vect)
{
     398:	1f 92       	push	r1
     39a:	0f 92       	push	r0
     39c:	0f b6       	in	r0, 0x3f	; 63
     39e:	0f 92       	push	r0
     3a0:	11 24       	eor	r1, r1
     3a2:	0b b6       	in	r0, 0x3b	; 59
     3a4:	0f 92       	push	r0
     3a6:	8f 92       	push	r8
     3a8:	9f 92       	push	r9
     3aa:	af 92       	push	r10
     3ac:	bf 92       	push	r11
     3ae:	cf 92       	push	r12
     3b0:	df 92       	push	r13
     3b2:	ef 92       	push	r14
     3b4:	ff 92       	push	r15
     3b6:	2f 93       	push	r18
     3b8:	3f 93       	push	r19
     3ba:	4f 93       	push	r20
     3bc:	5f 93       	push	r21
     3be:	6f 93       	push	r22
     3c0:	7f 93       	push	r23
     3c2:	8f 93       	push	r24
     3c4:	9f 93       	push	r25
     3c6:	af 93       	push	r26
     3c8:	bf 93       	push	r27
     3ca:	ef 93       	push	r30
     3cc:	ff 93       	push	r31
	// Go slow to target value
	const float speed = 1;
	static float currentValue = startValue2;
	
	// Maps the value from 0-180 to 250-1300 (frequency of the servo)
	float targetValue = map(servo2_targetValue, 250, 1300);
     3ce:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <servo2_targetValue>
     3d2:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <servo2_targetValue+0x1>
     3d6:	07 2e       	mov	r0, r23
     3d8:	00 0c       	add	r0, r0
     3da:	88 0b       	sbc	r24, r24
     3dc:	99 0b       	sbc	r25, r25
     3de:	5f d1       	rcall	.+702    	; 0x69e <__floatsisf>
     3e0:	24 e1       	ldi	r18, 0x14	; 20
     3e2:	35 e0       	ldi	r19, 0x05	; 5
     3e4:	4a ef       	ldi	r20, 0xFA	; 250
     3e6:	50 e0       	ldi	r21, 0x00	; 0
     3e8:	22 df       	rcall	.-444    	; 0x22e <map>
     3ea:	4b 01       	movw	r8, r22
     3ec:	5c 01       	movw	r10, r24
	
	if (currentValue < targetValue)
     3ee:	c0 90 06 01 	lds	r12, 0x0106	; 0x800106 <currentValue.1956>
     3f2:	d0 90 07 01 	lds	r13, 0x0107	; 0x800107 <currentValue.1956+0x1>
     3f6:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <currentValue.1956+0x2>
     3fa:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <currentValue.1956+0x3>
     3fe:	a7 01       	movw	r20, r14
     400:	96 01       	movw	r18, r12
     402:	fd d1       	rcall	.+1018   	; 0x7fe <__gesf2>
     404:	18 16       	cp	r1, r24
     406:	84 f4       	brge	.+32     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
	currentValue += speed;
     408:	20 e0       	ldi	r18, 0x00	; 0
     40a:	30 e0       	ldi	r19, 0x00	; 0
     40c:	40 e8       	ldi	r20, 0x80	; 128
     40e:	5f e3       	ldi	r21, 0x3F	; 63
     410:	c7 01       	movw	r24, r14
     412:	b6 01       	movw	r22, r12
     414:	46 d0       	rcall	.+140    	; 0x4a2 <__addsf3>
     416:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <currentValue.1956>
     41a:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <currentValue.1956+0x1>
     41e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <currentValue.1956+0x2>
     422:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <currentValue.1956+0x3>
     426:	16 c0       	rjmp	.+44     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
	else if (currentValue > targetValue)
     428:	a7 01       	movw	r20, r14
     42a:	96 01       	movw	r18, r12
     42c:	c5 01       	movw	r24, r10
     42e:	b4 01       	movw	r22, r8
     430:	9c d0       	rcall	.+312    	; 0x56a <__cmpsf2>
     432:	88 23       	and	r24, r24
     434:	7c f4       	brge	.+30     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
	currentValue -= speed;
     436:	20 e0       	ldi	r18, 0x00	; 0
     438:	30 e0       	ldi	r19, 0x00	; 0
     43a:	40 e8       	ldi	r20, 0x80	; 128
     43c:	5f e3       	ldi	r21, 0x3F	; 63
     43e:	c7 01       	movw	r24, r14
     440:	b6 01       	movw	r22, r12
     442:	2e d0       	rcall	.+92     	; 0x4a0 <__subsf3>
     444:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <currentValue.1956>
     448:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <currentValue.1956+0x1>
     44c:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <currentValue.1956+0x2>
     450:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <currentValue.1956+0x3>
	
	OCR1B = currentValue;
     454:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <currentValue.1956>
     458:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <currentValue.1956+0x1>
     45c:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <currentValue.1956+0x2>
     460:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <currentValue.1956+0x3>
     464:	ee d0       	rcall	.+476    	; 0x642 <__fixunssfsi>
     466:	79 bd       	out	0x29, r23	; 41
     468:	68 bd       	out	0x28, r22	; 40
}
     46a:	ff 91       	pop	r31
     46c:	ef 91       	pop	r30
     46e:	bf 91       	pop	r27
     470:	af 91       	pop	r26
     472:	9f 91       	pop	r25
     474:	8f 91       	pop	r24
     476:	7f 91       	pop	r23
     478:	6f 91       	pop	r22
     47a:	5f 91       	pop	r21
     47c:	4f 91       	pop	r20
     47e:	3f 91       	pop	r19
     480:	2f 91       	pop	r18
     482:	ff 90       	pop	r15
     484:	ef 90       	pop	r14
     486:	df 90       	pop	r13
     488:	cf 90       	pop	r12
     48a:	bf 90       	pop	r11
     48c:	af 90       	pop	r10
     48e:	9f 90       	pop	r9
     490:	8f 90       	pop	r8
     492:	0f 90       	pop	r0
     494:	0b be       	out	0x3b, r0	; 59
     496:	0f 90       	pop	r0
     498:	0f be       	out	0x3f, r0	; 63
     49a:	0f 90       	pop	r0
     49c:	1f 90       	pop	r1
     49e:	18 95       	reti

000004a0 <__subsf3>:
     4a0:	50 58       	subi	r21, 0x80	; 128

000004a2 <__addsf3>:
     4a2:	bb 27       	eor	r27, r27
     4a4:	aa 27       	eor	r26, r26
     4a6:	0e d0       	rcall	.+28     	; 0x4c4 <__addsf3x>
     4a8:	70 c1       	rjmp	.+736    	; 0x78a <__fp_round>
     4aa:	61 d1       	rcall	.+706    	; 0x76e <__fp_pscA>
     4ac:	30 f0       	brcs	.+12     	; 0x4ba <__addsf3+0x18>
     4ae:	66 d1       	rcall	.+716    	; 0x77c <__fp_pscB>
     4b0:	20 f0       	brcs	.+8      	; 0x4ba <__addsf3+0x18>
     4b2:	31 f4       	brne	.+12     	; 0x4c0 <__addsf3+0x1e>
     4b4:	9f 3f       	cpi	r25, 0xFF	; 255
     4b6:	11 f4       	brne	.+4      	; 0x4bc <__addsf3+0x1a>
     4b8:	1e f4       	brtc	.+6      	; 0x4c0 <__addsf3+0x1e>
     4ba:	56 c1       	rjmp	.+684    	; 0x768 <__fp_nan>
     4bc:	0e f4       	brtc	.+2      	; 0x4c0 <__addsf3+0x1e>
     4be:	e0 95       	com	r30
     4c0:	e7 fb       	bst	r30, 7
     4c2:	4c c1       	rjmp	.+664    	; 0x75c <__fp_inf>

000004c4 <__addsf3x>:
     4c4:	e9 2f       	mov	r30, r25
     4c6:	72 d1       	rcall	.+740    	; 0x7ac <__fp_split3>
     4c8:	80 f3       	brcs	.-32     	; 0x4aa <__addsf3+0x8>
     4ca:	ba 17       	cp	r27, r26
     4cc:	62 07       	cpc	r22, r18
     4ce:	73 07       	cpc	r23, r19
     4d0:	84 07       	cpc	r24, r20
     4d2:	95 07       	cpc	r25, r21
     4d4:	18 f0       	brcs	.+6      	; 0x4dc <__addsf3x+0x18>
     4d6:	71 f4       	brne	.+28     	; 0x4f4 <__addsf3x+0x30>
     4d8:	9e f5       	brtc	.+102    	; 0x540 <__addsf3x+0x7c>
     4da:	8a c1       	rjmp	.+788    	; 0x7f0 <__fp_zero>
     4dc:	0e f4       	brtc	.+2      	; 0x4e0 <__addsf3x+0x1c>
     4de:	e0 95       	com	r30
     4e0:	0b 2e       	mov	r0, r27
     4e2:	ba 2f       	mov	r27, r26
     4e4:	a0 2d       	mov	r26, r0
     4e6:	0b 01       	movw	r0, r22
     4e8:	b9 01       	movw	r22, r18
     4ea:	90 01       	movw	r18, r0
     4ec:	0c 01       	movw	r0, r24
     4ee:	ca 01       	movw	r24, r20
     4f0:	a0 01       	movw	r20, r0
     4f2:	11 24       	eor	r1, r1
     4f4:	ff 27       	eor	r31, r31
     4f6:	59 1b       	sub	r21, r25
     4f8:	99 f0       	breq	.+38     	; 0x520 <__addsf3x+0x5c>
     4fa:	59 3f       	cpi	r21, 0xF9	; 249
     4fc:	50 f4       	brcc	.+20     	; 0x512 <__addsf3x+0x4e>
     4fe:	50 3e       	cpi	r21, 0xE0	; 224
     500:	68 f1       	brcs	.+90     	; 0x55c <__addsf3x+0x98>
     502:	1a 16       	cp	r1, r26
     504:	f0 40       	sbci	r31, 0x00	; 0
     506:	a2 2f       	mov	r26, r18
     508:	23 2f       	mov	r18, r19
     50a:	34 2f       	mov	r19, r20
     50c:	44 27       	eor	r20, r20
     50e:	58 5f       	subi	r21, 0xF8	; 248
     510:	f3 cf       	rjmp	.-26     	; 0x4f8 <__addsf3x+0x34>
     512:	46 95       	lsr	r20
     514:	37 95       	ror	r19
     516:	27 95       	ror	r18
     518:	a7 95       	ror	r26
     51a:	f0 40       	sbci	r31, 0x00	; 0
     51c:	53 95       	inc	r21
     51e:	c9 f7       	brne	.-14     	; 0x512 <__addsf3x+0x4e>
     520:	7e f4       	brtc	.+30     	; 0x540 <__addsf3x+0x7c>
     522:	1f 16       	cp	r1, r31
     524:	ba 0b       	sbc	r27, r26
     526:	62 0b       	sbc	r22, r18
     528:	73 0b       	sbc	r23, r19
     52a:	84 0b       	sbc	r24, r20
     52c:	ba f0       	brmi	.+46     	; 0x55c <__addsf3x+0x98>
     52e:	91 50       	subi	r25, 0x01	; 1
     530:	a1 f0       	breq	.+40     	; 0x55a <__addsf3x+0x96>
     532:	ff 0f       	add	r31, r31
     534:	bb 1f       	adc	r27, r27
     536:	66 1f       	adc	r22, r22
     538:	77 1f       	adc	r23, r23
     53a:	88 1f       	adc	r24, r24
     53c:	c2 f7       	brpl	.-16     	; 0x52e <__addsf3x+0x6a>
     53e:	0e c0       	rjmp	.+28     	; 0x55c <__addsf3x+0x98>
     540:	ba 0f       	add	r27, r26
     542:	62 1f       	adc	r22, r18
     544:	73 1f       	adc	r23, r19
     546:	84 1f       	adc	r24, r20
     548:	48 f4       	brcc	.+18     	; 0x55c <__addsf3x+0x98>
     54a:	87 95       	ror	r24
     54c:	77 95       	ror	r23
     54e:	67 95       	ror	r22
     550:	b7 95       	ror	r27
     552:	f7 95       	ror	r31
     554:	9e 3f       	cpi	r25, 0xFE	; 254
     556:	08 f0       	brcs	.+2      	; 0x55a <__addsf3x+0x96>
     558:	b3 cf       	rjmp	.-154    	; 0x4c0 <__addsf3+0x1e>
     55a:	93 95       	inc	r25
     55c:	88 0f       	add	r24, r24
     55e:	08 f0       	brcs	.+2      	; 0x562 <__addsf3x+0x9e>
     560:	99 27       	eor	r25, r25
     562:	ee 0f       	add	r30, r30
     564:	97 95       	ror	r25
     566:	87 95       	ror	r24
     568:	08 95       	ret

0000056a <__cmpsf2>:
     56a:	d4 d0       	rcall	.+424    	; 0x714 <__fp_cmp>
     56c:	08 f4       	brcc	.+2      	; 0x570 <__cmpsf2+0x6>
     56e:	81 e0       	ldi	r24, 0x01	; 1
     570:	08 95       	ret

00000572 <__divsf3>:
     572:	0c d0       	rcall	.+24     	; 0x58c <__divsf3x>
     574:	0a c1       	rjmp	.+532    	; 0x78a <__fp_round>
     576:	02 d1       	rcall	.+516    	; 0x77c <__fp_pscB>
     578:	40 f0       	brcs	.+16     	; 0x58a <__divsf3+0x18>
     57a:	f9 d0       	rcall	.+498    	; 0x76e <__fp_pscA>
     57c:	30 f0       	brcs	.+12     	; 0x58a <__divsf3+0x18>
     57e:	21 f4       	brne	.+8      	; 0x588 <__divsf3+0x16>
     580:	5f 3f       	cpi	r21, 0xFF	; 255
     582:	19 f0       	breq	.+6      	; 0x58a <__divsf3+0x18>
     584:	eb c0       	rjmp	.+470    	; 0x75c <__fp_inf>
     586:	51 11       	cpse	r21, r1
     588:	34 c1       	rjmp	.+616    	; 0x7f2 <__fp_szero>
     58a:	ee c0       	rjmp	.+476    	; 0x768 <__fp_nan>

0000058c <__divsf3x>:
     58c:	0f d1       	rcall	.+542    	; 0x7ac <__fp_split3>
     58e:	98 f3       	brcs	.-26     	; 0x576 <__divsf3+0x4>

00000590 <__divsf3_pse>:
     590:	99 23       	and	r25, r25
     592:	c9 f3       	breq	.-14     	; 0x586 <__divsf3+0x14>
     594:	55 23       	and	r21, r21
     596:	b1 f3       	breq	.-20     	; 0x584 <__divsf3+0x12>
     598:	95 1b       	sub	r25, r21
     59a:	55 0b       	sbc	r21, r21
     59c:	bb 27       	eor	r27, r27
     59e:	aa 27       	eor	r26, r26
     5a0:	62 17       	cp	r22, r18
     5a2:	73 07       	cpc	r23, r19
     5a4:	84 07       	cpc	r24, r20
     5a6:	38 f0       	brcs	.+14     	; 0x5b6 <__divsf3_pse+0x26>
     5a8:	9f 5f       	subi	r25, 0xFF	; 255
     5aa:	5f 4f       	sbci	r21, 0xFF	; 255
     5ac:	22 0f       	add	r18, r18
     5ae:	33 1f       	adc	r19, r19
     5b0:	44 1f       	adc	r20, r20
     5b2:	aa 1f       	adc	r26, r26
     5b4:	a9 f3       	breq	.-22     	; 0x5a0 <__divsf3_pse+0x10>
     5b6:	33 d0       	rcall	.+102    	; 0x61e <__divsf3_pse+0x8e>
     5b8:	0e 2e       	mov	r0, r30
     5ba:	3a f0       	brmi	.+14     	; 0x5ca <__divsf3_pse+0x3a>
     5bc:	e0 e8       	ldi	r30, 0x80	; 128
     5be:	30 d0       	rcall	.+96     	; 0x620 <__divsf3_pse+0x90>
     5c0:	91 50       	subi	r25, 0x01	; 1
     5c2:	50 40       	sbci	r21, 0x00	; 0
     5c4:	e6 95       	lsr	r30
     5c6:	00 1c       	adc	r0, r0
     5c8:	ca f7       	brpl	.-14     	; 0x5bc <__divsf3_pse+0x2c>
     5ca:	29 d0       	rcall	.+82     	; 0x61e <__divsf3_pse+0x8e>
     5cc:	fe 2f       	mov	r31, r30
     5ce:	27 d0       	rcall	.+78     	; 0x61e <__divsf3_pse+0x8e>
     5d0:	66 0f       	add	r22, r22
     5d2:	77 1f       	adc	r23, r23
     5d4:	88 1f       	adc	r24, r24
     5d6:	bb 1f       	adc	r27, r27
     5d8:	26 17       	cp	r18, r22
     5da:	37 07       	cpc	r19, r23
     5dc:	48 07       	cpc	r20, r24
     5de:	ab 07       	cpc	r26, r27
     5e0:	b0 e8       	ldi	r27, 0x80	; 128
     5e2:	09 f0       	breq	.+2      	; 0x5e6 <__divsf3_pse+0x56>
     5e4:	bb 0b       	sbc	r27, r27
     5e6:	80 2d       	mov	r24, r0
     5e8:	bf 01       	movw	r22, r30
     5ea:	ff 27       	eor	r31, r31
     5ec:	93 58       	subi	r25, 0x83	; 131
     5ee:	5f 4f       	sbci	r21, 0xFF	; 255
     5f0:	2a f0       	brmi	.+10     	; 0x5fc <__divsf3_pse+0x6c>
     5f2:	9e 3f       	cpi	r25, 0xFE	; 254
     5f4:	51 05       	cpc	r21, r1
     5f6:	68 f0       	brcs	.+26     	; 0x612 <__divsf3_pse+0x82>
     5f8:	b1 c0       	rjmp	.+354    	; 0x75c <__fp_inf>
     5fa:	fb c0       	rjmp	.+502    	; 0x7f2 <__fp_szero>
     5fc:	5f 3f       	cpi	r21, 0xFF	; 255
     5fe:	ec f3       	brlt	.-6      	; 0x5fa <__divsf3_pse+0x6a>
     600:	98 3e       	cpi	r25, 0xE8	; 232
     602:	dc f3       	brlt	.-10     	; 0x5fa <__divsf3_pse+0x6a>
     604:	86 95       	lsr	r24
     606:	77 95       	ror	r23
     608:	67 95       	ror	r22
     60a:	b7 95       	ror	r27
     60c:	f7 95       	ror	r31
     60e:	9f 5f       	subi	r25, 0xFF	; 255
     610:	c9 f7       	brne	.-14     	; 0x604 <__divsf3_pse+0x74>
     612:	88 0f       	add	r24, r24
     614:	91 1d       	adc	r25, r1
     616:	96 95       	lsr	r25
     618:	87 95       	ror	r24
     61a:	97 f9       	bld	r25, 7
     61c:	08 95       	ret
     61e:	e1 e0       	ldi	r30, 0x01	; 1
     620:	66 0f       	add	r22, r22
     622:	77 1f       	adc	r23, r23
     624:	88 1f       	adc	r24, r24
     626:	bb 1f       	adc	r27, r27
     628:	62 17       	cp	r22, r18
     62a:	73 07       	cpc	r23, r19
     62c:	84 07       	cpc	r24, r20
     62e:	ba 07       	cpc	r27, r26
     630:	20 f0       	brcs	.+8      	; 0x63a <__divsf3_pse+0xaa>
     632:	62 1b       	sub	r22, r18
     634:	73 0b       	sbc	r23, r19
     636:	84 0b       	sbc	r24, r20
     638:	ba 0b       	sbc	r27, r26
     63a:	ee 1f       	adc	r30, r30
     63c:	88 f7       	brcc	.-30     	; 0x620 <__divsf3_pse+0x90>
     63e:	e0 95       	com	r30
     640:	08 95       	ret

00000642 <__fixunssfsi>:
     642:	bc d0       	rcall	.+376    	; 0x7bc <__fp_splitA>
     644:	88 f0       	brcs	.+34     	; 0x668 <__fixunssfsi+0x26>
     646:	9f 57       	subi	r25, 0x7F	; 127
     648:	90 f0       	brcs	.+36     	; 0x66e <__fixunssfsi+0x2c>
     64a:	b9 2f       	mov	r27, r25
     64c:	99 27       	eor	r25, r25
     64e:	b7 51       	subi	r27, 0x17	; 23
     650:	a0 f0       	brcs	.+40     	; 0x67a <__fixunssfsi+0x38>
     652:	d1 f0       	breq	.+52     	; 0x688 <__fixunssfsi+0x46>
     654:	66 0f       	add	r22, r22
     656:	77 1f       	adc	r23, r23
     658:	88 1f       	adc	r24, r24
     65a:	99 1f       	adc	r25, r25
     65c:	1a f0       	brmi	.+6      	; 0x664 <__fixunssfsi+0x22>
     65e:	ba 95       	dec	r27
     660:	c9 f7       	brne	.-14     	; 0x654 <__fixunssfsi+0x12>
     662:	12 c0       	rjmp	.+36     	; 0x688 <__fixunssfsi+0x46>
     664:	b1 30       	cpi	r27, 0x01	; 1
     666:	81 f0       	breq	.+32     	; 0x688 <__fixunssfsi+0x46>
     668:	c3 d0       	rcall	.+390    	; 0x7f0 <__fp_zero>
     66a:	b1 e0       	ldi	r27, 0x01	; 1
     66c:	08 95       	ret
     66e:	c0 c0       	rjmp	.+384    	; 0x7f0 <__fp_zero>
     670:	67 2f       	mov	r22, r23
     672:	78 2f       	mov	r23, r24
     674:	88 27       	eor	r24, r24
     676:	b8 5f       	subi	r27, 0xF8	; 248
     678:	39 f0       	breq	.+14     	; 0x688 <__fixunssfsi+0x46>
     67a:	b9 3f       	cpi	r27, 0xF9	; 249
     67c:	cc f3       	brlt	.-14     	; 0x670 <__fixunssfsi+0x2e>
     67e:	86 95       	lsr	r24
     680:	77 95       	ror	r23
     682:	67 95       	ror	r22
     684:	b3 95       	inc	r27
     686:	d9 f7       	brne	.-10     	; 0x67e <__fixunssfsi+0x3c>
     688:	3e f4       	brtc	.+14     	; 0x698 <__fixunssfsi+0x56>
     68a:	90 95       	com	r25
     68c:	80 95       	com	r24
     68e:	70 95       	com	r23
     690:	61 95       	neg	r22
     692:	7f 4f       	sbci	r23, 0xFF	; 255
     694:	8f 4f       	sbci	r24, 0xFF	; 255
     696:	9f 4f       	sbci	r25, 0xFF	; 255
     698:	08 95       	ret

0000069a <__floatunsisf>:
     69a:	e8 94       	clt
     69c:	09 c0       	rjmp	.+18     	; 0x6b0 <__floatsisf+0x12>

0000069e <__floatsisf>:
     69e:	97 fb       	bst	r25, 7
     6a0:	3e f4       	brtc	.+14     	; 0x6b0 <__floatsisf+0x12>
     6a2:	90 95       	com	r25
     6a4:	80 95       	com	r24
     6a6:	70 95       	com	r23
     6a8:	61 95       	neg	r22
     6aa:	7f 4f       	sbci	r23, 0xFF	; 255
     6ac:	8f 4f       	sbci	r24, 0xFF	; 255
     6ae:	9f 4f       	sbci	r25, 0xFF	; 255
     6b0:	99 23       	and	r25, r25
     6b2:	a9 f0       	breq	.+42     	; 0x6de <__floatsisf+0x40>
     6b4:	f9 2f       	mov	r31, r25
     6b6:	96 e9       	ldi	r25, 0x96	; 150
     6b8:	bb 27       	eor	r27, r27
     6ba:	93 95       	inc	r25
     6bc:	f6 95       	lsr	r31
     6be:	87 95       	ror	r24
     6c0:	77 95       	ror	r23
     6c2:	67 95       	ror	r22
     6c4:	b7 95       	ror	r27
     6c6:	f1 11       	cpse	r31, r1
     6c8:	f8 cf       	rjmp	.-16     	; 0x6ba <__floatsisf+0x1c>
     6ca:	fa f4       	brpl	.+62     	; 0x70a <__floatsisf+0x6c>
     6cc:	bb 0f       	add	r27, r27
     6ce:	11 f4       	brne	.+4      	; 0x6d4 <__floatsisf+0x36>
     6d0:	60 ff       	sbrs	r22, 0
     6d2:	1b c0       	rjmp	.+54     	; 0x70a <__floatsisf+0x6c>
     6d4:	6f 5f       	subi	r22, 0xFF	; 255
     6d6:	7f 4f       	sbci	r23, 0xFF	; 255
     6d8:	8f 4f       	sbci	r24, 0xFF	; 255
     6da:	9f 4f       	sbci	r25, 0xFF	; 255
     6dc:	16 c0       	rjmp	.+44     	; 0x70a <__floatsisf+0x6c>
     6de:	88 23       	and	r24, r24
     6e0:	11 f0       	breq	.+4      	; 0x6e6 <__floatsisf+0x48>
     6e2:	96 e9       	ldi	r25, 0x96	; 150
     6e4:	11 c0       	rjmp	.+34     	; 0x708 <__floatsisf+0x6a>
     6e6:	77 23       	and	r23, r23
     6e8:	21 f0       	breq	.+8      	; 0x6f2 <__floatsisf+0x54>
     6ea:	9e e8       	ldi	r25, 0x8E	; 142
     6ec:	87 2f       	mov	r24, r23
     6ee:	76 2f       	mov	r23, r22
     6f0:	05 c0       	rjmp	.+10     	; 0x6fc <__floatsisf+0x5e>
     6f2:	66 23       	and	r22, r22
     6f4:	71 f0       	breq	.+28     	; 0x712 <__floatsisf+0x74>
     6f6:	96 e8       	ldi	r25, 0x86	; 134
     6f8:	86 2f       	mov	r24, r22
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	60 e0       	ldi	r22, 0x00	; 0
     6fe:	2a f0       	brmi	.+10     	; 0x70a <__floatsisf+0x6c>
     700:	9a 95       	dec	r25
     702:	66 0f       	add	r22, r22
     704:	77 1f       	adc	r23, r23
     706:	88 1f       	adc	r24, r24
     708:	da f7       	brpl	.-10     	; 0x700 <__floatsisf+0x62>
     70a:	88 0f       	add	r24, r24
     70c:	96 95       	lsr	r25
     70e:	87 95       	ror	r24
     710:	97 f9       	bld	r25, 7
     712:	08 95       	ret

00000714 <__fp_cmp>:
     714:	99 0f       	add	r25, r25
     716:	00 08       	sbc	r0, r0
     718:	55 0f       	add	r21, r21
     71a:	aa 0b       	sbc	r26, r26
     71c:	e0 e8       	ldi	r30, 0x80	; 128
     71e:	fe ef       	ldi	r31, 0xFE	; 254
     720:	16 16       	cp	r1, r22
     722:	17 06       	cpc	r1, r23
     724:	e8 07       	cpc	r30, r24
     726:	f9 07       	cpc	r31, r25
     728:	c0 f0       	brcs	.+48     	; 0x75a <__fp_cmp+0x46>
     72a:	12 16       	cp	r1, r18
     72c:	13 06       	cpc	r1, r19
     72e:	e4 07       	cpc	r30, r20
     730:	f5 07       	cpc	r31, r21
     732:	98 f0       	brcs	.+38     	; 0x75a <__fp_cmp+0x46>
     734:	62 1b       	sub	r22, r18
     736:	73 0b       	sbc	r23, r19
     738:	84 0b       	sbc	r24, r20
     73a:	95 0b       	sbc	r25, r21
     73c:	39 f4       	brne	.+14     	; 0x74c <__fp_cmp+0x38>
     73e:	0a 26       	eor	r0, r26
     740:	61 f0       	breq	.+24     	; 0x75a <__fp_cmp+0x46>
     742:	23 2b       	or	r18, r19
     744:	24 2b       	or	r18, r20
     746:	25 2b       	or	r18, r21
     748:	21 f4       	brne	.+8      	; 0x752 <__fp_cmp+0x3e>
     74a:	08 95       	ret
     74c:	0a 26       	eor	r0, r26
     74e:	09 f4       	brne	.+2      	; 0x752 <__fp_cmp+0x3e>
     750:	a1 40       	sbci	r26, 0x01	; 1
     752:	a6 95       	lsr	r26
     754:	8f ef       	ldi	r24, 0xFF	; 255
     756:	81 1d       	adc	r24, r1
     758:	81 1d       	adc	r24, r1
     75a:	08 95       	ret

0000075c <__fp_inf>:
     75c:	97 f9       	bld	r25, 7
     75e:	9f 67       	ori	r25, 0x7F	; 127
     760:	80 e8       	ldi	r24, 0x80	; 128
     762:	70 e0       	ldi	r23, 0x00	; 0
     764:	60 e0       	ldi	r22, 0x00	; 0
     766:	08 95       	ret

00000768 <__fp_nan>:
     768:	9f ef       	ldi	r25, 0xFF	; 255
     76a:	80 ec       	ldi	r24, 0xC0	; 192
     76c:	08 95       	ret

0000076e <__fp_pscA>:
     76e:	00 24       	eor	r0, r0
     770:	0a 94       	dec	r0
     772:	16 16       	cp	r1, r22
     774:	17 06       	cpc	r1, r23
     776:	18 06       	cpc	r1, r24
     778:	09 06       	cpc	r0, r25
     77a:	08 95       	ret

0000077c <__fp_pscB>:
     77c:	00 24       	eor	r0, r0
     77e:	0a 94       	dec	r0
     780:	12 16       	cp	r1, r18
     782:	13 06       	cpc	r1, r19
     784:	14 06       	cpc	r1, r20
     786:	05 06       	cpc	r0, r21
     788:	08 95       	ret

0000078a <__fp_round>:
     78a:	09 2e       	mov	r0, r25
     78c:	03 94       	inc	r0
     78e:	00 0c       	add	r0, r0
     790:	11 f4       	brne	.+4      	; 0x796 <__fp_round+0xc>
     792:	88 23       	and	r24, r24
     794:	52 f0       	brmi	.+20     	; 0x7aa <__fp_round+0x20>
     796:	bb 0f       	add	r27, r27
     798:	40 f4       	brcc	.+16     	; 0x7aa <__fp_round+0x20>
     79a:	bf 2b       	or	r27, r31
     79c:	11 f4       	brne	.+4      	; 0x7a2 <__fp_round+0x18>
     79e:	60 ff       	sbrs	r22, 0
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fp_round+0x20>
     7a2:	6f 5f       	subi	r22, 0xFF	; 255
     7a4:	7f 4f       	sbci	r23, 0xFF	; 255
     7a6:	8f 4f       	sbci	r24, 0xFF	; 255
     7a8:	9f 4f       	sbci	r25, 0xFF	; 255
     7aa:	08 95       	ret

000007ac <__fp_split3>:
     7ac:	57 fd       	sbrc	r21, 7
     7ae:	90 58       	subi	r25, 0x80	; 128
     7b0:	44 0f       	add	r20, r20
     7b2:	55 1f       	adc	r21, r21
     7b4:	59 f0       	breq	.+22     	; 0x7cc <__fp_splitA+0x10>
     7b6:	5f 3f       	cpi	r21, 0xFF	; 255
     7b8:	71 f0       	breq	.+28     	; 0x7d6 <__fp_splitA+0x1a>
     7ba:	47 95       	ror	r20

000007bc <__fp_splitA>:
     7bc:	88 0f       	add	r24, r24
     7be:	97 fb       	bst	r25, 7
     7c0:	99 1f       	adc	r25, r25
     7c2:	61 f0       	breq	.+24     	; 0x7dc <__fp_splitA+0x20>
     7c4:	9f 3f       	cpi	r25, 0xFF	; 255
     7c6:	79 f0       	breq	.+30     	; 0x7e6 <__fp_splitA+0x2a>
     7c8:	87 95       	ror	r24
     7ca:	08 95       	ret
     7cc:	12 16       	cp	r1, r18
     7ce:	13 06       	cpc	r1, r19
     7d0:	14 06       	cpc	r1, r20
     7d2:	55 1f       	adc	r21, r21
     7d4:	f2 cf       	rjmp	.-28     	; 0x7ba <__fp_split3+0xe>
     7d6:	46 95       	lsr	r20
     7d8:	f1 df       	rcall	.-30     	; 0x7bc <__fp_splitA>
     7da:	08 c0       	rjmp	.+16     	; 0x7ec <__fp_splitA+0x30>
     7dc:	16 16       	cp	r1, r22
     7de:	17 06       	cpc	r1, r23
     7e0:	18 06       	cpc	r1, r24
     7e2:	99 1f       	adc	r25, r25
     7e4:	f1 cf       	rjmp	.-30     	; 0x7c8 <__fp_splitA+0xc>
     7e6:	86 95       	lsr	r24
     7e8:	71 05       	cpc	r23, r1
     7ea:	61 05       	cpc	r22, r1
     7ec:	08 94       	sec
     7ee:	08 95       	ret

000007f0 <__fp_zero>:
     7f0:	e8 94       	clt

000007f2 <__fp_szero>:
     7f2:	bb 27       	eor	r27, r27
     7f4:	66 27       	eor	r22, r22
     7f6:	77 27       	eor	r23, r23
     7f8:	cb 01       	movw	r24, r22
     7fa:	97 f9       	bld	r25, 7
     7fc:	08 95       	ret

000007fe <__gesf2>:
     7fe:	8a df       	rcall	.-236    	; 0x714 <__fp_cmp>
     800:	08 f4       	brcc	.+2      	; 0x804 <__gesf2+0x6>
     802:	8f ef       	ldi	r24, 0xFF	; 255
     804:	08 95       	ret

00000806 <__mulsf3>:
     806:	0b d0       	rcall	.+22     	; 0x81e <__mulsf3x>
     808:	c0 cf       	rjmp	.-128    	; 0x78a <__fp_round>
     80a:	b1 df       	rcall	.-158    	; 0x76e <__fp_pscA>
     80c:	28 f0       	brcs	.+10     	; 0x818 <__mulsf3+0x12>
     80e:	b6 df       	rcall	.-148    	; 0x77c <__fp_pscB>
     810:	18 f0       	brcs	.+6      	; 0x818 <__mulsf3+0x12>
     812:	95 23       	and	r25, r21
     814:	09 f0       	breq	.+2      	; 0x818 <__mulsf3+0x12>
     816:	a2 cf       	rjmp	.-188    	; 0x75c <__fp_inf>
     818:	a7 cf       	rjmp	.-178    	; 0x768 <__fp_nan>
     81a:	11 24       	eor	r1, r1
     81c:	ea cf       	rjmp	.-44     	; 0x7f2 <__fp_szero>

0000081e <__mulsf3x>:
     81e:	c6 df       	rcall	.-116    	; 0x7ac <__fp_split3>
     820:	a0 f3       	brcs	.-24     	; 0x80a <__mulsf3+0x4>

00000822 <__mulsf3_pse>:
     822:	95 9f       	mul	r25, r21
     824:	d1 f3       	breq	.-12     	; 0x81a <__mulsf3+0x14>
     826:	95 0f       	add	r25, r21
     828:	50 e0       	ldi	r21, 0x00	; 0
     82a:	55 1f       	adc	r21, r21
     82c:	62 9f       	mul	r22, r18
     82e:	f0 01       	movw	r30, r0
     830:	72 9f       	mul	r23, r18
     832:	bb 27       	eor	r27, r27
     834:	f0 0d       	add	r31, r0
     836:	b1 1d       	adc	r27, r1
     838:	63 9f       	mul	r22, r19
     83a:	aa 27       	eor	r26, r26
     83c:	f0 0d       	add	r31, r0
     83e:	b1 1d       	adc	r27, r1
     840:	aa 1f       	adc	r26, r26
     842:	64 9f       	mul	r22, r20
     844:	66 27       	eor	r22, r22
     846:	b0 0d       	add	r27, r0
     848:	a1 1d       	adc	r26, r1
     84a:	66 1f       	adc	r22, r22
     84c:	82 9f       	mul	r24, r18
     84e:	22 27       	eor	r18, r18
     850:	b0 0d       	add	r27, r0
     852:	a1 1d       	adc	r26, r1
     854:	62 1f       	adc	r22, r18
     856:	73 9f       	mul	r23, r19
     858:	b0 0d       	add	r27, r0
     85a:	a1 1d       	adc	r26, r1
     85c:	62 1f       	adc	r22, r18
     85e:	83 9f       	mul	r24, r19
     860:	a0 0d       	add	r26, r0
     862:	61 1d       	adc	r22, r1
     864:	22 1f       	adc	r18, r18
     866:	74 9f       	mul	r23, r20
     868:	33 27       	eor	r19, r19
     86a:	a0 0d       	add	r26, r0
     86c:	61 1d       	adc	r22, r1
     86e:	23 1f       	adc	r18, r19
     870:	84 9f       	mul	r24, r20
     872:	60 0d       	add	r22, r0
     874:	21 1d       	adc	r18, r1
     876:	82 2f       	mov	r24, r18
     878:	76 2f       	mov	r23, r22
     87a:	6a 2f       	mov	r22, r26
     87c:	11 24       	eor	r1, r1
     87e:	9f 57       	subi	r25, 0x7F	; 127
     880:	50 40       	sbci	r21, 0x00	; 0
     882:	8a f0       	brmi	.+34     	; 0x8a6 <__mulsf3_pse+0x84>
     884:	e1 f0       	breq	.+56     	; 0x8be <__mulsf3_pse+0x9c>
     886:	88 23       	and	r24, r24
     888:	4a f0       	brmi	.+18     	; 0x89c <__mulsf3_pse+0x7a>
     88a:	ee 0f       	add	r30, r30
     88c:	ff 1f       	adc	r31, r31
     88e:	bb 1f       	adc	r27, r27
     890:	66 1f       	adc	r22, r22
     892:	77 1f       	adc	r23, r23
     894:	88 1f       	adc	r24, r24
     896:	91 50       	subi	r25, 0x01	; 1
     898:	50 40       	sbci	r21, 0x00	; 0
     89a:	a9 f7       	brne	.-22     	; 0x886 <__mulsf3_pse+0x64>
     89c:	9e 3f       	cpi	r25, 0xFE	; 254
     89e:	51 05       	cpc	r21, r1
     8a0:	70 f0       	brcs	.+28     	; 0x8be <__mulsf3_pse+0x9c>
     8a2:	5c cf       	rjmp	.-328    	; 0x75c <__fp_inf>
     8a4:	a6 cf       	rjmp	.-180    	; 0x7f2 <__fp_szero>
     8a6:	5f 3f       	cpi	r21, 0xFF	; 255
     8a8:	ec f3       	brlt	.-6      	; 0x8a4 <__mulsf3_pse+0x82>
     8aa:	98 3e       	cpi	r25, 0xE8	; 232
     8ac:	dc f3       	brlt	.-10     	; 0x8a4 <__mulsf3_pse+0x82>
     8ae:	86 95       	lsr	r24
     8b0:	77 95       	ror	r23
     8b2:	67 95       	ror	r22
     8b4:	b7 95       	ror	r27
     8b6:	f7 95       	ror	r31
     8b8:	e7 95       	ror	r30
     8ba:	9f 5f       	subi	r25, 0xFF	; 255
     8bc:	c1 f7       	brne	.-16     	; 0x8ae <__mulsf3_pse+0x8c>
     8be:	fe 2b       	or	r31, r30
     8c0:	88 0f       	add	r24, r24
     8c2:	91 1d       	adc	r25, r1
     8c4:	96 95       	lsr	r25
     8c6:	87 95       	ror	r24
     8c8:	97 f9       	bld	r25, 7
     8ca:	08 95       	ret

000008cc <malloc>:
     8cc:	0f 93       	push	r16
     8ce:	1f 93       	push	r17
     8d0:	cf 93       	push	r28
     8d2:	df 93       	push	r29
     8d4:	82 30       	cpi	r24, 0x02	; 2
     8d6:	91 05       	cpc	r25, r1
     8d8:	10 f4       	brcc	.+4      	; 0x8de <malloc+0x12>
     8da:	82 e0       	ldi	r24, 0x02	; 2
     8dc:	90 e0       	ldi	r25, 0x00	; 0
     8de:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <__flp>
     8e2:	f0 91 19 01 	lds	r31, 0x0119	; 0x800119 <__flp+0x1>
     8e6:	20 e0       	ldi	r18, 0x00	; 0
     8e8:	30 e0       	ldi	r19, 0x00	; 0
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	b0 e0       	ldi	r27, 0x00	; 0
     8ee:	30 97       	sbiw	r30, 0x00	; 0
     8f0:	19 f1       	breq	.+70     	; 0x938 <malloc+0x6c>
     8f2:	40 81       	ld	r20, Z
     8f4:	51 81       	ldd	r21, Z+1	; 0x01
     8f6:	02 81       	ldd	r16, Z+2	; 0x02
     8f8:	13 81       	ldd	r17, Z+3	; 0x03
     8fa:	48 17       	cp	r20, r24
     8fc:	59 07       	cpc	r21, r25
     8fe:	c8 f0       	brcs	.+50     	; 0x932 <malloc+0x66>
     900:	84 17       	cp	r24, r20
     902:	95 07       	cpc	r25, r21
     904:	69 f4       	brne	.+26     	; 0x920 <malloc+0x54>
     906:	10 97       	sbiw	r26, 0x00	; 0
     908:	31 f0       	breq	.+12     	; 0x916 <malloc+0x4a>
     90a:	12 96       	adiw	r26, 0x02	; 2
     90c:	0c 93       	st	X, r16
     90e:	12 97       	sbiw	r26, 0x02	; 2
     910:	13 96       	adiw	r26, 0x03	; 3
     912:	1c 93       	st	X, r17
     914:	27 c0       	rjmp	.+78     	; 0x964 <malloc+0x98>
     916:	00 93 18 01 	sts	0x0118, r16	; 0x800118 <__flp>
     91a:	10 93 19 01 	sts	0x0119, r17	; 0x800119 <__flp+0x1>
     91e:	22 c0       	rjmp	.+68     	; 0x964 <malloc+0x98>
     920:	21 15       	cp	r18, r1
     922:	31 05       	cpc	r19, r1
     924:	19 f0       	breq	.+6      	; 0x92c <malloc+0x60>
     926:	42 17       	cp	r20, r18
     928:	53 07       	cpc	r21, r19
     92a:	18 f4       	brcc	.+6      	; 0x932 <malloc+0x66>
     92c:	9a 01       	movw	r18, r20
     92e:	bd 01       	movw	r22, r26
     930:	ef 01       	movw	r28, r30
     932:	df 01       	movw	r26, r30
     934:	f8 01       	movw	r30, r16
     936:	db cf       	rjmp	.-74     	; 0x8ee <malloc+0x22>
     938:	21 15       	cp	r18, r1
     93a:	31 05       	cpc	r19, r1
     93c:	f9 f0       	breq	.+62     	; 0x97c <malloc+0xb0>
     93e:	28 1b       	sub	r18, r24
     940:	39 0b       	sbc	r19, r25
     942:	24 30       	cpi	r18, 0x04	; 4
     944:	31 05       	cpc	r19, r1
     946:	80 f4       	brcc	.+32     	; 0x968 <malloc+0x9c>
     948:	8a 81       	ldd	r24, Y+2	; 0x02
     94a:	9b 81       	ldd	r25, Y+3	; 0x03
     94c:	61 15       	cp	r22, r1
     94e:	71 05       	cpc	r23, r1
     950:	21 f0       	breq	.+8      	; 0x95a <malloc+0x8e>
     952:	fb 01       	movw	r30, r22
     954:	93 83       	std	Z+3, r25	; 0x03
     956:	82 83       	std	Z+2, r24	; 0x02
     958:	04 c0       	rjmp	.+8      	; 0x962 <malloc+0x96>
     95a:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <__flp+0x1>
     95e:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__flp>
     962:	fe 01       	movw	r30, r28
     964:	32 96       	adiw	r30, 0x02	; 2
     966:	44 c0       	rjmp	.+136    	; 0x9f0 <malloc+0x124>
     968:	fe 01       	movw	r30, r28
     96a:	e2 0f       	add	r30, r18
     96c:	f3 1f       	adc	r31, r19
     96e:	81 93       	st	Z+, r24
     970:	91 93       	st	Z+, r25
     972:	22 50       	subi	r18, 0x02	; 2
     974:	31 09       	sbc	r19, r1
     976:	39 83       	std	Y+1, r19	; 0x01
     978:	28 83       	st	Y, r18
     97a:	3a c0       	rjmp	.+116    	; 0x9f0 <malloc+0x124>
     97c:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <__brkval>
     980:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <__brkval+0x1>
     984:	23 2b       	or	r18, r19
     986:	41 f4       	brne	.+16     	; 0x998 <malloc+0xcc>
     988:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     98c:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     990:	30 93 17 01 	sts	0x0117, r19	; 0x800117 <__brkval+0x1>
     994:	20 93 16 01 	sts	0x0116, r18	; 0x800116 <__brkval>
     998:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     99c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     9a0:	21 15       	cp	r18, r1
     9a2:	31 05       	cpc	r19, r1
     9a4:	41 f4       	brne	.+16     	; 0x9b6 <malloc+0xea>
     9a6:	2d b7       	in	r18, 0x3d	; 61
     9a8:	3e b7       	in	r19, 0x3e	; 62
     9aa:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     9ae:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     9b2:	24 1b       	sub	r18, r20
     9b4:	35 0b       	sbc	r19, r21
     9b6:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <__brkval>
     9ba:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <__brkval+0x1>
     9be:	e2 17       	cp	r30, r18
     9c0:	f3 07       	cpc	r31, r19
     9c2:	a0 f4       	brcc	.+40     	; 0x9ec <malloc+0x120>
     9c4:	2e 1b       	sub	r18, r30
     9c6:	3f 0b       	sbc	r19, r31
     9c8:	28 17       	cp	r18, r24
     9ca:	39 07       	cpc	r19, r25
     9cc:	78 f0       	brcs	.+30     	; 0x9ec <malloc+0x120>
     9ce:	ac 01       	movw	r20, r24
     9d0:	4e 5f       	subi	r20, 0xFE	; 254
     9d2:	5f 4f       	sbci	r21, 0xFF	; 255
     9d4:	24 17       	cp	r18, r20
     9d6:	35 07       	cpc	r19, r21
     9d8:	48 f0       	brcs	.+18     	; 0x9ec <malloc+0x120>
     9da:	4e 0f       	add	r20, r30
     9dc:	5f 1f       	adc	r21, r31
     9de:	50 93 17 01 	sts	0x0117, r21	; 0x800117 <__brkval+0x1>
     9e2:	40 93 16 01 	sts	0x0116, r20	; 0x800116 <__brkval>
     9e6:	81 93       	st	Z+, r24
     9e8:	91 93       	st	Z+, r25
     9ea:	02 c0       	rjmp	.+4      	; 0x9f0 <malloc+0x124>
     9ec:	e0 e0       	ldi	r30, 0x00	; 0
     9ee:	f0 e0       	ldi	r31, 0x00	; 0
     9f0:	cf 01       	movw	r24, r30
     9f2:	df 91       	pop	r29
     9f4:	cf 91       	pop	r28
     9f6:	1f 91       	pop	r17
     9f8:	0f 91       	pop	r16
     9fa:	08 95       	ret

000009fc <free>:
     9fc:	cf 93       	push	r28
     9fe:	df 93       	push	r29
     a00:	00 97       	sbiw	r24, 0x00	; 0
     a02:	09 f4       	brne	.+2      	; 0xa06 <free+0xa>
     a04:	81 c0       	rjmp	.+258    	; 0xb08 <free+0x10c>
     a06:	fc 01       	movw	r30, r24
     a08:	32 97       	sbiw	r30, 0x02	; 2
     a0a:	13 82       	std	Z+3, r1	; 0x03
     a0c:	12 82       	std	Z+2, r1	; 0x02
     a0e:	a0 91 18 01 	lds	r26, 0x0118	; 0x800118 <__flp>
     a12:	b0 91 19 01 	lds	r27, 0x0119	; 0x800119 <__flp+0x1>
     a16:	10 97       	sbiw	r26, 0x00	; 0
     a18:	81 f4       	brne	.+32     	; 0xa3a <free+0x3e>
     a1a:	20 81       	ld	r18, Z
     a1c:	31 81       	ldd	r19, Z+1	; 0x01
     a1e:	82 0f       	add	r24, r18
     a20:	93 1f       	adc	r25, r19
     a22:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <__brkval>
     a26:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <__brkval+0x1>
     a2a:	28 17       	cp	r18, r24
     a2c:	39 07       	cpc	r19, r25
     a2e:	51 f5       	brne	.+84     	; 0xa84 <free+0x88>
     a30:	f0 93 17 01 	sts	0x0117, r31	; 0x800117 <__brkval+0x1>
     a34:	e0 93 16 01 	sts	0x0116, r30	; 0x800116 <__brkval>
     a38:	67 c0       	rjmp	.+206    	; 0xb08 <free+0x10c>
     a3a:	ed 01       	movw	r28, r26
     a3c:	20 e0       	ldi	r18, 0x00	; 0
     a3e:	30 e0       	ldi	r19, 0x00	; 0
     a40:	ce 17       	cp	r28, r30
     a42:	df 07       	cpc	r29, r31
     a44:	40 f4       	brcc	.+16     	; 0xa56 <free+0x5a>
     a46:	4a 81       	ldd	r20, Y+2	; 0x02
     a48:	5b 81       	ldd	r21, Y+3	; 0x03
     a4a:	9e 01       	movw	r18, r28
     a4c:	41 15       	cp	r20, r1
     a4e:	51 05       	cpc	r21, r1
     a50:	f1 f0       	breq	.+60     	; 0xa8e <free+0x92>
     a52:	ea 01       	movw	r28, r20
     a54:	f5 cf       	rjmp	.-22     	; 0xa40 <free+0x44>
     a56:	d3 83       	std	Z+3, r29	; 0x03
     a58:	c2 83       	std	Z+2, r28	; 0x02
     a5a:	40 81       	ld	r20, Z
     a5c:	51 81       	ldd	r21, Z+1	; 0x01
     a5e:	84 0f       	add	r24, r20
     a60:	95 1f       	adc	r25, r21
     a62:	c8 17       	cp	r28, r24
     a64:	d9 07       	cpc	r29, r25
     a66:	59 f4       	brne	.+22     	; 0xa7e <free+0x82>
     a68:	88 81       	ld	r24, Y
     a6a:	99 81       	ldd	r25, Y+1	; 0x01
     a6c:	84 0f       	add	r24, r20
     a6e:	95 1f       	adc	r25, r21
     a70:	02 96       	adiw	r24, 0x02	; 2
     a72:	91 83       	std	Z+1, r25	; 0x01
     a74:	80 83       	st	Z, r24
     a76:	8a 81       	ldd	r24, Y+2	; 0x02
     a78:	9b 81       	ldd	r25, Y+3	; 0x03
     a7a:	93 83       	std	Z+3, r25	; 0x03
     a7c:	82 83       	std	Z+2, r24	; 0x02
     a7e:	21 15       	cp	r18, r1
     a80:	31 05       	cpc	r19, r1
     a82:	29 f4       	brne	.+10     	; 0xa8e <free+0x92>
     a84:	f0 93 19 01 	sts	0x0119, r31	; 0x800119 <__flp+0x1>
     a88:	e0 93 18 01 	sts	0x0118, r30	; 0x800118 <__flp>
     a8c:	3d c0       	rjmp	.+122    	; 0xb08 <free+0x10c>
     a8e:	e9 01       	movw	r28, r18
     a90:	fb 83       	std	Y+3, r31	; 0x03
     a92:	ea 83       	std	Y+2, r30	; 0x02
     a94:	49 91       	ld	r20, Y+
     a96:	59 91       	ld	r21, Y+
     a98:	c4 0f       	add	r28, r20
     a9a:	d5 1f       	adc	r29, r21
     a9c:	ec 17       	cp	r30, r28
     a9e:	fd 07       	cpc	r31, r29
     aa0:	61 f4       	brne	.+24     	; 0xaba <free+0xbe>
     aa2:	80 81       	ld	r24, Z
     aa4:	91 81       	ldd	r25, Z+1	; 0x01
     aa6:	84 0f       	add	r24, r20
     aa8:	95 1f       	adc	r25, r21
     aaa:	02 96       	adiw	r24, 0x02	; 2
     aac:	e9 01       	movw	r28, r18
     aae:	99 83       	std	Y+1, r25	; 0x01
     ab0:	88 83       	st	Y, r24
     ab2:	82 81       	ldd	r24, Z+2	; 0x02
     ab4:	93 81       	ldd	r25, Z+3	; 0x03
     ab6:	9b 83       	std	Y+3, r25	; 0x03
     ab8:	8a 83       	std	Y+2, r24	; 0x02
     aba:	e0 e0       	ldi	r30, 0x00	; 0
     abc:	f0 e0       	ldi	r31, 0x00	; 0
     abe:	12 96       	adiw	r26, 0x02	; 2
     ac0:	8d 91       	ld	r24, X+
     ac2:	9c 91       	ld	r25, X
     ac4:	13 97       	sbiw	r26, 0x03	; 3
     ac6:	00 97       	sbiw	r24, 0x00	; 0
     ac8:	19 f0       	breq	.+6      	; 0xad0 <free+0xd4>
     aca:	fd 01       	movw	r30, r26
     acc:	dc 01       	movw	r26, r24
     ace:	f7 cf       	rjmp	.-18     	; 0xabe <free+0xc2>
     ad0:	8d 91       	ld	r24, X+
     ad2:	9c 91       	ld	r25, X
     ad4:	11 97       	sbiw	r26, 0x01	; 1
     ad6:	9d 01       	movw	r18, r26
     ad8:	2e 5f       	subi	r18, 0xFE	; 254
     ada:	3f 4f       	sbci	r19, 0xFF	; 255
     adc:	82 0f       	add	r24, r18
     ade:	93 1f       	adc	r25, r19
     ae0:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <__brkval>
     ae4:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <__brkval+0x1>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	69 f4       	brne	.+26     	; 0xb08 <free+0x10c>
     aee:	30 97       	sbiw	r30, 0x00	; 0
     af0:	29 f4       	brne	.+10     	; 0xafc <free+0x100>
     af2:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <__flp+0x1>
     af6:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <__flp>
     afa:	02 c0       	rjmp	.+4      	; 0xb00 <free+0x104>
     afc:	13 82       	std	Z+3, r1	; 0x03
     afe:	12 82       	std	Z+2, r1	; 0x02
     b00:	b0 93 17 01 	sts	0x0117, r27	; 0x800117 <__brkval+0x1>
     b04:	a0 93 16 01 	sts	0x0116, r26	; 0x800116 <__brkval>
     b08:	df 91       	pop	r29
     b0a:	cf 91       	pop	r28
     b0c:	08 95       	ret

00000b0e <sscanf>:
     b0e:	cf 93       	push	r28
     b10:	df 93       	push	r29
     b12:	cd b7       	in	r28, 0x3d	; 61
     b14:	de b7       	in	r29, 0x3e	; 62
     b16:	2e 97       	sbiw	r28, 0x0e	; 14
     b18:	0f b6       	in	r0, 0x3f	; 63
     b1a:	f8 94       	cli
     b1c:	de bf       	out	0x3e, r29	; 62
     b1e:	0f be       	out	0x3f, r0	; 63
     b20:	cd bf       	out	0x3d, r28	; 61
     b22:	85 e0       	ldi	r24, 0x05	; 5
     b24:	8c 83       	std	Y+4, r24	; 0x04
     b26:	8b 89       	ldd	r24, Y+19	; 0x13
     b28:	9c 89       	ldd	r25, Y+20	; 0x14
     b2a:	9a 83       	std	Y+2, r25	; 0x02
     b2c:	89 83       	std	Y+1, r24	; 0x01
     b2e:	ae 01       	movw	r20, r28
     b30:	49 5e       	subi	r20, 0xE9	; 233
     b32:	5f 4f       	sbci	r21, 0xFF	; 255
     b34:	6d 89       	ldd	r22, Y+21	; 0x15
     b36:	7e 89       	ldd	r23, Y+22	; 0x16
     b38:	ce 01       	movw	r24, r28
     b3a:	01 96       	adiw	r24, 0x01	; 1
     b3c:	bb d1       	rcall	.+886    	; 0xeb4 <vfscanf>
     b3e:	2e 96       	adiw	r28, 0x0e	; 14
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	df 91       	pop	r29
     b4c:	cf 91       	pop	r28
     b4e:	08 95       	ret

00000b50 <putval>:
     b50:	20 fd       	sbrc	r18, 0
     b52:	09 c0       	rjmp	.+18     	; 0xb66 <putval+0x16>
     b54:	fc 01       	movw	r30, r24
     b56:	23 fd       	sbrc	r18, 3
     b58:	05 c0       	rjmp	.+10     	; 0xb64 <putval+0x14>
     b5a:	22 ff       	sbrs	r18, 2
     b5c:	02 c0       	rjmp	.+4      	; 0xb62 <putval+0x12>
     b5e:	73 83       	std	Z+3, r23	; 0x03
     b60:	62 83       	std	Z+2, r22	; 0x02
     b62:	51 83       	std	Z+1, r21	; 0x01
     b64:	40 83       	st	Z, r20
     b66:	08 95       	ret

00000b68 <mulacc>:
     b68:	44 fd       	sbrc	r20, 4
     b6a:	17 c0       	rjmp	.+46     	; 0xb9a <mulacc+0x32>
     b6c:	46 fd       	sbrc	r20, 6
     b6e:	17 c0       	rjmp	.+46     	; 0xb9e <mulacc+0x36>
     b70:	ab 01       	movw	r20, r22
     b72:	bc 01       	movw	r22, r24
     b74:	da 01       	movw	r26, r20
     b76:	fb 01       	movw	r30, r22
     b78:	aa 0f       	add	r26, r26
     b7a:	bb 1f       	adc	r27, r27
     b7c:	ee 1f       	adc	r30, r30
     b7e:	ff 1f       	adc	r31, r31
     b80:	10 94       	com	r1
     b82:	d1 f7       	brne	.-12     	; 0xb78 <mulacc+0x10>
     b84:	4a 0f       	add	r20, r26
     b86:	5b 1f       	adc	r21, r27
     b88:	6e 1f       	adc	r22, r30
     b8a:	7f 1f       	adc	r23, r31
     b8c:	cb 01       	movw	r24, r22
     b8e:	ba 01       	movw	r22, r20
     b90:	66 0f       	add	r22, r22
     b92:	77 1f       	adc	r23, r23
     b94:	88 1f       	adc	r24, r24
     b96:	99 1f       	adc	r25, r25
     b98:	09 c0       	rjmp	.+18     	; 0xbac <mulacc+0x44>
     b9a:	33 e0       	ldi	r19, 0x03	; 3
     b9c:	01 c0       	rjmp	.+2      	; 0xba0 <mulacc+0x38>
     b9e:	34 e0       	ldi	r19, 0x04	; 4
     ba0:	66 0f       	add	r22, r22
     ba2:	77 1f       	adc	r23, r23
     ba4:	88 1f       	adc	r24, r24
     ba6:	99 1f       	adc	r25, r25
     ba8:	31 50       	subi	r19, 0x01	; 1
     baa:	d1 f7       	brne	.-12     	; 0xba0 <mulacc+0x38>
     bac:	62 0f       	add	r22, r18
     bae:	71 1d       	adc	r23, r1
     bb0:	81 1d       	adc	r24, r1
     bb2:	91 1d       	adc	r25, r1
     bb4:	08 95       	ret

00000bb6 <skip_spaces>:
     bb6:	0f 93       	push	r16
     bb8:	1f 93       	push	r17
     bba:	cf 93       	push	r28
     bbc:	df 93       	push	r29
     bbe:	8c 01       	movw	r16, r24
     bc0:	c8 01       	movw	r24, r16
     bc2:	a2 d2       	rcall	.+1348   	; 0x1108 <fgetc>
     bc4:	ec 01       	movw	r28, r24
     bc6:	97 fd       	sbrc	r25, 7
     bc8:	06 c0       	rjmp	.+12     	; 0xbd6 <skip_spaces+0x20>
     bca:	8b d2       	rcall	.+1302   	; 0x10e2 <isspace>
     bcc:	89 2b       	or	r24, r25
     bce:	c1 f7       	brne	.-16     	; 0xbc0 <skip_spaces+0xa>
     bd0:	b8 01       	movw	r22, r16
     bd2:	ce 01       	movw	r24, r28
     bd4:	d7 d2       	rcall	.+1454   	; 0x1184 <ungetc>
     bd6:	ce 01       	movw	r24, r28
     bd8:	df 91       	pop	r29
     bda:	cf 91       	pop	r28
     bdc:	1f 91       	pop	r17
     bde:	0f 91       	pop	r16
     be0:	08 95       	ret

00000be2 <conv_int>:
     be2:	8f 92       	push	r8
     be4:	9f 92       	push	r9
     be6:	af 92       	push	r10
     be8:	bf 92       	push	r11
     bea:	ef 92       	push	r14
     bec:	ff 92       	push	r15
     bee:	0f 93       	push	r16
     bf0:	1f 93       	push	r17
     bf2:	cf 93       	push	r28
     bf4:	df 93       	push	r29
     bf6:	8c 01       	movw	r16, r24
     bf8:	d6 2f       	mov	r29, r22
     bfa:	7a 01       	movw	r14, r20
     bfc:	b2 2e       	mov	r11, r18
     bfe:	84 d2       	rcall	.+1288   	; 0x1108 <fgetc>
     c00:	9c 01       	movw	r18, r24
     c02:	33 27       	eor	r19, r19
     c04:	2b 32       	cpi	r18, 0x2B	; 43
     c06:	31 05       	cpc	r19, r1
     c08:	31 f0       	breq	.+12     	; 0xc16 <conv_int+0x34>
     c0a:	2d 32       	cpi	r18, 0x2D	; 45
     c0c:	31 05       	cpc	r19, r1
     c0e:	59 f4       	brne	.+22     	; 0xc26 <conv_int+0x44>
     c10:	8b 2d       	mov	r24, r11
     c12:	80 68       	ori	r24, 0x80	; 128
     c14:	b8 2e       	mov	r11, r24
     c16:	d1 50       	subi	r29, 0x01	; 1
     c18:	11 f4       	brne	.+4      	; 0xc1e <conv_int+0x3c>
     c1a:	80 e0       	ldi	r24, 0x00	; 0
     c1c:	61 c0       	rjmp	.+194    	; 0xce0 <conv_int+0xfe>
     c1e:	c8 01       	movw	r24, r16
     c20:	73 d2       	rcall	.+1254   	; 0x1108 <fgetc>
     c22:	97 fd       	sbrc	r25, 7
     c24:	fa cf       	rjmp	.-12     	; 0xc1a <conv_int+0x38>
     c26:	cb 2d       	mov	r28, r11
     c28:	cd 7f       	andi	r28, 0xFD	; 253
     c2a:	2b 2d       	mov	r18, r11
     c2c:	20 73       	andi	r18, 0x30	; 48
     c2e:	f9 f4       	brne	.+62     	; 0xc6e <conv_int+0x8c>
     c30:	80 33       	cpi	r24, 0x30	; 48
     c32:	e9 f4       	brne	.+58     	; 0xc6e <conv_int+0x8c>
     c34:	aa 24       	eor	r10, r10
     c36:	aa 94       	dec	r10
     c38:	ad 0e       	add	r10, r29
     c3a:	09 f4       	brne	.+2      	; 0xc3e <conv_int+0x5c>
     c3c:	3e c0       	rjmp	.+124    	; 0xcba <conv_int+0xd8>
     c3e:	c8 01       	movw	r24, r16
     c40:	63 d2       	rcall	.+1222   	; 0x1108 <fgetc>
     c42:	97 fd       	sbrc	r25, 7
     c44:	3a c0       	rjmp	.+116    	; 0xcba <conv_int+0xd8>
     c46:	9c 01       	movw	r18, r24
     c48:	2f 7d       	andi	r18, 0xDF	; 223
     c4a:	33 27       	eor	r19, r19
     c4c:	28 35       	cpi	r18, 0x58	; 88
     c4e:	31 05       	cpc	r19, r1
     c50:	41 f4       	brne	.+16     	; 0xc62 <conv_int+0x80>
     c52:	c2 64       	ori	r28, 0x42	; 66
     c54:	d2 50       	subi	r29, 0x02	; 2
     c56:	89 f1       	breq	.+98     	; 0xcba <conv_int+0xd8>
     c58:	c8 01       	movw	r24, r16
     c5a:	56 d2       	rcall	.+1196   	; 0x1108 <fgetc>
     c5c:	97 ff       	sbrs	r25, 7
     c5e:	07 c0       	rjmp	.+14     	; 0xc6e <conv_int+0x8c>
     c60:	2c c0       	rjmp	.+88     	; 0xcba <conv_int+0xd8>
     c62:	b6 fe       	sbrs	r11, 6
     c64:	02 c0       	rjmp	.+4      	; 0xc6a <conv_int+0x88>
     c66:	c2 60       	ori	r28, 0x02	; 2
     c68:	01 c0       	rjmp	.+2      	; 0xc6c <conv_int+0x8a>
     c6a:	c2 61       	ori	r28, 0x12	; 18
     c6c:	da 2d       	mov	r29, r10
     c6e:	81 2c       	mov	r8, r1
     c70:	91 2c       	mov	r9, r1
     c72:	54 01       	movw	r10, r8
     c74:	20 ed       	ldi	r18, 0xD0	; 208
     c76:	28 0f       	add	r18, r24
     c78:	28 30       	cpi	r18, 0x08	; 8
     c7a:	78 f0       	brcs	.+30     	; 0xc9a <conv_int+0xb8>
     c7c:	c4 ff       	sbrs	r28, 4
     c7e:	03 c0       	rjmp	.+6      	; 0xc86 <conv_int+0xa4>
     c80:	b8 01       	movw	r22, r16
     c82:	80 d2       	rcall	.+1280   	; 0x1184 <ungetc>
     c84:	17 c0       	rjmp	.+46     	; 0xcb4 <conv_int+0xd2>
     c86:	2a 30       	cpi	r18, 0x0A	; 10
     c88:	40 f0       	brcs	.+16     	; 0xc9a <conv_int+0xb8>
     c8a:	c6 ff       	sbrs	r28, 6
     c8c:	f9 cf       	rjmp	.-14     	; 0xc80 <conv_int+0x9e>
     c8e:	2f 7d       	andi	r18, 0xDF	; 223
     c90:	3f ee       	ldi	r19, 0xEF	; 239
     c92:	32 0f       	add	r19, r18
     c94:	36 30       	cpi	r19, 0x06	; 6
     c96:	a0 f7       	brcc	.-24     	; 0xc80 <conv_int+0x9e>
     c98:	27 50       	subi	r18, 0x07	; 7
     c9a:	4c 2f       	mov	r20, r28
     c9c:	c5 01       	movw	r24, r10
     c9e:	b4 01       	movw	r22, r8
     ca0:	63 df       	rcall	.-314    	; 0xb68 <mulacc>
     ca2:	4b 01       	movw	r8, r22
     ca4:	5c 01       	movw	r10, r24
     ca6:	c2 60       	ori	r28, 0x02	; 2
     ca8:	d1 50       	subi	r29, 0x01	; 1
     caa:	51 f0       	breq	.+20     	; 0xcc0 <conv_int+0xde>
     cac:	c8 01       	movw	r24, r16
     cae:	2c d2       	rcall	.+1112   	; 0x1108 <fgetc>
     cb0:	97 ff       	sbrs	r25, 7
     cb2:	e0 cf       	rjmp	.-64     	; 0xc74 <conv_int+0x92>
     cb4:	c1 fd       	sbrc	r28, 1
     cb6:	04 c0       	rjmp	.+8      	; 0xcc0 <conv_int+0xde>
     cb8:	b0 cf       	rjmp	.-160    	; 0xc1a <conv_int+0x38>
     cba:	81 2c       	mov	r8, r1
     cbc:	91 2c       	mov	r9, r1
     cbe:	54 01       	movw	r10, r8
     cc0:	c7 ff       	sbrs	r28, 7
     cc2:	08 c0       	rjmp	.+16     	; 0xcd4 <conv_int+0xf2>
     cc4:	b0 94       	com	r11
     cc6:	a0 94       	com	r10
     cc8:	90 94       	com	r9
     cca:	80 94       	com	r8
     ccc:	81 1c       	adc	r8, r1
     cce:	91 1c       	adc	r9, r1
     cd0:	a1 1c       	adc	r10, r1
     cd2:	b1 1c       	adc	r11, r1
     cd4:	2c 2f       	mov	r18, r28
     cd6:	b5 01       	movw	r22, r10
     cd8:	a4 01       	movw	r20, r8
     cda:	c7 01       	movw	r24, r14
     cdc:	39 df       	rcall	.-398    	; 0xb50 <putval>
     cde:	81 e0       	ldi	r24, 0x01	; 1
     ce0:	df 91       	pop	r29
     ce2:	cf 91       	pop	r28
     ce4:	1f 91       	pop	r17
     ce6:	0f 91       	pop	r16
     ce8:	ff 90       	pop	r15
     cea:	ef 90       	pop	r14
     cec:	bf 90       	pop	r11
     cee:	af 90       	pop	r10
     cf0:	9f 90       	pop	r9
     cf2:	8f 90       	pop	r8
     cf4:	08 95       	ret

00000cf6 <conv_brk>:
     cf6:	5f 92       	push	r5
     cf8:	6f 92       	push	r6
     cfa:	7f 92       	push	r7
     cfc:	8f 92       	push	r8
     cfe:	9f 92       	push	r9
     d00:	af 92       	push	r10
     d02:	bf 92       	push	r11
     d04:	cf 92       	push	r12
     d06:	df 92       	push	r13
     d08:	ef 92       	push	r14
     d0a:	ff 92       	push	r15
     d0c:	0f 93       	push	r16
     d0e:	1f 93       	push	r17
     d10:	cf 93       	push	r28
     d12:	df 93       	push	r29
     d14:	cd b7       	in	r28, 0x3d	; 61
     d16:	de b7       	in	r29, 0x3e	; 62
     d18:	a0 97       	sbiw	r28, 0x20	; 32
     d1a:	0f b6       	in	r0, 0x3f	; 63
     d1c:	f8 94       	cli
     d1e:	de bf       	out	0x3e, r29	; 62
     d20:	0f be       	out	0x3f, r0	; 63
     d22:	cd bf       	out	0x3d, r28	; 61
     d24:	5c 01       	movw	r10, r24
     d26:	96 2e       	mov	r9, r22
     d28:	7a 01       	movw	r14, r20
     d2a:	f9 01       	movw	r30, r18
     d2c:	8e 01       	movw	r16, r28
     d2e:	0f 5f       	subi	r16, 0xFF	; 255
     d30:	1f 4f       	sbci	r17, 0xFF	; 255
     d32:	68 01       	movw	r12, r16
     d34:	80 e2       	ldi	r24, 0x20	; 32
     d36:	d8 01       	movw	r26, r16
     d38:	1d 92       	st	X+, r1
     d3a:	8a 95       	dec	r24
     d3c:	e9 f7       	brne	.-6      	; 0xd38 <conv_brk+0x42>
     d3e:	d5 01       	movw	r26, r10
     d40:	13 96       	adiw	r26, 0x03	; 3
     d42:	8c 90       	ld	r8, X
     d44:	80 e0       	ldi	r24, 0x00	; 0
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	61 2c       	mov	r6, r1
     d4a:	71 2c       	mov	r7, r1
     d4c:	30 e0       	ldi	r19, 0x00	; 0
     d4e:	61 e0       	ldi	r22, 0x01	; 1
     d50:	70 e0       	ldi	r23, 0x00	; 0
     d52:	83 fc       	sbrc	r8, 3
     d54:	25 91       	lpm	r18, Z+
     d56:	83 fe       	sbrs	r8, 3
     d58:	21 91       	ld	r18, Z+
     d5a:	8f 01       	movw	r16, r30
     d5c:	52 2e       	mov	r5, r18
     d5e:	21 11       	cpse	r18, r1
     d60:	03 c0       	rjmp	.+6      	; 0xd68 <conv_brk+0x72>
     d62:	80 e0       	ldi	r24, 0x00	; 0
     d64:	90 e0       	ldi	r25, 0x00	; 0
     d66:	90 c0       	rjmp	.+288    	; 0xe88 <conv_brk+0x192>
     d68:	2e 35       	cpi	r18, 0x5E	; 94
     d6a:	11 f4       	brne	.+4      	; 0xd70 <conv_brk+0x7a>
     d6c:	00 97       	sbiw	r24, 0x00	; 0
     d6e:	51 f1       	breq	.+84     	; 0xdc4 <conv_brk+0xce>
     d70:	43 2f       	mov	r20, r19
     d72:	50 e0       	ldi	r21, 0x00	; 0
     d74:	48 17       	cp	r20, r24
     d76:	59 07       	cpc	r21, r25
     d78:	3c f4       	brge	.+14     	; 0xd88 <conv_brk+0x92>
     d7a:	2d 35       	cpi	r18, 0x5D	; 93
     d7c:	59 f1       	breq	.+86     	; 0xdd4 <conv_brk+0xde>
     d7e:	2d 32       	cpi	r18, 0x2D	; 45
     d80:	19 f4       	brne	.+6      	; 0xd88 <conv_brk+0x92>
     d82:	77 20       	and	r7, r7
     d84:	09 f1       	breq	.+66     	; 0xdc8 <conv_brk+0xd2>
     d86:	03 c0       	rjmp	.+6      	; 0xd8e <conv_brk+0x98>
     d88:	77 20       	and	r7, r7
     d8a:	09 f4       	brne	.+2      	; 0xd8e <conv_brk+0x98>
     d8c:	68 c0       	rjmp	.+208    	; 0xe5e <conv_brk+0x168>
     d8e:	45 2d       	mov	r20, r5
     d90:	46 95       	lsr	r20
     d92:	46 95       	lsr	r20
     d94:	46 95       	lsr	r20
     d96:	d6 01       	movw	r26, r12
     d98:	a4 0f       	add	r26, r20
     d9a:	b1 1d       	adc	r27, r1
     d9c:	45 2d       	mov	r20, r5
     d9e:	47 70       	andi	r20, 0x07	; 7
     da0:	8b 01       	movw	r16, r22
     da2:	02 c0       	rjmp	.+4      	; 0xda8 <conv_brk+0xb2>
     da4:	00 0f       	add	r16, r16
     da6:	11 1f       	adc	r17, r17
     da8:	4a 95       	dec	r20
     daa:	e2 f7       	brpl	.-8      	; 0xda4 <conv_brk+0xae>
     dac:	a8 01       	movw	r20, r16
     dae:	5c 91       	ld	r21, X
     db0:	45 2b       	or	r20, r21
     db2:	4c 93       	st	X, r20
     db4:	65 14       	cp	r6, r5
     db6:	59 f0       	breq	.+22     	; 0xdce <conv_brk+0xd8>
     db8:	56 14       	cp	r5, r6
     dba:	10 f4       	brcc	.+4      	; 0xdc0 <conv_brk+0xca>
     dbc:	53 94       	inc	r5
     dbe:	e7 cf       	rjmp	.-50     	; 0xd8e <conv_brk+0x98>
     dc0:	5a 94       	dec	r5
     dc2:	e5 cf       	rjmp	.-54     	; 0xd8e <conv_brk+0x98>
     dc4:	31 e0       	ldi	r19, 0x01	; 1
     dc6:	04 c0       	rjmp	.+8      	; 0xdd0 <conv_brk+0xda>
     dc8:	77 24       	eor	r7, r7
     dca:	73 94       	inc	r7
     dcc:	01 c0       	rjmp	.+2      	; 0xdd0 <conv_brk+0xda>
     dce:	71 2c       	mov	r7, r1
     dd0:	01 96       	adiw	r24, 0x01	; 1
     dd2:	bf cf       	rjmp	.-130    	; 0xd52 <conv_brk+0x5c>
     dd4:	77 20       	and	r7, r7
     dd6:	19 f0       	breq	.+6      	; 0xdde <conv_brk+0xe8>
     dd8:	8e 81       	ldd	r24, Y+6	; 0x06
     dda:	80 62       	ori	r24, 0x20	; 32
     ddc:	8e 83       	std	Y+6, r24	; 0x06
     dde:	31 11       	cpse	r19, r1
     de0:	03 c0       	rjmp	.+6      	; 0xde8 <conv_brk+0xf2>
     de2:	88 24       	eor	r8, r8
     de4:	83 94       	inc	r8
     de6:	17 c0       	rjmp	.+46     	; 0xe16 <conv_brk+0x120>
     de8:	f6 01       	movw	r30, r12
     dea:	9e 01       	movw	r18, r28
     dec:	2f 5d       	subi	r18, 0xDF	; 223
     dee:	3f 4f       	sbci	r19, 0xFF	; 255
     df0:	80 81       	ld	r24, Z
     df2:	80 95       	com	r24
     df4:	81 93       	st	Z+, r24
     df6:	2e 17       	cp	r18, r30
     df8:	3f 07       	cpc	r19, r31
     dfa:	d1 f7       	brne	.-12     	; 0xdf0 <conv_brk+0xfa>
     dfc:	f2 cf       	rjmp	.-28     	; 0xde2 <conv_brk+0xec>
     dfe:	e1 14       	cp	r14, r1
     e00:	f1 04       	cpc	r15, r1
     e02:	29 f0       	breq	.+10     	; 0xe0e <conv_brk+0x118>
     e04:	d7 01       	movw	r26, r14
     e06:	8c 93       	st	X, r24
     e08:	f7 01       	movw	r30, r14
     e0a:	31 96       	adiw	r30, 0x01	; 1
     e0c:	7f 01       	movw	r14, r30
     e0e:	9a 94       	dec	r9
     e10:	81 2c       	mov	r8, r1
     e12:	99 20       	and	r9, r9
     e14:	e9 f0       	breq	.+58     	; 0xe50 <conv_brk+0x15a>
     e16:	c5 01       	movw	r24, r10
     e18:	77 d1       	rcall	.+750    	; 0x1108 <fgetc>
     e1a:	97 fd       	sbrc	r25, 7
     e1c:	17 c0       	rjmp	.+46     	; 0xe4c <conv_brk+0x156>
     e1e:	fc 01       	movw	r30, r24
     e20:	ff 27       	eor	r31, r31
     e22:	23 e0       	ldi	r18, 0x03	; 3
     e24:	f5 95       	asr	r31
     e26:	e7 95       	ror	r30
     e28:	2a 95       	dec	r18
     e2a:	e1 f7       	brne	.-8      	; 0xe24 <conv_brk+0x12e>
     e2c:	ec 0d       	add	r30, r12
     e2e:	fd 1d       	adc	r31, r13
     e30:	20 81       	ld	r18, Z
     e32:	30 e0       	ldi	r19, 0x00	; 0
     e34:	ac 01       	movw	r20, r24
     e36:	47 70       	andi	r20, 0x07	; 7
     e38:	55 27       	eor	r21, r21
     e3a:	02 c0       	rjmp	.+4      	; 0xe40 <conv_brk+0x14a>
     e3c:	35 95       	asr	r19
     e3e:	27 95       	ror	r18
     e40:	4a 95       	dec	r20
     e42:	e2 f7       	brpl	.-8      	; 0xe3c <conv_brk+0x146>
     e44:	20 fd       	sbrc	r18, 0
     e46:	db cf       	rjmp	.-74     	; 0xdfe <conv_brk+0x108>
     e48:	b5 01       	movw	r22, r10
     e4a:	9c d1       	rcall	.+824    	; 0x1184 <ungetc>
     e4c:	81 10       	cpse	r8, r1
     e4e:	89 cf       	rjmp	.-238    	; 0xd62 <conv_brk+0x6c>
     e50:	e1 14       	cp	r14, r1
     e52:	f1 04       	cpc	r15, r1
     e54:	11 f0       	breq	.+4      	; 0xe5a <conv_brk+0x164>
     e56:	d7 01       	movw	r26, r14
     e58:	1c 92       	st	X, r1
     e5a:	c8 01       	movw	r24, r16
     e5c:	15 c0       	rjmp	.+42     	; 0xe88 <conv_brk+0x192>
     e5e:	42 2f       	mov	r20, r18
     e60:	46 95       	lsr	r20
     e62:	46 95       	lsr	r20
     e64:	46 95       	lsr	r20
     e66:	d6 01       	movw	r26, r12
     e68:	a4 0f       	add	r26, r20
     e6a:	b1 1d       	adc	r27, r1
     e6c:	42 2f       	mov	r20, r18
     e6e:	47 70       	andi	r20, 0x07	; 7
     e70:	8b 01       	movw	r16, r22
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <conv_brk+0x182>
     e74:	00 0f       	add	r16, r16
     e76:	11 1f       	adc	r17, r17
     e78:	4a 95       	dec	r20
     e7a:	e2 f7       	brpl	.-8      	; 0xe74 <conv_brk+0x17e>
     e7c:	a8 01       	movw	r20, r16
     e7e:	5c 91       	ld	r21, X
     e80:	45 2b       	or	r20, r21
     e82:	4c 93       	st	X, r20
     e84:	62 2e       	mov	r6, r18
     e86:	a4 cf       	rjmp	.-184    	; 0xdd0 <conv_brk+0xda>
     e88:	a0 96       	adiw	r28, 0x20	; 32
     e8a:	0f b6       	in	r0, 0x3f	; 63
     e8c:	f8 94       	cli
     e8e:	de bf       	out	0x3e, r29	; 62
     e90:	0f be       	out	0x3f, r0	; 63
     e92:	cd bf       	out	0x3d, r28	; 61
     e94:	df 91       	pop	r29
     e96:	cf 91       	pop	r28
     e98:	1f 91       	pop	r17
     e9a:	0f 91       	pop	r16
     e9c:	ff 90       	pop	r15
     e9e:	ef 90       	pop	r14
     ea0:	df 90       	pop	r13
     ea2:	cf 90       	pop	r12
     ea4:	bf 90       	pop	r11
     ea6:	af 90       	pop	r10
     ea8:	9f 90       	pop	r9
     eaa:	8f 90       	pop	r8
     eac:	7f 90       	pop	r7
     eae:	6f 90       	pop	r6
     eb0:	5f 90       	pop	r5
     eb2:	08 95       	ret

00000eb4 <vfscanf>:
     eb4:	5f 92       	push	r5
     eb6:	6f 92       	push	r6
     eb8:	7f 92       	push	r7
     eba:	8f 92       	push	r8
     ebc:	9f 92       	push	r9
     ebe:	af 92       	push	r10
     ec0:	bf 92       	push	r11
     ec2:	cf 92       	push	r12
     ec4:	df 92       	push	r13
     ec6:	ef 92       	push	r14
     ec8:	ff 92       	push	r15
     eca:	0f 93       	push	r16
     ecc:	1f 93       	push	r17
     ece:	cf 93       	push	r28
     ed0:	df 93       	push	r29
     ed2:	6c 01       	movw	r12, r24
     ed4:	eb 01       	movw	r28, r22
     ed6:	5a 01       	movw	r10, r20
     ed8:	fc 01       	movw	r30, r24
     eda:	17 82       	std	Z+7, r1	; 0x07
     edc:	16 82       	std	Z+6, r1	; 0x06
     ede:	51 2c       	mov	r5, r1
     ee0:	f6 01       	movw	r30, r12
     ee2:	e3 80       	ldd	r14, Z+3	; 0x03
     ee4:	fe 01       	movw	r30, r28
     ee6:	e3 fc       	sbrc	r14, 3
     ee8:	85 91       	lpm	r24, Z+
     eea:	e3 fe       	sbrs	r14, 3
     eec:	81 91       	ld	r24, Z+
     eee:	18 2f       	mov	r17, r24
     ef0:	ef 01       	movw	r28, r30
     ef2:	88 23       	and	r24, r24
     ef4:	09 f4       	brne	.+2      	; 0xef8 <vfscanf+0x44>
     ef6:	e0 c0       	rjmp	.+448    	; 0x10b8 <__DATA_REGION_LENGTH__+0xb8>
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	f3 d0       	rcall	.+486    	; 0x10e2 <isspace>
     efc:	89 2b       	or	r24, r25
     efe:	19 f0       	breq	.+6      	; 0xf06 <vfscanf+0x52>
     f00:	c6 01       	movw	r24, r12
     f02:	59 de       	rcall	.-846    	; 0xbb6 <skip_spaces>
     f04:	ed cf       	rjmp	.-38     	; 0xee0 <vfscanf+0x2c>
     f06:	15 32       	cpi	r17, 0x25	; 37
     f08:	41 f4       	brne	.+16     	; 0xf1a <vfscanf+0x66>
     f0a:	fe 01       	movw	r30, r28
     f0c:	e3 fc       	sbrc	r14, 3
     f0e:	15 91       	lpm	r17, Z+
     f10:	e3 fe       	sbrs	r14, 3
     f12:	11 91       	ld	r17, Z+
     f14:	ef 01       	movw	r28, r30
     f16:	15 32       	cpi	r17, 0x25	; 37
     f18:	71 f4       	brne	.+28     	; 0xf36 <vfscanf+0x82>
     f1a:	c6 01       	movw	r24, r12
     f1c:	f5 d0       	rcall	.+490    	; 0x1108 <fgetc>
     f1e:	97 fd       	sbrc	r25, 7
     f20:	c9 c0       	rjmp	.+402    	; 0x10b4 <__DATA_REGION_LENGTH__+0xb4>
     f22:	41 2f       	mov	r20, r17
     f24:	50 e0       	ldi	r21, 0x00	; 0
     f26:	9c 01       	movw	r18, r24
     f28:	33 27       	eor	r19, r19
     f2a:	24 17       	cp	r18, r20
     f2c:	35 07       	cpc	r19, r21
     f2e:	c1 f2       	breq	.-80     	; 0xee0 <vfscanf+0x2c>
     f30:	b6 01       	movw	r22, r12
     f32:	28 d1       	rcall	.+592    	; 0x1184 <ungetc>
     f34:	c1 c0       	rjmp	.+386    	; 0x10b8 <__DATA_REGION_LENGTH__+0xb8>
     f36:	1a 32       	cpi	r17, 0x2A	; 42
     f38:	39 f4       	brne	.+14     	; 0xf48 <vfscanf+0x94>
     f3a:	e3 fc       	sbrc	r14, 3
     f3c:	15 91       	lpm	r17, Z+
     f3e:	e3 fe       	sbrs	r14, 3
     f40:	11 91       	ld	r17, Z+
     f42:	ef 01       	movw	r28, r30
     f44:	01 e0       	ldi	r16, 0x01	; 1
     f46:	01 c0       	rjmp	.+2      	; 0xf4a <vfscanf+0x96>
     f48:	00 e0       	ldi	r16, 0x00	; 0
     f4a:	f1 2c       	mov	r15, r1
     f4c:	20 ed       	ldi	r18, 0xD0	; 208
     f4e:	21 0f       	add	r18, r17
     f50:	2a 30       	cpi	r18, 0x0A	; 10
     f52:	78 f4       	brcc	.+30     	; 0xf72 <vfscanf+0xbe>
     f54:	02 60       	ori	r16, 0x02	; 2
     f56:	6f 2d       	mov	r22, r15
     f58:	70 e0       	ldi	r23, 0x00	; 0
     f5a:	80 e0       	ldi	r24, 0x00	; 0
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	40 e2       	ldi	r20, 0x20	; 32
     f60:	03 de       	rcall	.-1018   	; 0xb68 <mulacc>
     f62:	f6 2e       	mov	r15, r22
     f64:	fe 01       	movw	r30, r28
     f66:	e3 fc       	sbrc	r14, 3
     f68:	15 91       	lpm	r17, Z+
     f6a:	e3 fe       	sbrs	r14, 3
     f6c:	11 91       	ld	r17, Z+
     f6e:	ef 01       	movw	r28, r30
     f70:	ed cf       	rjmp	.-38     	; 0xf4c <vfscanf+0x98>
     f72:	01 ff       	sbrs	r16, 1
     f74:	03 c0       	rjmp	.+6      	; 0xf7c <vfscanf+0xc8>
     f76:	f1 10       	cpse	r15, r1
     f78:	03 c0       	rjmp	.+6      	; 0xf80 <vfscanf+0xcc>
     f7a:	9e c0       	rjmp	.+316    	; 0x10b8 <__DATA_REGION_LENGTH__+0xb8>
     f7c:	ff 24       	eor	r15, r15
     f7e:	fa 94       	dec	r15
     f80:	18 36       	cpi	r17, 0x68	; 104
     f82:	19 f0       	breq	.+6      	; 0xf8a <vfscanf+0xd6>
     f84:	1c 36       	cpi	r17, 0x6C	; 108
     f86:	51 f0       	breq	.+20     	; 0xf9c <vfscanf+0xe8>
     f88:	10 c0       	rjmp	.+32     	; 0xfaa <vfscanf+0xf6>
     f8a:	fe 01       	movw	r30, r28
     f8c:	e3 fc       	sbrc	r14, 3
     f8e:	15 91       	lpm	r17, Z+
     f90:	e3 fe       	sbrs	r14, 3
     f92:	11 91       	ld	r17, Z+
     f94:	ef 01       	movw	r28, r30
     f96:	18 36       	cpi	r17, 0x68	; 104
     f98:	41 f4       	brne	.+16     	; 0xfaa <vfscanf+0xf6>
     f9a:	08 60       	ori	r16, 0x08	; 8
     f9c:	04 60       	ori	r16, 0x04	; 4
     f9e:	fe 01       	movw	r30, r28
     fa0:	e3 fc       	sbrc	r14, 3
     fa2:	15 91       	lpm	r17, Z+
     fa4:	e3 fe       	sbrs	r14, 3
     fa6:	11 91       	ld	r17, Z+
     fa8:	ef 01       	movw	r28, r30
     faa:	11 23       	and	r17, r17
     fac:	09 f4       	brne	.+2      	; 0xfb0 <vfscanf+0xfc>
     fae:	84 c0       	rjmp	.+264    	; 0x10b8 <__DATA_REGION_LENGTH__+0xb8>
     fb0:	61 2f       	mov	r22, r17
     fb2:	70 e0       	ldi	r23, 0x00	; 0
     fb4:	8c e8       	ldi	r24, 0x8C	; 140
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	9c d0       	rcall	.+312    	; 0x10f2 <strchr_P>
     fba:	89 2b       	or	r24, r25
     fbc:	09 f4       	brne	.+2      	; 0xfc0 <vfscanf+0x10c>
     fbe:	7c c0       	rjmp	.+248    	; 0x10b8 <__DATA_REGION_LENGTH__+0xb8>
     fc0:	00 fd       	sbrc	r16, 0
     fc2:	07 c0       	rjmp	.+14     	; 0xfd2 <vfscanf+0x11e>
     fc4:	f5 01       	movw	r30, r10
     fc6:	80 80       	ld	r8, Z
     fc8:	91 80       	ldd	r9, Z+1	; 0x01
     fca:	c5 01       	movw	r24, r10
     fcc:	02 96       	adiw	r24, 0x02	; 2
     fce:	5c 01       	movw	r10, r24
     fd0:	02 c0       	rjmp	.+4      	; 0xfd6 <vfscanf+0x122>
     fd2:	81 2c       	mov	r8, r1
     fd4:	91 2c       	mov	r9, r1
     fd6:	1e 36       	cpi	r17, 0x6E	; 110
     fd8:	49 f4       	brne	.+18     	; 0xfec <vfscanf+0x138>
     fda:	f6 01       	movw	r30, r12
     fdc:	46 81       	ldd	r20, Z+6	; 0x06
     fde:	57 81       	ldd	r21, Z+7	; 0x07
     fe0:	60 e0       	ldi	r22, 0x00	; 0
     fe2:	70 e0       	ldi	r23, 0x00	; 0
     fe4:	20 2f       	mov	r18, r16
     fe6:	c4 01       	movw	r24, r8
     fe8:	b3 dd       	rcall	.-1178   	; 0xb50 <putval>
     fea:	7a cf       	rjmp	.-268    	; 0xee0 <vfscanf+0x2c>
     fec:	13 36       	cpi	r17, 0x63	; 99
     fee:	a1 f4       	brne	.+40     	; 0x1018 <__DATA_REGION_LENGTH__+0x18>
     ff0:	01 fd       	sbrc	r16, 1
     ff2:	02 c0       	rjmp	.+4      	; 0xff8 <vfscanf+0x144>
     ff4:	ff 24       	eor	r15, r15
     ff6:	f3 94       	inc	r15
     ff8:	c6 01       	movw	r24, r12
     ffa:	86 d0       	rcall	.+268    	; 0x1108 <fgetc>
     ffc:	97 fd       	sbrc	r25, 7
     ffe:	5a c0       	rjmp	.+180    	; 0x10b4 <__DATA_REGION_LENGTH__+0xb4>
    1000:	81 14       	cp	r8, r1
    1002:	91 04       	cpc	r9, r1
    1004:	29 f0       	breq	.+10     	; 0x1010 <__DATA_REGION_LENGTH__+0x10>
    1006:	f4 01       	movw	r30, r8
    1008:	80 83       	st	Z, r24
    100a:	c4 01       	movw	r24, r8
    100c:	01 96       	adiw	r24, 0x01	; 1
    100e:	4c 01       	movw	r8, r24
    1010:	fa 94       	dec	r15
    1012:	f1 10       	cpse	r15, r1
    1014:	f1 cf       	rjmp	.-30     	; 0xff8 <vfscanf+0x144>
    1016:	4a c0       	rjmp	.+148    	; 0x10ac <__DATA_REGION_LENGTH__+0xac>
    1018:	1b 35       	cpi	r17, 0x5B	; 91
    101a:	51 f4       	brne	.+20     	; 0x1030 <__DATA_REGION_LENGTH__+0x30>
    101c:	9e 01       	movw	r18, r28
    101e:	a4 01       	movw	r20, r8
    1020:	6f 2d       	mov	r22, r15
    1022:	c6 01       	movw	r24, r12
    1024:	68 de       	rcall	.-816    	; 0xcf6 <conv_brk>
    1026:	ec 01       	movw	r28, r24
    1028:	89 2b       	or	r24, r25
    102a:	09 f0       	breq	.+2      	; 0x102e <__DATA_REGION_LENGTH__+0x2e>
    102c:	3f c0       	rjmp	.+126    	; 0x10ac <__DATA_REGION_LENGTH__+0xac>
    102e:	39 c0       	rjmp	.+114    	; 0x10a2 <__DATA_REGION_LENGTH__+0xa2>
    1030:	c6 01       	movw	r24, r12
    1032:	c1 dd       	rcall	.-1150   	; 0xbb6 <skip_spaces>
    1034:	97 fd       	sbrc	r25, 7
    1036:	3e c0       	rjmp	.+124    	; 0x10b4 <__DATA_REGION_LENGTH__+0xb4>
    1038:	1f 36       	cpi	r17, 0x6F	; 111
    103a:	49 f1       	breq	.+82     	; 0x108e <__DATA_REGION_LENGTH__+0x8e>
    103c:	28 f4       	brcc	.+10     	; 0x1048 <__DATA_REGION_LENGTH__+0x48>
    103e:	14 36       	cpi	r17, 0x64	; 100
    1040:	21 f1       	breq	.+72     	; 0x108a <__DATA_REGION_LENGTH__+0x8a>
    1042:	19 36       	cpi	r17, 0x69	; 105
    1044:	39 f1       	breq	.+78     	; 0x1094 <__DATA_REGION_LENGTH__+0x94>
    1046:	25 c0       	rjmp	.+74     	; 0x1092 <__DATA_REGION_LENGTH__+0x92>
    1048:	13 37       	cpi	r17, 0x73	; 115
    104a:	71 f0       	breq	.+28     	; 0x1068 <__DATA_REGION_LENGTH__+0x68>
    104c:	15 37       	cpi	r17, 0x75	; 117
    104e:	e9 f0       	breq	.+58     	; 0x108a <__DATA_REGION_LENGTH__+0x8a>
    1050:	20 c0       	rjmp	.+64     	; 0x1092 <__DATA_REGION_LENGTH__+0x92>
    1052:	81 14       	cp	r8, r1
    1054:	91 04       	cpc	r9, r1
    1056:	29 f0       	breq	.+10     	; 0x1062 <__DATA_REGION_LENGTH__+0x62>
    1058:	f4 01       	movw	r30, r8
    105a:	60 82       	st	Z, r6
    105c:	c4 01       	movw	r24, r8
    105e:	01 96       	adiw	r24, 0x01	; 1
    1060:	4c 01       	movw	r8, r24
    1062:	fa 94       	dec	r15
    1064:	ff 20       	and	r15, r15
    1066:	59 f0       	breq	.+22     	; 0x107e <__DATA_REGION_LENGTH__+0x7e>
    1068:	c6 01       	movw	r24, r12
    106a:	4e d0       	rcall	.+156    	; 0x1108 <fgetc>
    106c:	3c 01       	movw	r6, r24
    106e:	97 fd       	sbrc	r25, 7
    1070:	06 c0       	rjmp	.+12     	; 0x107e <__DATA_REGION_LENGTH__+0x7e>
    1072:	37 d0       	rcall	.+110    	; 0x10e2 <isspace>
    1074:	89 2b       	or	r24, r25
    1076:	69 f3       	breq	.-38     	; 0x1052 <__DATA_REGION_LENGTH__+0x52>
    1078:	b6 01       	movw	r22, r12
    107a:	c3 01       	movw	r24, r6
    107c:	83 d0       	rcall	.+262    	; 0x1184 <ungetc>
    107e:	81 14       	cp	r8, r1
    1080:	91 04       	cpc	r9, r1
    1082:	a1 f0       	breq	.+40     	; 0x10ac <__DATA_REGION_LENGTH__+0xac>
    1084:	f4 01       	movw	r30, r8
    1086:	10 82       	st	Z, r1
    1088:	11 c0       	rjmp	.+34     	; 0x10ac <__DATA_REGION_LENGTH__+0xac>
    108a:	00 62       	ori	r16, 0x20	; 32
    108c:	03 c0       	rjmp	.+6      	; 0x1094 <__DATA_REGION_LENGTH__+0x94>
    108e:	00 61       	ori	r16, 0x10	; 16
    1090:	01 c0       	rjmp	.+2      	; 0x1094 <__DATA_REGION_LENGTH__+0x94>
    1092:	00 64       	ori	r16, 0x40	; 64
    1094:	20 2f       	mov	r18, r16
    1096:	a4 01       	movw	r20, r8
    1098:	6f 2d       	mov	r22, r15
    109a:	c6 01       	movw	r24, r12
    109c:	a2 dd       	rcall	.-1212   	; 0xbe2 <conv_int>
    109e:	81 11       	cpse	r24, r1
    10a0:	05 c0       	rjmp	.+10     	; 0x10ac <__DATA_REGION_LENGTH__+0xac>
    10a2:	f6 01       	movw	r30, r12
    10a4:	83 81       	ldd	r24, Z+3	; 0x03
    10a6:	80 73       	andi	r24, 0x30	; 48
    10a8:	29 f4       	brne	.+10     	; 0x10b4 <__DATA_REGION_LENGTH__+0xb4>
    10aa:	06 c0       	rjmp	.+12     	; 0x10b8 <__DATA_REGION_LENGTH__+0xb8>
    10ac:	00 fd       	sbrc	r16, 0
    10ae:	18 cf       	rjmp	.-464    	; 0xee0 <vfscanf+0x2c>
    10b0:	53 94       	inc	r5
    10b2:	16 cf       	rjmp	.-468    	; 0xee0 <vfscanf+0x2c>
    10b4:	55 20       	and	r5, r5
    10b6:	19 f0       	breq	.+6      	; 0x10be <__DATA_REGION_LENGTH__+0xbe>
    10b8:	85 2d       	mov	r24, r5
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	02 c0       	rjmp	.+4      	; 0x10c2 <__DATA_REGION_LENGTH__+0xc2>
    10be:	8f ef       	ldi	r24, 0xFF	; 255
    10c0:	9f ef       	ldi	r25, 0xFF	; 255
    10c2:	df 91       	pop	r29
    10c4:	cf 91       	pop	r28
    10c6:	1f 91       	pop	r17
    10c8:	0f 91       	pop	r16
    10ca:	ff 90       	pop	r15
    10cc:	ef 90       	pop	r14
    10ce:	df 90       	pop	r13
    10d0:	cf 90       	pop	r12
    10d2:	bf 90       	pop	r11
    10d4:	af 90       	pop	r10
    10d6:	9f 90       	pop	r9
    10d8:	8f 90       	pop	r8
    10da:	7f 90       	pop	r7
    10dc:	6f 90       	pop	r6
    10de:	5f 90       	pop	r5
    10e0:	08 95       	ret

000010e2 <isspace>:
    10e2:	91 11       	cpse	r25, r1
    10e4:	68 c0       	rjmp	.+208    	; 0x11b6 <__ctype_isfalse>
    10e6:	80 32       	cpi	r24, 0x20	; 32
    10e8:	19 f0       	breq	.+6      	; 0x10f0 <isspace+0xe>
    10ea:	89 50       	subi	r24, 0x09	; 9
    10ec:	85 50       	subi	r24, 0x05	; 5
    10ee:	d0 f7       	brcc	.-12     	; 0x10e4 <isspace+0x2>
    10f0:	08 95       	ret

000010f2 <strchr_P>:
    10f2:	fc 01       	movw	r30, r24
    10f4:	05 90       	lpm	r0, Z+
    10f6:	06 16       	cp	r0, r22
    10f8:	21 f0       	breq	.+8      	; 0x1102 <__stack+0x3>
    10fa:	00 20       	and	r0, r0
    10fc:	d9 f7       	brne	.-10     	; 0x10f4 <strchr_P+0x2>
    10fe:	c0 01       	movw	r24, r0
    1100:	08 95       	ret
    1102:	31 97       	sbiw	r30, 0x01	; 1
    1104:	cf 01       	movw	r24, r30
    1106:	08 95       	ret

00001108 <fgetc>:
    1108:	cf 93       	push	r28
    110a:	df 93       	push	r29
    110c:	ec 01       	movw	r28, r24
    110e:	2b 81       	ldd	r18, Y+3	; 0x03
    1110:	20 ff       	sbrs	r18, 0
    1112:	33 c0       	rjmp	.+102    	; 0x117a <fgetc+0x72>
    1114:	26 ff       	sbrs	r18, 6
    1116:	0a c0       	rjmp	.+20     	; 0x112c <fgetc+0x24>
    1118:	2f 7b       	andi	r18, 0xBF	; 191
    111a:	2b 83       	std	Y+3, r18	; 0x03
    111c:	8e 81       	ldd	r24, Y+6	; 0x06
    111e:	9f 81       	ldd	r25, Y+7	; 0x07
    1120:	01 96       	adiw	r24, 0x01	; 1
    1122:	9f 83       	std	Y+7, r25	; 0x07
    1124:	8e 83       	std	Y+6, r24	; 0x06
    1126:	8a 81       	ldd	r24, Y+2	; 0x02
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	29 c0       	rjmp	.+82     	; 0x117e <fgetc+0x76>
    112c:	22 ff       	sbrs	r18, 2
    112e:	0f c0       	rjmp	.+30     	; 0x114e <fgetc+0x46>
    1130:	e8 81       	ld	r30, Y
    1132:	f9 81       	ldd	r31, Y+1	; 0x01
    1134:	80 81       	ld	r24, Z
    1136:	08 2e       	mov	r0, r24
    1138:	00 0c       	add	r0, r0
    113a:	99 0b       	sbc	r25, r25
    113c:	00 97       	sbiw	r24, 0x00	; 0
    113e:	19 f4       	brne	.+6      	; 0x1146 <fgetc+0x3e>
    1140:	20 62       	ori	r18, 0x20	; 32
    1142:	2b 83       	std	Y+3, r18	; 0x03
    1144:	1a c0       	rjmp	.+52     	; 0x117a <fgetc+0x72>
    1146:	31 96       	adiw	r30, 0x01	; 1
    1148:	f9 83       	std	Y+1, r31	; 0x01
    114a:	e8 83       	st	Y, r30
    114c:	0e c0       	rjmp	.+28     	; 0x116a <fgetc+0x62>
    114e:	ea 85       	ldd	r30, Y+10	; 0x0a
    1150:	fb 85       	ldd	r31, Y+11	; 0x0b
    1152:	09 95       	icall
    1154:	97 ff       	sbrs	r25, 7
    1156:	09 c0       	rjmp	.+18     	; 0x116a <fgetc+0x62>
    1158:	2b 81       	ldd	r18, Y+3	; 0x03
    115a:	01 96       	adiw	r24, 0x01	; 1
    115c:	11 f0       	breq	.+4      	; 0x1162 <fgetc+0x5a>
    115e:	80 e2       	ldi	r24, 0x20	; 32
    1160:	01 c0       	rjmp	.+2      	; 0x1164 <fgetc+0x5c>
    1162:	80 e1       	ldi	r24, 0x10	; 16
    1164:	82 2b       	or	r24, r18
    1166:	8b 83       	std	Y+3, r24	; 0x03
    1168:	08 c0       	rjmp	.+16     	; 0x117a <fgetc+0x72>
    116a:	2e 81       	ldd	r18, Y+6	; 0x06
    116c:	3f 81       	ldd	r19, Y+7	; 0x07
    116e:	2f 5f       	subi	r18, 0xFF	; 255
    1170:	3f 4f       	sbci	r19, 0xFF	; 255
    1172:	3f 83       	std	Y+7, r19	; 0x07
    1174:	2e 83       	std	Y+6, r18	; 0x06
    1176:	99 27       	eor	r25, r25
    1178:	02 c0       	rjmp	.+4      	; 0x117e <fgetc+0x76>
    117a:	8f ef       	ldi	r24, 0xFF	; 255
    117c:	9f ef       	ldi	r25, 0xFF	; 255
    117e:	df 91       	pop	r29
    1180:	cf 91       	pop	r28
    1182:	08 95       	ret

00001184 <ungetc>:
    1184:	fb 01       	movw	r30, r22
    1186:	23 81       	ldd	r18, Z+3	; 0x03
    1188:	20 ff       	sbrs	r18, 0
    118a:	12 c0       	rjmp	.+36     	; 0x11b0 <ungetc+0x2c>
    118c:	26 fd       	sbrc	r18, 6
    118e:	10 c0       	rjmp	.+32     	; 0x11b0 <ungetc+0x2c>
    1190:	8f 3f       	cpi	r24, 0xFF	; 255
    1192:	3f ef       	ldi	r19, 0xFF	; 255
    1194:	93 07       	cpc	r25, r19
    1196:	61 f0       	breq	.+24     	; 0x11b0 <ungetc+0x2c>
    1198:	82 83       	std	Z+2, r24	; 0x02
    119a:	2f 7d       	andi	r18, 0xDF	; 223
    119c:	20 64       	ori	r18, 0x40	; 64
    119e:	23 83       	std	Z+3, r18	; 0x03
    11a0:	26 81       	ldd	r18, Z+6	; 0x06
    11a2:	37 81       	ldd	r19, Z+7	; 0x07
    11a4:	21 50       	subi	r18, 0x01	; 1
    11a6:	31 09       	sbc	r19, r1
    11a8:	37 83       	std	Z+7, r19	; 0x07
    11aa:	26 83       	std	Z+6, r18	; 0x06
    11ac:	99 27       	eor	r25, r25
    11ae:	08 95       	ret
    11b0:	8f ef       	ldi	r24, 0xFF	; 255
    11b2:	9f ef       	ldi	r25, 0xFF	; 255
    11b4:	08 95       	ret

000011b6 <__ctype_isfalse>:
    11b6:	99 27       	eor	r25, r25
    11b8:	88 27       	eor	r24, r24

000011ba <__ctype_istrue>:
    11ba:	08 95       	ret

000011bc <_exit>:
    11bc:	f8 94       	cli

000011be <__stop_program>:
    11be:	ff cf       	rjmp	.-2      	; 0x11be <__stop_program>
