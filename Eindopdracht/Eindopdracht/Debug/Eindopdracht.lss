
Eindopdracht.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  000018fc  00001990  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000018fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  0080013a  0080013a  000019ca  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000019ca  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001a28  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00001a64  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011ef  00000000  00000000  00001b5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cd1  00000000  00000000  00002d4b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000090c  00000000  00000000  00003a1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002cc  00000000  00000000  00004328  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000634  00000000  00000000  000045f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007dd  00000000  00000000  00004c28  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00005405  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
       2:	00 00       	nop
       4:	67 c0       	rjmp	.+206    	; 0xd4 <__bad_interrupt>
       6:	00 00       	nop
       8:	65 c0       	rjmp	.+202    	; 0xd4 <__bad_interrupt>
       a:	00 00       	nop
       c:	63 c0       	rjmp	.+198    	; 0xd4 <__bad_interrupt>
       e:	00 00       	nop
      10:	61 c0       	rjmp	.+194    	; 0xd4 <__bad_interrupt>
      12:	00 00       	nop
      14:	5f c0       	rjmp	.+190    	; 0xd4 <__bad_interrupt>
      16:	00 00       	nop
      18:	5d c0       	rjmp	.+186    	; 0xd4 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	5b c0       	rjmp	.+182    	; 0xd4 <__bad_interrupt>
      1e:	00 00       	nop
      20:	59 c0       	rjmp	.+178    	; 0xd4 <__bad_interrupt>
      22:	00 00       	nop
      24:	57 c0       	rjmp	.+174    	; 0xd4 <__bad_interrupt>
      26:	00 00       	nop
      28:	55 c0       	rjmp	.+170    	; 0xd4 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	53 c0       	rjmp	.+166    	; 0xd4 <__bad_interrupt>
      2e:	00 00       	nop
      30:	f2 c1       	rjmp	.+996    	; 0x416 <__vector_12>
      32:	00 00       	nop
      34:	74 c2       	rjmp	.+1256   	; 0x51e <__vector_13>
      36:	00 00       	nop
      38:	4d c0       	rjmp	.+154    	; 0xd4 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	4b c0       	rjmp	.+150    	; 0xd4 <__bad_interrupt>
      3e:	00 00       	nop
      40:	49 c0       	rjmp	.+146    	; 0xd4 <__bad_interrupt>
      42:	00 00       	nop
      44:	47 c0       	rjmp	.+142    	; 0xd4 <__bad_interrupt>
      46:	00 00       	nop
      48:	45 c0       	rjmp	.+138    	; 0xd4 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	43 c0       	rjmp	.+134    	; 0xd4 <__bad_interrupt>
      4e:	00 00       	nop
      50:	41 c0       	rjmp	.+130    	; 0xd4 <__bad_interrupt>
      52:	00 00       	nop
      54:	3f c0       	rjmp	.+126    	; 0xd4 <__bad_interrupt>
      56:	00 00       	nop
      58:	3d c0       	rjmp	.+122    	; 0xd4 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	3b c0       	rjmp	.+118    	; 0xd4 <__bad_interrupt>
      5e:	00 00       	nop
      60:	39 c0       	rjmp	.+114    	; 0xd4 <__bad_interrupt>
      62:	00 00       	nop
      64:	37 c0       	rjmp	.+110    	; 0xd4 <__bad_interrupt>
      66:	00 00       	nop
      68:	35 c0       	rjmp	.+106    	; 0xd4 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	33 c0       	rjmp	.+102    	; 0xd4 <__bad_interrupt>
      6e:	00 00       	nop
      70:	31 c0       	rjmp	.+98     	; 0xd4 <__bad_interrupt>
      72:	00 00       	nop
      74:	2f c0       	rjmp	.+94     	; 0xd4 <__bad_interrupt>
      76:	00 00       	nop
      78:	2d c0       	rjmp	.+90     	; 0xd4 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	2b c0       	rjmp	.+86     	; 0xd4 <__bad_interrupt>
      7e:	00 00       	nop
      80:	29 c0       	rjmp	.+82     	; 0xd4 <__bad_interrupt>
      82:	00 00       	nop
      84:	27 c0       	rjmp	.+78     	; 0xd4 <__bad_interrupt>
      86:	00 00       	nop
      88:	25 c0       	rjmp	.+74     	; 0xd4 <__bad_interrupt>
	...

0000008c <__trampolines_end>:
      8c:	63 64       	ori	r22, 0x43	; 67
      8e:	69 6e       	ori	r22, 0xE9	; 233
      90:	6f 70       	andi	r22, 0x0F	; 15
      92:	73 75       	andi	r23, 0x53	; 83
      94:	78 58       	subi	r23, 0x88	; 136
      96:	5b 00       	.word	0x005b	; ????

00000098 <__ctors_end>:
      98:	11 24       	eor	r1, r1
      9a:	1f be       	out	0x3f, r1	; 63
      9c:	cf ef       	ldi	r28, 0xFF	; 255
      9e:	d0 e1       	ldi	r29, 0x10	; 16
      a0:	de bf       	out	0x3e, r29	; 62
      a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
      a4:	11 e0       	ldi	r17, 0x01	; 1
      a6:	a0 e0       	ldi	r26, 0x00	; 0
      a8:	b1 e0       	ldi	r27, 0x01	; 1
      aa:	ec ef       	ldi	r30, 0xFC	; 252
      ac:	f8 e1       	ldi	r31, 0x18	; 24
      ae:	00 e0       	ldi	r16, 0x00	; 0
      b0:	0b bf       	out	0x3b, r16	; 59
      b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
      b4:	07 90       	elpm	r0, Z+
      b6:	0d 92       	st	X+, r0
      b8:	aa 33       	cpi	r26, 0x3A	; 58
      ba:	b1 07       	cpc	r27, r17
      bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
      be:	21 e0       	ldi	r18, 0x01	; 1
      c0:	aa e3       	ldi	r26, 0x3A	; 58
      c2:	b1 e0       	ldi	r27, 0x01	; 1
      c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
      c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
      c8:	a2 34       	cpi	r26, 0x42	; 66
      ca:	b2 07       	cpc	r27, r18
      cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
      ce:	ce d0       	rcall	.+412    	; 0x26c <main>
      d0:	0c 94 7c 0c 	jmp	0x18f8	; 0x18f8 <_exit>

000000d4 <__bad_interrupt>:
      d4:	95 cf       	rjmp	.-214    	; 0x0 <__vectors>

000000d6 <wait>:
	confirmCommand();
}

static void wait(int ms)
{
	for (int i = 0; i < ms; i++)
      d6:	20 e0       	ldi	r18, 0x00	; 0
      d8:	30 e0       	ldi	r19, 0x00	; 0
      da:	08 c0       	rjmp	.+16     	; 0xec <wait+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      dc:	ef ec       	ldi	r30, 0xCF	; 207
      de:	f7 e0       	ldi	r31, 0x07	; 7
      e0:	31 97       	sbiw	r30, 0x01	; 1
      e2:	f1 f7       	brne	.-4      	; 0xe0 <wait+0xa>
      e4:	00 c0       	rjmp	.+0      	; 0xe6 <wait+0x10>
      e6:	00 00       	nop
      e8:	2f 5f       	subi	r18, 0xFF	; 255
      ea:	3f 4f       	sbci	r19, 0xFF	; 255
      ec:	28 17       	cp	r18, r24
      ee:	39 07       	cpc	r19, r25
      f0:	ac f3       	brlt	.-22     	; 0xdc <wait+0x6>
	{
		_delay_ms(1);
	}
      f2:	08 95       	ret

000000f4 <confirmCommand>:
	write_command(0x01); //Clear display
}

static void confirmCommand()
{
	PORTC |= (1<<LCD_E);
      f4:	85 b3       	in	r24, 0x15	; 21
      f6:	88 60       	ori	r24, 0x08	; 8
      f8:	85 bb       	out	0x15, r24	; 21
	wait(1);
      fa:	81 e0       	ldi	r24, 0x01	; 1
      fc:	90 e0       	ldi	r25, 0x00	; 0
      fe:	eb df       	rcall	.-42     	; 0xd6 <wait>
	PORTC &= ~(1<<LCD_E);
     100:	85 b3       	in	r24, 0x15	; 21
     102:	87 7f       	andi	r24, 0xF7	; 247
     104:	85 bb       	out	0x15, r24	; 21
	wait(1);
     106:	81 e0       	ldi	r24, 0x01	; 1
     108:	90 e0       	ldi	r25, 0x00	; 0
     10a:	e5 cf       	rjmp	.-54     	; 0xd6 <wait>
     10c:	08 95       	ret

0000010e <write_command>:
{
	write_command(0x80 + position);
}

static void write_command(unsigned char byte)
{
     10e:	cf 93       	push	r28
     110:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
     112:	85 bb       	out	0x15, r24	; 21
	PORTC &= ~(1<<LCD_RS);
     114:	85 b3       	in	r24, 0x15	; 21
     116:	8b 7f       	andi	r24, 0xFB	; 251
     118:	85 bb       	out	0x15, r24	; 21
	confirmCommand();
     11a:	ec df       	rcall	.-40     	; 0xf4 <confirmCommand>

	// Second nibble
	PORTC = (byte<<4);
     11c:	c2 95       	swap	r28
     11e:	c0 7f       	andi	r28, 0xF0	; 240
     120:	c5 bb       	out	0x15, r28	; 21
	PORTC &= ~(1<<LCD_RS);
     122:	85 b3       	in	r24, 0x15	; 21
     124:	8b 7f       	andi	r24, 0xFB	; 251
	confirmCommand();
     126:	85 bb       	out	0x15, r24	; 21
     128:	e5 df       	rcall	.-54     	; 0xf4 <confirmCommand>
}
     12a:	cf 91       	pop	r28
     12c:	08 95       	ret

0000012e <write_data>:

static void write_data(unsigned char byte) {
     12e:	cf 93       	push	r28
     130:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
     132:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1<<LCD_RS);
     134:	85 b3       	in	r24, 0x15	; 21
     136:	84 60       	ori	r24, 0x04	; 4
     138:	85 bb       	out	0x15, r24	; 21
	confirmCommand();
     13a:	dc df       	rcall	.-72     	; 0xf4 <confirmCommand>

	// Second nibble
	PORTC = (byte<<4);
     13c:	c2 95       	swap	r28
     13e:	c0 7f       	andi	r28, 0xF0	; 240
     140:	c5 bb       	out	0x15, r28	; 21
	PORTC |= (1<<LCD_RS);
     142:	85 b3       	in	r24, 0x15	; 21
     144:	84 60       	ori	r24, 0x04	; 4
	confirmCommand();
     146:	85 bb       	out	0x15, r24	; 21
     148:	d5 df       	rcall	.-86     	; 0xf4 <confirmCommand>
}
     14a:	cf 91       	pop	r28
     14c:	08 95       	ret

0000014e <clearDisplay>:
	write_command(0x06); //Entry mode set
}

void clearDisplay()
{
	write_command(0x01); //Clear display
     14e:	81 e0       	ldi	r24, 0x01	; 1
     150:	de cf       	rjmp	.-68     	; 0x10e <write_command>
     152:	08 95       	ret

00000154 <init>:
static void write_command(unsigned char);
static void write_data(unsigned char);
static void wait(int);

void init()
{
     154:	cf 93       	push	r28
	DDRC = 0xFF;
     156:	8f ef       	ldi	r24, 0xFF	; 255
     158:	84 bb       	out	0x14, r24	; 20
	PORTC = 0x00;
     15a:	15 ba       	out	0x15, r1	; 21

	PORTC = 0x28;	// function set
     15c:	c8 e2       	ldi	r28, 0x28	; 40
     15e:	c5 bb       	out	0x15, r28	; 21
	confirmCommand();
     160:	c9 df       	rcall	.-110    	; 0xf4 <confirmCommand>

	PORTC = 0x28;   // function set
	confirmCommand();
     162:	c5 bb       	out	0x15, r28	; 21
     164:	c7 df       	rcall	.-114    	; 0xf4 <confirmCommand>
	PORTC = 0x80;
     166:	80 e8       	ldi	r24, 0x80	; 128
	confirmCommand();
     168:	85 bb       	out	0x15, r24	; 21

	clearDisplay();
     16a:	c4 df       	rcall	.-120    	; 0xf4 <confirmCommand>

	write_command(0x0F); //Display on/off control
     16c:	f0 df       	rcall	.-32     	; 0x14e <clearDisplay>
     16e:	8f e0       	ldi	r24, 0x0F	; 15
     170:	ce df       	rcall	.-100    	; 0x10e <write_command>
	
	write_command(0x06); //Entry mode set
     172:	86 e0       	ldi	r24, 0x06	; 6
     174:	cc df       	rcall	.-104    	; 0x10e <write_command>
     176:	cf 91       	pop	r28
}
     178:	08 95       	ret

0000017a <display_text>:
     17a:	cf 93       	push	r28
	PORTC &= ~(1<<LCD_E);
	wait(1);
}

void display_text(char *str)
{	
     17c:	df 93       	push	r29
     17e:	ec 01       	movw	r28, r24
	for(;*str; str++)
     180:	02 c0       	rjmp	.+4      	; 0x186 <display_text+0xc>
	{
		write_data(*str);
     182:	d5 df       	rcall	.-86     	; 0x12e <write_data>
	wait(1);
}

void display_text(char *str)
{	
	for(;*str; str++)
     184:	21 96       	adiw	r28, 0x01	; 1
     186:	88 81       	ld	r24, Y
     188:	81 11       	cpse	r24, r1
     18a:	fb cf       	rjmp	.-10     	; 0x182 <display_text+0x8>
	{
		write_data(*str);
	}
}
     18c:	df 91       	pop	r29
     18e:	cf 91       	pop	r28
     190:	08 95       	ret

00000192 <USART_Init>:
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC)) )
	;
	/* Get and return received data from buffer */
	return UDR0;
}
     192:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     196:	89 b9       	out	0x09, r24	; 9
     198:	88 e1       	ldi	r24, 0x18	; 24
     19a:	8a b9       	out	0x0a, r24	; 10
     19c:	8e e0       	ldi	r24, 0x0E	; 14
     19e:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
     1a2:	08 95       	ret

000001a4 <USART_Transmit>:
     1a4:	5d 9b       	sbis	0x0b, 5	; 11
     1a6:	fe cf       	rjmp	.-4      	; 0x1a4 <USART_Transmit>
     1a8:	8c b9       	out	0x0c, r24	; 12
     1aa:	08 95       	ret

000001ac <USART_Receive_String>:

void USART_Receive_String(char* data)
{
     1ac:	ac 01       	movw	r20, r24
	int i = 0;
	
	char tempData = 'a';
     1ae:	91 e6       	ldi	r25, 0x61	; 97
	return UDR0;
}

void USART_Receive_String(char* data)
{
	int i = 0;
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	30 e0       	ldi	r19, 0x00	; 0
	
	char tempData = 'a';
	
	//char *pChar = &tempData;
	
	while(tempData != ':')
     1b4:	09 c0       	rjmp	.+18     	; 0x1c8 <USART_Receive_String+0x1c>
	{
		/* Wait for data to be received */
		while ( !(UCSR0A & (1<<RXC)) );
     1b6:	5f 9b       	sbis	0x0b, 7	; 11
     1b8:	fe cf       	rjmp	.-4      	; 0x1b6 <USART_Receive_String+0xa>
		
		tempData = UDR0;
     1ba:	9c b1       	in	r25, 0x0c	; 12
		//display_text(pChar);
		
		data[i] = tempData;
     1bc:	fa 01       	movw	r30, r20
     1be:	e2 0f       	add	r30, r18
     1c0:	f3 1f       	adc	r31, r19
     1c2:	90 83       	st	Z, r25
		i++;
     1c4:	2f 5f       	subi	r18, 0xFF	; 255
     1c6:	3f 4f       	sbci	r19, 0xFF	; 255
	
	char tempData = 'a';
	
	//char *pChar = &tempData;
	
	while(tempData != ':')
     1c8:	9a 33       	cpi	r25, 0x3A	; 58
     1ca:	a9 f7       	brne	.-22     	; 0x1b6 <USART_Receive_String+0xa>
		//display_text(pChar);
		
		data[i] = tempData;
		i++;
	}
	data[i] = '\0';
     1cc:	fa 01       	movw	r30, r20
     1ce:	e2 0f       	add	r30, r18
     1d0:	f3 1f       	adc	r31, r19
     1d2:	10 82       	st	Z, r1
     1d4:	08 95       	ret

000001d6 <USART_onlyNumbers>:
}

int USART_onlyNumbers(char* data)
{
     1d6:	cf 93       	push	r28
     1d8:	df 93       	push	r29
     1da:	cd b7       	in	r28, 0x3d	; 61
     1dc:	de b7       	in	r29, 0x3e	; 62
     1de:	27 97       	sbiw	r28, 0x07	; 7
     1e0:	0f b6       	in	r0, 0x3f	; 63
     1e2:	f8 94       	cli
     1e4:	de bf       	out	0x3e, r29	; 62
     1e6:	0f be       	out	0x3f, r0	; 63
     1e8:	cd bf       	out	0x3d, r28	; 61
     1ea:	ac 01       	movw	r20, r24
	char subArray[5];
		for (int i = 0; i < 4; i++)
     1ec:	20 e0       	ldi	r18, 0x00	; 0
     1ee:	30 e0       	ldi	r19, 0x00	; 0
     1f0:	0d c0       	rjmp	.+26     	; 0x20c <USART_onlyNumbers+0x36>
		{
			subArray[i] = data[i+5];
     1f2:	fa 01       	movw	r30, r20
     1f4:	e2 0f       	add	r30, r18
     1f6:	f3 1f       	adc	r31, r19
     1f8:	95 81       	ldd	r25, Z+5	; 0x05
     1fa:	e1 e0       	ldi	r30, 0x01	; 1
     1fc:	f0 e0       	ldi	r31, 0x00	; 0
     1fe:	ec 0f       	add	r30, r28
     200:	fd 1f       	adc	r31, r29
     202:	e2 0f       	add	r30, r18
     204:	f3 1f       	adc	r31, r19
     206:	90 83       	st	Z, r25
}

int USART_onlyNumbers(char* data)
{
	char subArray[5];
		for (int i = 0; i < 4; i++)
     208:	2f 5f       	subi	r18, 0xFF	; 255
     20a:	3f 4f       	sbci	r19, 0xFF	; 255
     20c:	24 30       	cpi	r18, 0x04	; 4
     20e:	31 05       	cpc	r19, r1
     210:	84 f3       	brlt	.-32     	; 0x1f2 <USART_onlyNumbers+0x1c>
		{
			subArray[i] = data[i+5];
		}
		
		int distance;
		sscanf(subArray, "%d", &distance);
     212:	ce 01       	movw	r24, r28
     214:	06 96       	adiw	r24, 0x06	; 6
     216:	9f 93       	push	r25
     218:	8f 93       	push	r24
     21a:	88 e1       	ldi	r24, 0x18	; 24
     21c:	91 e0       	ldi	r25, 0x01	; 1
     21e:	9f 93       	push	r25
     220:	8f 93       	push	r24
     222:	ce 01       	movw	r24, r28
     224:	01 96       	adiw	r24, 0x01	; 1
     226:	9f 93       	push	r25
     228:	8f 93       	push	r24
     22a:	62 d5       	rcall	.+2756   	; 0xcf0 <sscanf>

	return distance;
     22c:	0f 90       	pop	r0
     22e:	0f 90       	pop	r0
     230:	0f 90       	pop	r0
     232:	0f 90       	pop	r0
     234:	0f 90       	pop	r0
     236:	0f 90       	pop	r0
}
     238:	8e 81       	ldd	r24, Y+6	; 0x06
     23a:	9f 81       	ldd	r25, Y+7	; 0x07
     23c:	27 96       	adiw	r28, 0x07	; 7
     23e:	0f b6       	in	r0, 0x3f	; 63
     240:	f8 94       	cli
     242:	de bf       	out	0x3e, r29	; 62
     244:	0f be       	out	0x3f, r0	; 63
     246:	cd bf       	out	0x3d, r28	; 61
     248:	df 91       	pop	r29
     24a:	cf 91       	pop	r28
     24c:	08 95       	ret

0000024e <wait>:
	return 1;
}

static void wait(int ms)
{
	for (int tms=0; tms<ms; tms++)
     24e:	20 e0       	ldi	r18, 0x00	; 0
     250:	30 e0       	ldi	r19, 0x00	; 0
     252:	08 c0       	rjmp	.+16     	; 0x264 <wait+0x16>
     254:	ef ec       	ldi	r30, 0xCF	; 207
     256:	f7 e0       	ldi	r31, 0x07	; 7
     258:	31 97       	sbiw	r30, 0x01	; 1
     25a:	f1 f7       	brne	.-4      	; 0x258 <wait+0xa>
     25c:	00 c0       	rjmp	.+0      	; 0x25e <wait+0x10>
     25e:	00 00       	nop
     260:	2f 5f       	subi	r18, 0xFF	; 255
     262:	3f 4f       	sbci	r19, 0xFF	; 255
     264:	28 17       	cp	r18, r24
     266:	39 07       	cpc	r19, r25
     268:	ac f3       	brlt	.-22     	; 0x254 <wait+0x6>
		_delay_ms(1);
     26a:	08 95       	ret

0000026c <main>:
// Extern variable to the servo2 angle (angle between 180 and 30 (safe angle))
int servo2_targetValue;


int main(void)
{
     26c:	cf 93       	push	r28
     26e:	df 93       	push	r29
     270:	00 d0       	rcall	.+0      	; 0x272 <main+0x6>
     272:	00 d0       	rcall	.+0      	; 0x274 <main+0x8>
     274:	00 d0       	rcall	.+0      	; 0x276 <main+0xa>
     276:	cd b7       	in	r28, 0x3d	; 61
     278:	de b7       	in	r29, 0x3e	; 62
	DDRB = 0xFF; // Set whole port B as output
     27a:	8f ef       	ldi	r24, 0xFF	; 255
     27c:	87 bb       	out	0x17, r24	; 23
	
	init(); // Lcd init
     27e:	6a df       	rcall	.-300    	; 0x154 <init>
	
	servo_init();
     280:	77 d0       	rcall	.+238    	; 0x370 <servo_init>
     282:	88 ee       	ldi	r24, 0xE8	; 232
	wait(1000); // Wait for the init of the servo's
     284:	93 e0       	ldi	r25, 0x03	; 3
     286:	e3 df       	rcall	.-58     	; 0x24e <wait>
     288:	83 e3       	ldi	r24, 0x33	; 51
	
	USART_Init(MYUBRR);	// Init the lrf
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	82 df       	rcall	.-252    	; 0x192 <USART_Init>
     28e:	84 e1       	ldi	r24, 0x14	; 20
	char *data = (char*) malloc(sizeof(char) * 20);
     290:	90 e0       	ldi	r25, 0x00	; 0
     292:	df d3       	rcall	.+1982   	; 0xa52 <malloc>
     294:	e8 2e       	mov	r14, r24
     296:	f9 2e       	mov	r15, r25
     298:	82 e5       	ldi	r24, 0x52	; 82
	int distance = 0;
	
	while (1)
	{	
		USART_Transmit(SINGLE_RANGE_COMMAND_A);	// Send measure command to lrf
     29a:	84 df       	rcall	.-248    	; 0x1a4 <USART_Transmit>
     29c:	8e 2d       	mov	r24, r14
		USART_Receive_String(data);	// Receive string form lrf
     29e:	9f 2d       	mov	r25, r15
     2a0:	85 df       	rcall	.-246    	; 0x1ac <USART_Receive_String>
     2a2:	8e 2d       	mov	r24, r14
     2a4:	9f 2d       	mov	r25, r15
		distance = USART_onlyNumbers(data);	// Get the distance from the string
     2a6:	97 df       	rcall	.-210    	; 0x1d6 <USART_onlyNumbers>
     2a8:	8c 01       	movw	r16, r24
     2aa:	00 97       	sbiw	r24, 0x00	; 0
     2ac:	21 f4       	brne	.+8      	; 0x2b6 <main+0x4a>
		if (distance == 0)
     2ae:	80 ed       	ldi	r24, 0xD0	; 208
     2b0:	97 e0       	ldi	r25, 0x07	; 7
		{
			wait(2000);
     2b2:	cd df       	rcall	.-102    	; 0x24e <wait>
     2b4:	f1 cf       	rjmp	.-30     	; 0x298 <main+0x2c>
     2b6:	1f 93       	push	r17
     2b8:	8f 93       	push	r24
			continue;
		}
		
		sprintf(data, "Distance: %d", distance);
     2ba:	8e e0       	ldi	r24, 0x0E	; 14
     2bc:	91 e0       	ldi	r25, 0x01	; 1
     2be:	9f 93       	push	r25
     2c0:	8f 93       	push	r24
     2c2:	ff 92       	push	r15
     2c4:	ef 92       	push	r14
     2c6:	e6 d4       	rcall	.+2508   	; 0xc94 <sprintf>
     2c8:	42 df       	rcall	.-380    	; 0x14e <clearDisplay>
		clearDisplay();
     2ca:	8e 2d       	mov	r24, r14
     2cc:	9f 2d       	mov	r25, r15
		display_text(data);	// Show the distance on the lcd
     2ce:	55 df       	rcall	.-342    	; 0x17a <display_text>
     2d0:	86 e0       	ldi	r24, 0x06	; 6
     2d2:	eb e1       	ldi	r30, 0x1B	; 27
     2d4:	f1 e0       	ldi	r31, 0x01	; 1
		
		// Get the closest zoom and focus setting from the measured distance
		int minDifference = 1000;
		struct CAMERA_SETTING settingToUse = cameraSettings[0];
     2d6:	de 01       	movw	r26, r28
     2d8:	11 96       	adiw	r26, 0x01	; 1
     2da:	01 90       	ld	r0, Z+
     2dc:	0d 92       	st	X+, r0
     2de:	8a 95       	dec	r24
     2e0:	e1 f7       	brne	.-8      	; 0x2da <main+0x6e>
     2e2:	0f 90       	pop	r0
     2e4:	0f 90       	pop	r0
     2e6:	0f 90       	pop	r0
		for (int i = 0; i < totalCameraSegments; i++)
     2e8:	0f 90       	pop	r0
     2ea:	0f 90       	pop	r0
     2ec:	0f 90       	pop	r0
     2ee:	80 e0       	ldi	r24, 0x00	; 0
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	48 ee       	ldi	r20, 0xE8	; 232
     2f4:	53 e0       	ldi	r21, 0x03	; 3
     2f6:	29 c0       	rjmp	.+82     	; 0x34a <main+0xde>
		sprintf(data, "Distance: %d", distance);
		clearDisplay();
		display_text(data);	// Show the distance on the lcd
		
		// Get the closest zoom and focus setting from the measured distance
		int minDifference = 1000;
     2f8:	fc 01       	movw	r30, r24
     2fa:	ee 0f       	add	r30, r30
		struct CAMERA_SETTING settingToUse = cameraSettings[0];
		for (int i = 0; i < totalCameraSegments; i++)
     2fc:	ff 1f       	adc	r31, r31
		{
			int difference = abs(distance - cameraSettings[i].distance);
     2fe:	e8 0f       	add	r30, r24
     300:	f9 1f       	adc	r31, r25
     302:	ee 0f       	add	r30, r30
     304:	ff 1f       	adc	r31, r31
     306:	e5 5e       	subi	r30, 0xE5	; 229
     308:	fe 4f       	sbci	r31, 0xFE	; 254
     30a:	20 81       	ld	r18, Z
     30c:	31 81       	ldd	r19, Z+1	; 0x01
     30e:	b8 01       	movw	r22, r16
     310:	62 1b       	sub	r22, r18
     312:	73 0b       	sbc	r23, r19
     314:	9b 01       	movw	r18, r22
     316:	22 f4       	brpl	.+8      	; 0x320 <main+0xb4>
     318:	22 27       	eor	r18, r18
     31a:	33 27       	eor	r19, r19
     31c:	26 1b       	sub	r18, r22
     31e:	37 0b       	sbc	r19, r23
     320:	24 17       	cp	r18, r20
     322:	35 07       	cpc	r19, r21
     324:	8c f4       	brge	.+34     	; 0x348 <main+0xdc>
			
			if (difference < minDifference)
     326:	fc 01       	movw	r30, r24
     328:	ee 0f       	add	r30, r30
     32a:	ff 1f       	adc	r31, r31
			{
				minDifference = difference;
				settingToUse = cameraSettings[i];
     32c:	e8 0f       	add	r30, r24
     32e:	f9 1f       	adc	r31, r25
     330:	ee 0f       	add	r30, r30
     332:	ff 1f       	adc	r31, r31
     334:	e5 5e       	subi	r30, 0xE5	; 229
     336:	fe 4f       	sbci	r31, 0xFE	; 254
     338:	46 e0       	ldi	r20, 0x06	; 6
     33a:	de 01       	movw	r26, r28
     33c:	11 96       	adiw	r26, 0x01	; 1
     33e:	01 90       	ld	r0, Z+
     340:	0d 92       	st	X+, r0
     342:	4a 95       	dec	r20
     344:	e1 f7       	brne	.-8      	; 0x33e <main+0xd2>
     346:	a9 01       	movw	r20, r18
     348:	01 96       	adiw	r24, 0x01	; 1
     34a:	85 30       	cpi	r24, 0x05	; 5
		{
			int difference = abs(distance - cameraSettings[i].distance);
			
			if (difference < minDifference)
			{
				minDifference = difference;
     34c:	91 05       	cpc	r25, r1
		display_text(data);	// Show the distance on the lcd
		
		// Get the closest zoom and focus setting from the measured distance
		int minDifference = 1000;
		struct CAMERA_SETTING settingToUse = cameraSettings[0];
		for (int i = 0; i < totalCameraSegments; i++)
     34e:	a4 f2       	brlt	.-88     	; 0x2f8 <main+0x8c>
     350:	8b 81       	ldd	r24, Y+3	; 0x03
     352:	9c 81       	ldd	r25, Y+4	; 0x04
     354:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <__data_end+0x1>
				minDifference = difference;
				settingToUse = cameraSettings[i];
			}
		}
		
		servo1_targetValue = settingToUse.focus; // Focus on target
     358:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end>
     35c:	8d 81       	ldd	r24, Y+5	; 0x05
     35e:	9e 81       	ldd	r25, Y+6	; 0x06
		servo2_targetValue = settingToUse.zoom;	// Zoom to target
     360:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <servo2_targetValue+0x1>
     364:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <servo2_targetValue>
     368:	88 eb       	ldi	r24, 0xB8	; 184
     36a:	9b e0       	ldi	r25, 0x0B	; 11
		
		wait(3000);	
     36c:	70 df       	rcall	.-288    	; 0x24e <wait>
     36e:	94 cf       	rjmp	.-216    	; 0x298 <main+0x2c>

00000370 <servo_init>:
	OCR1B = currentValue;
}

void servo_init()
{
	OCR1A = startValue1;		// Sets the compare value of timer 1, (this is linked to port B5)
     370:	8a ef       	ldi	r24, 0xFA	; 250
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	9b bd       	out	0x2b, r25	; 43
     376:	8a bd       	out	0x2a, r24	; 42
	OCR1B = startValue2;		// Sets the compare value of timer 1, (this is linked to port B6)
     378:	84 e1       	ldi	r24, 0x14	; 20
     37a:	95 e0       	ldi	r25, 0x05	; 5
     37c:	99 bd       	out	0x29, r25	; 41
     37e:	88 bd       	out	0x28, r24	; 40
	
	servo1_targetValue = 0;
     380:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <__data_end+0x1>
     384:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <__data_end>
	servo2_targetValue = 180;
     388:	84 eb       	ldi	r24, 0xB4	; 180
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <servo2_targetValue+0x1>
     390:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <servo2_targetValue>
	
	TIMSK |= 1<<(3);			// Turn on compare mode for channel A
     394:	87 b7       	in	r24, 0x37	; 55
     396:	88 60       	ori	r24, 0x08	; 8
     398:	87 bf       	out	0x37, r24	; 55
	TIMSK |= 1<<(4);			// Turn on compare mode for channel B
     39a:	87 b7       	in	r24, 0x37	; 55
     39c:	80 61       	ori	r24, 0x10	; 16
     39e:	87 bf       	out	0x37, r24	; 55
	sei();						// Turn on interrupt system
     3a0:	78 94       	sei
	
	ICR1 = 10000;				// Sets the upper limit to timer 1
     3a2:	80 e1       	ldi	r24, 0x10	; 16
     3a4:	97 e2       	ldi	r25, 0x27	; 39
     3a6:	97 bd       	out	0x27, r25	; 39
     3a8:	86 bd       	out	0x26, r24	; 38
	TCCR1A = 0b10100010;		// Set OC1A and OC1B as output
     3aa:	82 ea       	ldi	r24, 0xA2	; 162
     3ac:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = 0b00010010;		// fast PWM 8 bit, prescaler=8, RUN
     3ae:	82 e1       	ldi	r24, 0x12	; 18
     3b0:	8e bd       	out	0x2e, r24	; 46
     3b2:	08 95       	ret

000003b4 <map>:
}

double map(double value, int newMin, int newMax)
{
     3b4:	cf 92       	push	r12
     3b6:	df 92       	push	r13
     3b8:	ef 92       	push	r14
     3ba:	ff 92       	push	r15
     3bc:	0f 93       	push	r16
     3be:	1f 93       	push	r17
     3c0:	cf 93       	push	r28
     3c2:	df 93       	push	r29
     3c4:	8a 01       	movw	r16, r20
     3c6:	e9 01       	movw	r28, r18
	// Maps the value between two numbers: https://stackoverflow.com/questions/345187/math-mapping-numbers
	return (value - 0) / (180 - 0) * (newMax - newMin) + newMin;
     3c8:	20 e0       	ldi	r18, 0x00	; 0
     3ca:	30 e0       	ldi	r19, 0x00	; 0
     3cc:	44 e3       	ldi	r20, 0x34	; 52
     3ce:	53 e4       	ldi	r21, 0x43	; 67
     3d0:	93 d1       	rcall	.+806    	; 0x6f8 <__divsf3>
     3d2:	6b 01       	movw	r12, r22
     3d4:	7c 01       	movw	r14, r24
     3d6:	be 01       	movw	r22, r28
     3d8:	60 1b       	sub	r22, r16
     3da:	71 0b       	sbc	r23, r17
     3dc:	07 2e       	mov	r0, r23
     3de:	00 0c       	add	r0, r0
     3e0:	88 0b       	sbc	r24, r24
     3e2:	99 0b       	sbc	r25, r25
     3e4:	1f d2       	rcall	.+1086   	; 0x824 <__floatsisf>
     3e6:	a7 01       	movw	r20, r14
     3e8:	96 01       	movw	r18, r12
     3ea:	d0 d2       	rcall	.+1440   	; 0x98c <__mulsf3>
     3ec:	6b 01       	movw	r12, r22
     3ee:	7c 01       	movw	r14, r24
     3f0:	b8 01       	movw	r22, r16
     3f2:	11 0f       	add	r17, r17
     3f4:	88 0b       	sbc	r24, r24
     3f6:	99 0b       	sbc	r25, r25
     3f8:	15 d2       	rcall	.+1066   	; 0x824 <__floatsisf>
     3fa:	9b 01       	movw	r18, r22
     3fc:	ac 01       	movw	r20, r24
     3fe:	c7 01       	movw	r24, r14
     400:	b6 01       	movw	r22, r12
     402:	12 d1       	rcall	.+548    	; 0x628 <__addsf3>
     404:	df 91       	pop	r29
     406:	cf 91       	pop	r28
     408:	1f 91       	pop	r17
     40a:	0f 91       	pop	r16
     40c:	ff 90       	pop	r15
     40e:	ef 90       	pop	r14
     410:	df 90       	pop	r13
     412:	cf 90       	pop	r12
     414:	08 95       	ret

00000416 <__vector_12>:
int servo1_targetValue;
int servo2_targetValue;


ISR(TIMER1_COMPA_vect)
{
     416:	1f 92       	push	r1
     418:	0f 92       	push	r0
     41a:	0f b6       	in	r0, 0x3f	; 63
     41c:	0f 92       	push	r0
     41e:	11 24       	eor	r1, r1
     420:	0b b6       	in	r0, 0x3b	; 59
     422:	0f 92       	push	r0
     424:	8f 92       	push	r8
     426:	9f 92       	push	r9
     428:	af 92       	push	r10
     42a:	bf 92       	push	r11
     42c:	cf 92       	push	r12
     42e:	df 92       	push	r13
     430:	ef 92       	push	r14
     432:	ff 92       	push	r15
     434:	2f 93       	push	r18
     436:	3f 93       	push	r19
     438:	4f 93       	push	r20
     43a:	5f 93       	push	r21
     43c:	6f 93       	push	r22
     43e:	7f 93       	push	r23
     440:	8f 93       	push	r24
     442:	9f 93       	push	r25
     444:	af 93       	push	r26
     446:	bf 93       	push	r27
     448:	ef 93       	push	r30
     44a:	ff 93       	push	r31
	// Go slow to target value
	const float speed = 1;
	static float currentValue = startValue1;
	
	// Maps the value from 0-180 to 250-1300 (frequency of the servo)
	float targetValue = map(servo1_targetValue, 250, 1300);
     44c:	60 91 3a 01 	lds	r22, 0x013A	; 0x80013a <__data_end>
     450:	70 91 3b 01 	lds	r23, 0x013B	; 0x80013b <__data_end+0x1>
     454:	07 2e       	mov	r0, r23
     456:	00 0c       	add	r0, r0
     458:	88 0b       	sbc	r24, r24
     45a:	99 0b       	sbc	r25, r25
     45c:	e3 d1       	rcall	.+966    	; 0x824 <__floatsisf>
     45e:	24 e1       	ldi	r18, 0x14	; 20
     460:	35 e0       	ldi	r19, 0x05	; 5
     462:	4a ef       	ldi	r20, 0xFA	; 250
     464:	50 e0       	ldi	r21, 0x00	; 0
     466:	a6 df       	rcall	.-180    	; 0x3b4 <map>
     468:	4b 01       	movw	r8, r22
     46a:	5c 01       	movw	r10, r24
	
	if (currentValue < targetValue)
     46c:	c0 90 0a 01 	lds	r12, 0x010A	; 0x80010a <currentValue.1948>
     470:	d0 90 0b 01 	lds	r13, 0x010B	; 0x80010b <currentValue.1948+0x1>
     474:	e0 90 0c 01 	lds	r14, 0x010C	; 0x80010c <currentValue.1948+0x2>
     478:	f0 90 0d 01 	lds	r15, 0x010D	; 0x80010d <currentValue.1948+0x3>
     47c:	a7 01       	movw	r20, r14
     47e:	96 01       	movw	r18, r12
     480:	81 d2       	rcall	.+1282   	; 0x984 <__gesf2>
     482:	18 16       	cp	r1, r24
     484:	84 f4       	brge	.+32     	; 0x4a6 <__vector_12+0x90>
	currentValue += speed;
     486:	20 e0       	ldi	r18, 0x00	; 0
     488:	30 e0       	ldi	r19, 0x00	; 0
     48a:	40 e8       	ldi	r20, 0x80	; 128
     48c:	5f e3       	ldi	r21, 0x3F	; 63
     48e:	c7 01       	movw	r24, r14
     490:	b6 01       	movw	r22, r12
     492:	ca d0       	rcall	.+404    	; 0x628 <__addsf3>
     494:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <currentValue.1948>
     498:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <currentValue.1948+0x1>
     49c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <currentValue.1948+0x2>
     4a0:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <currentValue.1948+0x3>
     4a4:	16 c0       	rjmp	.+44     	; 0x4d2 <__vector_12+0xbc>
	else if (currentValue > targetValue)
     4a6:	a7 01       	movw	r20, r14
     4a8:	96 01       	movw	r18, r12
     4aa:	c5 01       	movw	r24, r10
     4ac:	b4 01       	movw	r22, r8
     4ae:	20 d1       	rcall	.+576    	; 0x6f0 <__cmpsf2>
     4b0:	88 23       	and	r24, r24
     4b2:	7c f4       	brge	.+30     	; 0x4d2 <__vector_12+0xbc>
	currentValue -= speed;
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	30 e0       	ldi	r19, 0x00	; 0
     4b8:	40 e8       	ldi	r20, 0x80	; 128
     4ba:	5f e3       	ldi	r21, 0x3F	; 63
     4bc:	c7 01       	movw	r24, r14
     4be:	b6 01       	movw	r22, r12
     4c0:	b2 d0       	rcall	.+356    	; 0x626 <__subsf3>
     4c2:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <currentValue.1948>
     4c6:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <currentValue.1948+0x1>
     4ca:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <currentValue.1948+0x2>
     4ce:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <currentValue.1948+0x3>
	
	OCR1A = currentValue;
     4d2:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <currentValue.1948>
     4d6:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <currentValue.1948+0x1>
     4da:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <currentValue.1948+0x2>
     4de:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <currentValue.1948+0x3>
     4e2:	72 d1       	rcall	.+740    	; 0x7c8 <__fixunssfsi>
     4e4:	7b bd       	out	0x2b, r23	; 43
     4e6:	6a bd       	out	0x2a, r22	; 42
}
     4e8:	ff 91       	pop	r31
     4ea:	ef 91       	pop	r30
     4ec:	bf 91       	pop	r27
     4ee:	af 91       	pop	r26
     4f0:	9f 91       	pop	r25
     4f2:	8f 91       	pop	r24
     4f4:	7f 91       	pop	r23
     4f6:	6f 91       	pop	r22
     4f8:	5f 91       	pop	r21
     4fa:	4f 91       	pop	r20
     4fc:	3f 91       	pop	r19
     4fe:	2f 91       	pop	r18
     500:	ff 90       	pop	r15
     502:	ef 90       	pop	r14
     504:	df 90       	pop	r13
     506:	cf 90       	pop	r12
     508:	bf 90       	pop	r11
     50a:	af 90       	pop	r10
     50c:	9f 90       	pop	r9
     50e:	8f 90       	pop	r8
     510:	0f 90       	pop	r0
     512:	0b be       	out	0x3b, r0	; 59
     514:	0f 90       	pop	r0
     516:	0f be       	out	0x3f, r0	; 63
     518:	0f 90       	pop	r0
     51a:	1f 90       	pop	r1
     51c:	18 95       	reti

0000051e <__vector_13>:

ISR(TIMER1_COMPB_vect)
{
     51e:	1f 92       	push	r1
     520:	0f 92       	push	r0
     522:	0f b6       	in	r0, 0x3f	; 63
     524:	0f 92       	push	r0
     526:	11 24       	eor	r1, r1
     528:	0b b6       	in	r0, 0x3b	; 59
     52a:	0f 92       	push	r0
     52c:	8f 92       	push	r8
     52e:	9f 92       	push	r9
     530:	af 92       	push	r10
     532:	bf 92       	push	r11
     534:	cf 92       	push	r12
     536:	df 92       	push	r13
     538:	ef 92       	push	r14
     53a:	ff 92       	push	r15
     53c:	2f 93       	push	r18
     53e:	3f 93       	push	r19
     540:	4f 93       	push	r20
     542:	5f 93       	push	r21
     544:	6f 93       	push	r22
     546:	7f 93       	push	r23
     548:	8f 93       	push	r24
     54a:	9f 93       	push	r25
     54c:	af 93       	push	r26
     54e:	bf 93       	push	r27
     550:	ef 93       	push	r30
     552:	ff 93       	push	r31
	// Go slow to target value
	const float speed = 1;
	static float currentValue = startValue2;
	
	// Maps the value from 0-180 to 250-1300 (frequency of the servo)
	float targetValue = map(servo2_targetValue, 250, 1300);
     554:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <servo2_targetValue>
     558:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <servo2_targetValue+0x1>
     55c:	07 2e       	mov	r0, r23
     55e:	00 0c       	add	r0, r0
     560:	88 0b       	sbc	r24, r24
     562:	99 0b       	sbc	r25, r25
     564:	5f d1       	rcall	.+702    	; 0x824 <__floatsisf>
     566:	24 e1       	ldi	r18, 0x14	; 20
     568:	35 e0       	ldi	r19, 0x05	; 5
     56a:	4a ef       	ldi	r20, 0xFA	; 250
     56c:	50 e0       	ldi	r21, 0x00	; 0
     56e:	22 df       	rcall	.-444    	; 0x3b4 <map>
     570:	4b 01       	movw	r8, r22
     572:	5c 01       	movw	r10, r24
	
	if (currentValue < targetValue)
     574:	c0 90 06 01 	lds	r12, 0x0106	; 0x800106 <currentValue.1956>
     578:	d0 90 07 01 	lds	r13, 0x0107	; 0x800107 <currentValue.1956+0x1>
     57c:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <currentValue.1956+0x2>
     580:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <currentValue.1956+0x3>
     584:	a7 01       	movw	r20, r14
     586:	96 01       	movw	r18, r12
     588:	fd d1       	rcall	.+1018   	; 0x984 <__gesf2>
     58a:	18 16       	cp	r1, r24
     58c:	84 f4       	brge	.+32     	; 0x5ae <__vector_13+0x90>
	currentValue += speed;
     58e:	20 e0       	ldi	r18, 0x00	; 0
     590:	30 e0       	ldi	r19, 0x00	; 0
     592:	40 e8       	ldi	r20, 0x80	; 128
     594:	5f e3       	ldi	r21, 0x3F	; 63
     596:	c7 01       	movw	r24, r14
     598:	b6 01       	movw	r22, r12
     59a:	46 d0       	rcall	.+140    	; 0x628 <__addsf3>
     59c:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <currentValue.1956>
     5a0:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <currentValue.1956+0x1>
     5a4:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <currentValue.1956+0x2>
     5a8:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <currentValue.1956+0x3>
     5ac:	16 c0       	rjmp	.+44     	; 0x5da <__vector_13+0xbc>
	else if (currentValue > targetValue)
     5ae:	a7 01       	movw	r20, r14
     5b0:	96 01       	movw	r18, r12
     5b2:	c5 01       	movw	r24, r10
     5b4:	b4 01       	movw	r22, r8
     5b6:	9c d0       	rcall	.+312    	; 0x6f0 <__cmpsf2>
     5b8:	88 23       	and	r24, r24
     5ba:	7c f4       	brge	.+30     	; 0x5da <__vector_13+0xbc>
	currentValue -= speed;
     5bc:	20 e0       	ldi	r18, 0x00	; 0
     5be:	30 e0       	ldi	r19, 0x00	; 0
     5c0:	40 e8       	ldi	r20, 0x80	; 128
     5c2:	5f e3       	ldi	r21, 0x3F	; 63
     5c4:	c7 01       	movw	r24, r14
     5c6:	b6 01       	movw	r22, r12
     5c8:	2e d0       	rcall	.+92     	; 0x626 <__subsf3>
     5ca:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <currentValue.1956>
     5ce:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <currentValue.1956+0x1>
     5d2:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <currentValue.1956+0x2>
     5d6:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <currentValue.1956+0x3>
	
	OCR1B = currentValue;
     5da:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <currentValue.1956>
     5de:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <currentValue.1956+0x1>
     5e2:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <currentValue.1956+0x2>
     5e6:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <currentValue.1956+0x3>
     5ea:	ee d0       	rcall	.+476    	; 0x7c8 <__fixunssfsi>
     5ec:	79 bd       	out	0x29, r23	; 41
     5ee:	68 bd       	out	0x28, r22	; 40
}
     5f0:	ff 91       	pop	r31
     5f2:	ef 91       	pop	r30
     5f4:	bf 91       	pop	r27
     5f6:	af 91       	pop	r26
     5f8:	9f 91       	pop	r25
     5fa:	8f 91       	pop	r24
     5fc:	7f 91       	pop	r23
     5fe:	6f 91       	pop	r22
     600:	5f 91       	pop	r21
     602:	4f 91       	pop	r20
     604:	3f 91       	pop	r19
     606:	2f 91       	pop	r18
     608:	ff 90       	pop	r15
     60a:	ef 90       	pop	r14
     60c:	df 90       	pop	r13
     60e:	cf 90       	pop	r12
     610:	bf 90       	pop	r11
     612:	af 90       	pop	r10
     614:	9f 90       	pop	r9
     616:	8f 90       	pop	r8
     618:	0f 90       	pop	r0
     61a:	0b be       	out	0x3b, r0	; 59
     61c:	0f 90       	pop	r0
     61e:	0f be       	out	0x3f, r0	; 63
     620:	0f 90       	pop	r0
     622:	1f 90       	pop	r1
     624:	18 95       	reti

00000626 <__subsf3>:
     626:	50 58       	subi	r21, 0x80	; 128

00000628 <__addsf3>:
     628:	bb 27       	eor	r27, r27
     62a:	aa 27       	eor	r26, r26
     62c:	0e d0       	rcall	.+28     	; 0x64a <__addsf3x>
     62e:	70 c1       	rjmp	.+736    	; 0x910 <__fp_round>
     630:	61 d1       	rcall	.+706    	; 0x8f4 <__fp_pscA>
     632:	30 f0       	brcs	.+12     	; 0x640 <__addsf3+0x18>
     634:	66 d1       	rcall	.+716    	; 0x902 <__fp_pscB>
     636:	20 f0       	brcs	.+8      	; 0x640 <__addsf3+0x18>
     638:	31 f4       	brne	.+12     	; 0x646 <__addsf3+0x1e>
     63a:	9f 3f       	cpi	r25, 0xFF	; 255
     63c:	11 f4       	brne	.+4      	; 0x642 <__addsf3+0x1a>
     63e:	1e f4       	brtc	.+6      	; 0x646 <__addsf3+0x1e>
     640:	56 c1       	rjmp	.+684    	; 0x8ee <__fp_nan>
     642:	0e f4       	brtc	.+2      	; 0x646 <__addsf3+0x1e>
     644:	e0 95       	com	r30
     646:	e7 fb       	bst	r30, 7
     648:	4c c1       	rjmp	.+664    	; 0x8e2 <__fp_inf>

0000064a <__addsf3x>:
     64a:	e9 2f       	mov	r30, r25
     64c:	72 d1       	rcall	.+740    	; 0x932 <__fp_split3>
     64e:	80 f3       	brcs	.-32     	; 0x630 <__addsf3+0x8>
     650:	ba 17       	cp	r27, r26
     652:	62 07       	cpc	r22, r18
     654:	73 07       	cpc	r23, r19
     656:	84 07       	cpc	r24, r20
     658:	95 07       	cpc	r25, r21
     65a:	18 f0       	brcs	.+6      	; 0x662 <__addsf3x+0x18>
     65c:	71 f4       	brne	.+28     	; 0x67a <__addsf3x+0x30>
     65e:	9e f5       	brtc	.+102    	; 0x6c6 <__addsf3x+0x7c>
     660:	8a c1       	rjmp	.+788    	; 0x976 <__fp_zero>
     662:	0e f4       	brtc	.+2      	; 0x666 <__addsf3x+0x1c>
     664:	e0 95       	com	r30
     666:	0b 2e       	mov	r0, r27
     668:	ba 2f       	mov	r27, r26
     66a:	a0 2d       	mov	r26, r0
     66c:	0b 01       	movw	r0, r22
     66e:	b9 01       	movw	r22, r18
     670:	90 01       	movw	r18, r0
     672:	0c 01       	movw	r0, r24
     674:	ca 01       	movw	r24, r20
     676:	a0 01       	movw	r20, r0
     678:	11 24       	eor	r1, r1
     67a:	ff 27       	eor	r31, r31
     67c:	59 1b       	sub	r21, r25
     67e:	99 f0       	breq	.+38     	; 0x6a6 <__addsf3x+0x5c>
     680:	59 3f       	cpi	r21, 0xF9	; 249
     682:	50 f4       	brcc	.+20     	; 0x698 <__addsf3x+0x4e>
     684:	50 3e       	cpi	r21, 0xE0	; 224
     686:	68 f1       	brcs	.+90     	; 0x6e2 <__addsf3x+0x98>
     688:	1a 16       	cp	r1, r26
     68a:	f0 40       	sbci	r31, 0x00	; 0
     68c:	a2 2f       	mov	r26, r18
     68e:	23 2f       	mov	r18, r19
     690:	34 2f       	mov	r19, r20
     692:	44 27       	eor	r20, r20
     694:	58 5f       	subi	r21, 0xF8	; 248
     696:	f3 cf       	rjmp	.-26     	; 0x67e <__addsf3x+0x34>
     698:	46 95       	lsr	r20
     69a:	37 95       	ror	r19
     69c:	27 95       	ror	r18
     69e:	a7 95       	ror	r26
     6a0:	f0 40       	sbci	r31, 0x00	; 0
     6a2:	53 95       	inc	r21
     6a4:	c9 f7       	brne	.-14     	; 0x698 <__addsf3x+0x4e>
     6a6:	7e f4       	brtc	.+30     	; 0x6c6 <__addsf3x+0x7c>
     6a8:	1f 16       	cp	r1, r31
     6aa:	ba 0b       	sbc	r27, r26
     6ac:	62 0b       	sbc	r22, r18
     6ae:	73 0b       	sbc	r23, r19
     6b0:	84 0b       	sbc	r24, r20
     6b2:	ba f0       	brmi	.+46     	; 0x6e2 <__addsf3x+0x98>
     6b4:	91 50       	subi	r25, 0x01	; 1
     6b6:	a1 f0       	breq	.+40     	; 0x6e0 <__addsf3x+0x96>
     6b8:	ff 0f       	add	r31, r31
     6ba:	bb 1f       	adc	r27, r27
     6bc:	66 1f       	adc	r22, r22
     6be:	77 1f       	adc	r23, r23
     6c0:	88 1f       	adc	r24, r24
     6c2:	c2 f7       	brpl	.-16     	; 0x6b4 <__addsf3x+0x6a>
     6c4:	0e c0       	rjmp	.+28     	; 0x6e2 <__addsf3x+0x98>
     6c6:	ba 0f       	add	r27, r26
     6c8:	62 1f       	adc	r22, r18
     6ca:	73 1f       	adc	r23, r19
     6cc:	84 1f       	adc	r24, r20
     6ce:	48 f4       	brcc	.+18     	; 0x6e2 <__addsf3x+0x98>
     6d0:	87 95       	ror	r24
     6d2:	77 95       	ror	r23
     6d4:	67 95       	ror	r22
     6d6:	b7 95       	ror	r27
     6d8:	f7 95       	ror	r31
     6da:	9e 3f       	cpi	r25, 0xFE	; 254
     6dc:	08 f0       	brcs	.+2      	; 0x6e0 <__addsf3x+0x96>
     6de:	b3 cf       	rjmp	.-154    	; 0x646 <__addsf3+0x1e>
     6e0:	93 95       	inc	r25
     6e2:	88 0f       	add	r24, r24
     6e4:	08 f0       	brcs	.+2      	; 0x6e8 <__addsf3x+0x9e>
     6e6:	99 27       	eor	r25, r25
     6e8:	ee 0f       	add	r30, r30
     6ea:	97 95       	ror	r25
     6ec:	87 95       	ror	r24
     6ee:	08 95       	ret

000006f0 <__cmpsf2>:
     6f0:	d4 d0       	rcall	.+424    	; 0x89a <__fp_cmp>
     6f2:	08 f4       	brcc	.+2      	; 0x6f6 <__cmpsf2+0x6>
     6f4:	81 e0       	ldi	r24, 0x01	; 1
     6f6:	08 95       	ret

000006f8 <__divsf3>:
     6f8:	0c d0       	rcall	.+24     	; 0x712 <__divsf3x>
     6fa:	0a c1       	rjmp	.+532    	; 0x910 <__fp_round>
     6fc:	02 d1       	rcall	.+516    	; 0x902 <__fp_pscB>
     6fe:	40 f0       	brcs	.+16     	; 0x710 <__divsf3+0x18>
     700:	f9 d0       	rcall	.+498    	; 0x8f4 <__fp_pscA>
     702:	30 f0       	brcs	.+12     	; 0x710 <__divsf3+0x18>
     704:	21 f4       	brne	.+8      	; 0x70e <__divsf3+0x16>
     706:	5f 3f       	cpi	r21, 0xFF	; 255
     708:	19 f0       	breq	.+6      	; 0x710 <__divsf3+0x18>
     70a:	eb c0       	rjmp	.+470    	; 0x8e2 <__fp_inf>
     70c:	51 11       	cpse	r21, r1
     70e:	34 c1       	rjmp	.+616    	; 0x978 <__fp_szero>
     710:	ee c0       	rjmp	.+476    	; 0x8ee <__fp_nan>

00000712 <__divsf3x>:
     712:	0f d1       	rcall	.+542    	; 0x932 <__fp_split3>
     714:	98 f3       	brcs	.-26     	; 0x6fc <__divsf3+0x4>

00000716 <__divsf3_pse>:
     716:	99 23       	and	r25, r25
     718:	c9 f3       	breq	.-14     	; 0x70c <__divsf3+0x14>
     71a:	55 23       	and	r21, r21
     71c:	b1 f3       	breq	.-20     	; 0x70a <__divsf3+0x12>
     71e:	95 1b       	sub	r25, r21
     720:	55 0b       	sbc	r21, r21
     722:	bb 27       	eor	r27, r27
     724:	aa 27       	eor	r26, r26
     726:	62 17       	cp	r22, r18
     728:	73 07       	cpc	r23, r19
     72a:	84 07       	cpc	r24, r20
     72c:	38 f0       	brcs	.+14     	; 0x73c <__divsf3_pse+0x26>
     72e:	9f 5f       	subi	r25, 0xFF	; 255
     730:	5f 4f       	sbci	r21, 0xFF	; 255
     732:	22 0f       	add	r18, r18
     734:	33 1f       	adc	r19, r19
     736:	44 1f       	adc	r20, r20
     738:	aa 1f       	adc	r26, r26
     73a:	a9 f3       	breq	.-22     	; 0x726 <__divsf3_pse+0x10>
     73c:	33 d0       	rcall	.+102    	; 0x7a4 <__divsf3_pse+0x8e>
     73e:	0e 2e       	mov	r0, r30
     740:	3a f0       	brmi	.+14     	; 0x750 <__divsf3_pse+0x3a>
     742:	e0 e8       	ldi	r30, 0x80	; 128
     744:	30 d0       	rcall	.+96     	; 0x7a6 <__divsf3_pse+0x90>
     746:	91 50       	subi	r25, 0x01	; 1
     748:	50 40       	sbci	r21, 0x00	; 0
     74a:	e6 95       	lsr	r30
     74c:	00 1c       	adc	r0, r0
     74e:	ca f7       	brpl	.-14     	; 0x742 <__divsf3_pse+0x2c>
     750:	29 d0       	rcall	.+82     	; 0x7a4 <__divsf3_pse+0x8e>
     752:	fe 2f       	mov	r31, r30
     754:	27 d0       	rcall	.+78     	; 0x7a4 <__divsf3_pse+0x8e>
     756:	66 0f       	add	r22, r22
     758:	77 1f       	adc	r23, r23
     75a:	88 1f       	adc	r24, r24
     75c:	bb 1f       	adc	r27, r27
     75e:	26 17       	cp	r18, r22
     760:	37 07       	cpc	r19, r23
     762:	48 07       	cpc	r20, r24
     764:	ab 07       	cpc	r26, r27
     766:	b0 e8       	ldi	r27, 0x80	; 128
     768:	09 f0       	breq	.+2      	; 0x76c <__divsf3_pse+0x56>
     76a:	bb 0b       	sbc	r27, r27
     76c:	80 2d       	mov	r24, r0
     76e:	bf 01       	movw	r22, r30
     770:	ff 27       	eor	r31, r31
     772:	93 58       	subi	r25, 0x83	; 131
     774:	5f 4f       	sbci	r21, 0xFF	; 255
     776:	2a f0       	brmi	.+10     	; 0x782 <__divsf3_pse+0x6c>
     778:	9e 3f       	cpi	r25, 0xFE	; 254
     77a:	51 05       	cpc	r21, r1
     77c:	68 f0       	brcs	.+26     	; 0x798 <__divsf3_pse+0x82>
     77e:	b1 c0       	rjmp	.+354    	; 0x8e2 <__fp_inf>
     780:	fb c0       	rjmp	.+502    	; 0x978 <__fp_szero>
     782:	5f 3f       	cpi	r21, 0xFF	; 255
     784:	ec f3       	brlt	.-6      	; 0x780 <__divsf3_pse+0x6a>
     786:	98 3e       	cpi	r25, 0xE8	; 232
     788:	dc f3       	brlt	.-10     	; 0x780 <__divsf3_pse+0x6a>
     78a:	86 95       	lsr	r24
     78c:	77 95       	ror	r23
     78e:	67 95       	ror	r22
     790:	b7 95       	ror	r27
     792:	f7 95       	ror	r31
     794:	9f 5f       	subi	r25, 0xFF	; 255
     796:	c9 f7       	brne	.-14     	; 0x78a <__divsf3_pse+0x74>
     798:	88 0f       	add	r24, r24
     79a:	91 1d       	adc	r25, r1
     79c:	96 95       	lsr	r25
     79e:	87 95       	ror	r24
     7a0:	97 f9       	bld	r25, 7
     7a2:	08 95       	ret
     7a4:	e1 e0       	ldi	r30, 0x01	; 1
     7a6:	66 0f       	add	r22, r22
     7a8:	77 1f       	adc	r23, r23
     7aa:	88 1f       	adc	r24, r24
     7ac:	bb 1f       	adc	r27, r27
     7ae:	62 17       	cp	r22, r18
     7b0:	73 07       	cpc	r23, r19
     7b2:	84 07       	cpc	r24, r20
     7b4:	ba 07       	cpc	r27, r26
     7b6:	20 f0       	brcs	.+8      	; 0x7c0 <__divsf3_pse+0xaa>
     7b8:	62 1b       	sub	r22, r18
     7ba:	73 0b       	sbc	r23, r19
     7bc:	84 0b       	sbc	r24, r20
     7be:	ba 0b       	sbc	r27, r26
     7c0:	ee 1f       	adc	r30, r30
     7c2:	88 f7       	brcc	.-30     	; 0x7a6 <__divsf3_pse+0x90>
     7c4:	e0 95       	com	r30
     7c6:	08 95       	ret

000007c8 <__fixunssfsi>:
     7c8:	bc d0       	rcall	.+376    	; 0x942 <__fp_splitA>
     7ca:	88 f0       	brcs	.+34     	; 0x7ee <__fixunssfsi+0x26>
     7cc:	9f 57       	subi	r25, 0x7F	; 127
     7ce:	90 f0       	brcs	.+36     	; 0x7f4 <__fixunssfsi+0x2c>
     7d0:	b9 2f       	mov	r27, r25
     7d2:	99 27       	eor	r25, r25
     7d4:	b7 51       	subi	r27, 0x17	; 23
     7d6:	a0 f0       	brcs	.+40     	; 0x800 <__fixunssfsi+0x38>
     7d8:	d1 f0       	breq	.+52     	; 0x80e <__fixunssfsi+0x46>
     7da:	66 0f       	add	r22, r22
     7dc:	77 1f       	adc	r23, r23
     7de:	88 1f       	adc	r24, r24
     7e0:	99 1f       	adc	r25, r25
     7e2:	1a f0       	brmi	.+6      	; 0x7ea <__fixunssfsi+0x22>
     7e4:	ba 95       	dec	r27
     7e6:	c9 f7       	brne	.-14     	; 0x7da <__fixunssfsi+0x12>
     7e8:	12 c0       	rjmp	.+36     	; 0x80e <__fixunssfsi+0x46>
     7ea:	b1 30       	cpi	r27, 0x01	; 1
     7ec:	81 f0       	breq	.+32     	; 0x80e <__fixunssfsi+0x46>
     7ee:	c3 d0       	rcall	.+390    	; 0x976 <__fp_zero>
     7f0:	b1 e0       	ldi	r27, 0x01	; 1
     7f2:	08 95       	ret
     7f4:	c0 c0       	rjmp	.+384    	; 0x976 <__fp_zero>
     7f6:	67 2f       	mov	r22, r23
     7f8:	78 2f       	mov	r23, r24
     7fa:	88 27       	eor	r24, r24
     7fc:	b8 5f       	subi	r27, 0xF8	; 248
     7fe:	39 f0       	breq	.+14     	; 0x80e <__fixunssfsi+0x46>
     800:	b9 3f       	cpi	r27, 0xF9	; 249
     802:	cc f3       	brlt	.-14     	; 0x7f6 <__fixunssfsi+0x2e>
     804:	86 95       	lsr	r24
     806:	77 95       	ror	r23
     808:	67 95       	ror	r22
     80a:	b3 95       	inc	r27
     80c:	d9 f7       	brne	.-10     	; 0x804 <__fixunssfsi+0x3c>
     80e:	3e f4       	brtc	.+14     	; 0x81e <__fixunssfsi+0x56>
     810:	90 95       	com	r25
     812:	80 95       	com	r24
     814:	70 95       	com	r23
     816:	61 95       	neg	r22
     818:	7f 4f       	sbci	r23, 0xFF	; 255
     81a:	8f 4f       	sbci	r24, 0xFF	; 255
     81c:	9f 4f       	sbci	r25, 0xFF	; 255
     81e:	08 95       	ret

00000820 <__floatunsisf>:
     820:	e8 94       	clt
     822:	09 c0       	rjmp	.+18     	; 0x836 <__floatsisf+0x12>

00000824 <__floatsisf>:
     824:	97 fb       	bst	r25, 7
     826:	3e f4       	brtc	.+14     	; 0x836 <__floatsisf+0x12>
     828:	90 95       	com	r25
     82a:	80 95       	com	r24
     82c:	70 95       	com	r23
     82e:	61 95       	neg	r22
     830:	7f 4f       	sbci	r23, 0xFF	; 255
     832:	8f 4f       	sbci	r24, 0xFF	; 255
     834:	9f 4f       	sbci	r25, 0xFF	; 255
     836:	99 23       	and	r25, r25
     838:	a9 f0       	breq	.+42     	; 0x864 <__floatsisf+0x40>
     83a:	f9 2f       	mov	r31, r25
     83c:	96 e9       	ldi	r25, 0x96	; 150
     83e:	bb 27       	eor	r27, r27
     840:	93 95       	inc	r25
     842:	f6 95       	lsr	r31
     844:	87 95       	ror	r24
     846:	77 95       	ror	r23
     848:	67 95       	ror	r22
     84a:	b7 95       	ror	r27
     84c:	f1 11       	cpse	r31, r1
     84e:	f8 cf       	rjmp	.-16     	; 0x840 <__floatsisf+0x1c>
     850:	fa f4       	brpl	.+62     	; 0x890 <__floatsisf+0x6c>
     852:	bb 0f       	add	r27, r27
     854:	11 f4       	brne	.+4      	; 0x85a <__floatsisf+0x36>
     856:	60 ff       	sbrs	r22, 0
     858:	1b c0       	rjmp	.+54     	; 0x890 <__floatsisf+0x6c>
     85a:	6f 5f       	subi	r22, 0xFF	; 255
     85c:	7f 4f       	sbci	r23, 0xFF	; 255
     85e:	8f 4f       	sbci	r24, 0xFF	; 255
     860:	9f 4f       	sbci	r25, 0xFF	; 255
     862:	16 c0       	rjmp	.+44     	; 0x890 <__floatsisf+0x6c>
     864:	88 23       	and	r24, r24
     866:	11 f0       	breq	.+4      	; 0x86c <__floatsisf+0x48>
     868:	96 e9       	ldi	r25, 0x96	; 150
     86a:	11 c0       	rjmp	.+34     	; 0x88e <__floatsisf+0x6a>
     86c:	77 23       	and	r23, r23
     86e:	21 f0       	breq	.+8      	; 0x878 <__floatsisf+0x54>
     870:	9e e8       	ldi	r25, 0x8E	; 142
     872:	87 2f       	mov	r24, r23
     874:	76 2f       	mov	r23, r22
     876:	05 c0       	rjmp	.+10     	; 0x882 <__floatsisf+0x5e>
     878:	66 23       	and	r22, r22
     87a:	71 f0       	breq	.+28     	; 0x898 <__floatsisf+0x74>
     87c:	96 e8       	ldi	r25, 0x86	; 134
     87e:	86 2f       	mov	r24, r22
     880:	70 e0       	ldi	r23, 0x00	; 0
     882:	60 e0       	ldi	r22, 0x00	; 0
     884:	2a f0       	brmi	.+10     	; 0x890 <__floatsisf+0x6c>
     886:	9a 95       	dec	r25
     888:	66 0f       	add	r22, r22
     88a:	77 1f       	adc	r23, r23
     88c:	88 1f       	adc	r24, r24
     88e:	da f7       	brpl	.-10     	; 0x886 <__floatsisf+0x62>
     890:	88 0f       	add	r24, r24
     892:	96 95       	lsr	r25
     894:	87 95       	ror	r24
     896:	97 f9       	bld	r25, 7
     898:	08 95       	ret

0000089a <__fp_cmp>:
     89a:	99 0f       	add	r25, r25
     89c:	00 08       	sbc	r0, r0
     89e:	55 0f       	add	r21, r21
     8a0:	aa 0b       	sbc	r26, r26
     8a2:	e0 e8       	ldi	r30, 0x80	; 128
     8a4:	fe ef       	ldi	r31, 0xFE	; 254
     8a6:	16 16       	cp	r1, r22
     8a8:	17 06       	cpc	r1, r23
     8aa:	e8 07       	cpc	r30, r24
     8ac:	f9 07       	cpc	r31, r25
     8ae:	c0 f0       	brcs	.+48     	; 0x8e0 <__fp_cmp+0x46>
     8b0:	12 16       	cp	r1, r18
     8b2:	13 06       	cpc	r1, r19
     8b4:	e4 07       	cpc	r30, r20
     8b6:	f5 07       	cpc	r31, r21
     8b8:	98 f0       	brcs	.+38     	; 0x8e0 <__fp_cmp+0x46>
     8ba:	62 1b       	sub	r22, r18
     8bc:	73 0b       	sbc	r23, r19
     8be:	84 0b       	sbc	r24, r20
     8c0:	95 0b       	sbc	r25, r21
     8c2:	39 f4       	brne	.+14     	; 0x8d2 <__fp_cmp+0x38>
     8c4:	0a 26       	eor	r0, r26
     8c6:	61 f0       	breq	.+24     	; 0x8e0 <__fp_cmp+0x46>
     8c8:	23 2b       	or	r18, r19
     8ca:	24 2b       	or	r18, r20
     8cc:	25 2b       	or	r18, r21
     8ce:	21 f4       	brne	.+8      	; 0x8d8 <__fp_cmp+0x3e>
     8d0:	08 95       	ret
     8d2:	0a 26       	eor	r0, r26
     8d4:	09 f4       	brne	.+2      	; 0x8d8 <__fp_cmp+0x3e>
     8d6:	a1 40       	sbci	r26, 0x01	; 1
     8d8:	a6 95       	lsr	r26
     8da:	8f ef       	ldi	r24, 0xFF	; 255
     8dc:	81 1d       	adc	r24, r1
     8de:	81 1d       	adc	r24, r1
     8e0:	08 95       	ret

000008e2 <__fp_inf>:
     8e2:	97 f9       	bld	r25, 7
     8e4:	9f 67       	ori	r25, 0x7F	; 127
     8e6:	80 e8       	ldi	r24, 0x80	; 128
     8e8:	70 e0       	ldi	r23, 0x00	; 0
     8ea:	60 e0       	ldi	r22, 0x00	; 0
     8ec:	08 95       	ret

000008ee <__fp_nan>:
     8ee:	9f ef       	ldi	r25, 0xFF	; 255
     8f0:	80 ec       	ldi	r24, 0xC0	; 192
     8f2:	08 95       	ret

000008f4 <__fp_pscA>:
     8f4:	00 24       	eor	r0, r0
     8f6:	0a 94       	dec	r0
     8f8:	16 16       	cp	r1, r22
     8fa:	17 06       	cpc	r1, r23
     8fc:	18 06       	cpc	r1, r24
     8fe:	09 06       	cpc	r0, r25
     900:	08 95       	ret

00000902 <__fp_pscB>:
     902:	00 24       	eor	r0, r0
     904:	0a 94       	dec	r0
     906:	12 16       	cp	r1, r18
     908:	13 06       	cpc	r1, r19
     90a:	14 06       	cpc	r1, r20
     90c:	05 06       	cpc	r0, r21
     90e:	08 95       	ret

00000910 <__fp_round>:
     910:	09 2e       	mov	r0, r25
     912:	03 94       	inc	r0
     914:	00 0c       	add	r0, r0
     916:	11 f4       	brne	.+4      	; 0x91c <__fp_round+0xc>
     918:	88 23       	and	r24, r24
     91a:	52 f0       	brmi	.+20     	; 0x930 <__fp_round+0x20>
     91c:	bb 0f       	add	r27, r27
     91e:	40 f4       	brcc	.+16     	; 0x930 <__fp_round+0x20>
     920:	bf 2b       	or	r27, r31
     922:	11 f4       	brne	.+4      	; 0x928 <__fp_round+0x18>
     924:	60 ff       	sbrs	r22, 0
     926:	04 c0       	rjmp	.+8      	; 0x930 <__fp_round+0x20>
     928:	6f 5f       	subi	r22, 0xFF	; 255
     92a:	7f 4f       	sbci	r23, 0xFF	; 255
     92c:	8f 4f       	sbci	r24, 0xFF	; 255
     92e:	9f 4f       	sbci	r25, 0xFF	; 255
     930:	08 95       	ret

00000932 <__fp_split3>:
     932:	57 fd       	sbrc	r21, 7
     934:	90 58       	subi	r25, 0x80	; 128
     936:	44 0f       	add	r20, r20
     938:	55 1f       	adc	r21, r21
     93a:	59 f0       	breq	.+22     	; 0x952 <__fp_splitA+0x10>
     93c:	5f 3f       	cpi	r21, 0xFF	; 255
     93e:	71 f0       	breq	.+28     	; 0x95c <__fp_splitA+0x1a>
     940:	47 95       	ror	r20

00000942 <__fp_splitA>:
     942:	88 0f       	add	r24, r24
     944:	97 fb       	bst	r25, 7
     946:	99 1f       	adc	r25, r25
     948:	61 f0       	breq	.+24     	; 0x962 <__fp_splitA+0x20>
     94a:	9f 3f       	cpi	r25, 0xFF	; 255
     94c:	79 f0       	breq	.+30     	; 0x96c <__fp_splitA+0x2a>
     94e:	87 95       	ror	r24
     950:	08 95       	ret
     952:	12 16       	cp	r1, r18
     954:	13 06       	cpc	r1, r19
     956:	14 06       	cpc	r1, r20
     958:	55 1f       	adc	r21, r21
     95a:	f2 cf       	rjmp	.-28     	; 0x940 <__fp_split3+0xe>
     95c:	46 95       	lsr	r20
     95e:	f1 df       	rcall	.-30     	; 0x942 <__fp_splitA>
     960:	08 c0       	rjmp	.+16     	; 0x972 <__fp_splitA+0x30>
     962:	16 16       	cp	r1, r22
     964:	17 06       	cpc	r1, r23
     966:	18 06       	cpc	r1, r24
     968:	99 1f       	adc	r25, r25
     96a:	f1 cf       	rjmp	.-30     	; 0x94e <__fp_splitA+0xc>
     96c:	86 95       	lsr	r24
     96e:	71 05       	cpc	r23, r1
     970:	61 05       	cpc	r22, r1
     972:	08 94       	sec
     974:	08 95       	ret

00000976 <__fp_zero>:
     976:	e8 94       	clt

00000978 <__fp_szero>:
     978:	bb 27       	eor	r27, r27
     97a:	66 27       	eor	r22, r22
     97c:	77 27       	eor	r23, r23
     97e:	cb 01       	movw	r24, r22
     980:	97 f9       	bld	r25, 7
     982:	08 95       	ret

00000984 <__gesf2>:
     984:	8a df       	rcall	.-236    	; 0x89a <__fp_cmp>
     986:	08 f4       	brcc	.+2      	; 0x98a <__gesf2+0x6>
     988:	8f ef       	ldi	r24, 0xFF	; 255
     98a:	08 95       	ret

0000098c <__mulsf3>:
     98c:	0b d0       	rcall	.+22     	; 0x9a4 <__mulsf3x>
     98e:	c0 cf       	rjmp	.-128    	; 0x910 <__fp_round>
     990:	b1 df       	rcall	.-158    	; 0x8f4 <__fp_pscA>
     992:	28 f0       	brcs	.+10     	; 0x99e <__mulsf3+0x12>
     994:	b6 df       	rcall	.-148    	; 0x902 <__fp_pscB>
     996:	18 f0       	brcs	.+6      	; 0x99e <__mulsf3+0x12>
     998:	95 23       	and	r25, r21
     99a:	09 f0       	breq	.+2      	; 0x99e <__mulsf3+0x12>
     99c:	a2 cf       	rjmp	.-188    	; 0x8e2 <__fp_inf>
     99e:	a7 cf       	rjmp	.-178    	; 0x8ee <__fp_nan>
     9a0:	11 24       	eor	r1, r1
     9a2:	ea cf       	rjmp	.-44     	; 0x978 <__fp_szero>

000009a4 <__mulsf3x>:
     9a4:	c6 df       	rcall	.-116    	; 0x932 <__fp_split3>
     9a6:	a0 f3       	brcs	.-24     	; 0x990 <__mulsf3+0x4>

000009a8 <__mulsf3_pse>:
     9a8:	95 9f       	mul	r25, r21
     9aa:	d1 f3       	breq	.-12     	; 0x9a0 <__mulsf3+0x14>
     9ac:	95 0f       	add	r25, r21
     9ae:	50 e0       	ldi	r21, 0x00	; 0
     9b0:	55 1f       	adc	r21, r21
     9b2:	62 9f       	mul	r22, r18
     9b4:	f0 01       	movw	r30, r0
     9b6:	72 9f       	mul	r23, r18
     9b8:	bb 27       	eor	r27, r27
     9ba:	f0 0d       	add	r31, r0
     9bc:	b1 1d       	adc	r27, r1
     9be:	63 9f       	mul	r22, r19
     9c0:	aa 27       	eor	r26, r26
     9c2:	f0 0d       	add	r31, r0
     9c4:	b1 1d       	adc	r27, r1
     9c6:	aa 1f       	adc	r26, r26
     9c8:	64 9f       	mul	r22, r20
     9ca:	66 27       	eor	r22, r22
     9cc:	b0 0d       	add	r27, r0
     9ce:	a1 1d       	adc	r26, r1
     9d0:	66 1f       	adc	r22, r22
     9d2:	82 9f       	mul	r24, r18
     9d4:	22 27       	eor	r18, r18
     9d6:	b0 0d       	add	r27, r0
     9d8:	a1 1d       	adc	r26, r1
     9da:	62 1f       	adc	r22, r18
     9dc:	73 9f       	mul	r23, r19
     9de:	b0 0d       	add	r27, r0
     9e0:	a1 1d       	adc	r26, r1
     9e2:	62 1f       	adc	r22, r18
     9e4:	83 9f       	mul	r24, r19
     9e6:	a0 0d       	add	r26, r0
     9e8:	61 1d       	adc	r22, r1
     9ea:	22 1f       	adc	r18, r18
     9ec:	74 9f       	mul	r23, r20
     9ee:	33 27       	eor	r19, r19
     9f0:	a0 0d       	add	r26, r0
     9f2:	61 1d       	adc	r22, r1
     9f4:	23 1f       	adc	r18, r19
     9f6:	84 9f       	mul	r24, r20
     9f8:	60 0d       	add	r22, r0
     9fa:	21 1d       	adc	r18, r1
     9fc:	82 2f       	mov	r24, r18
     9fe:	76 2f       	mov	r23, r22
     a00:	6a 2f       	mov	r22, r26
     a02:	11 24       	eor	r1, r1
     a04:	9f 57       	subi	r25, 0x7F	; 127
     a06:	50 40       	sbci	r21, 0x00	; 0
     a08:	8a f0       	brmi	.+34     	; 0xa2c <__mulsf3_pse+0x84>
     a0a:	e1 f0       	breq	.+56     	; 0xa44 <__mulsf3_pse+0x9c>
     a0c:	88 23       	and	r24, r24
     a0e:	4a f0       	brmi	.+18     	; 0xa22 <__mulsf3_pse+0x7a>
     a10:	ee 0f       	add	r30, r30
     a12:	ff 1f       	adc	r31, r31
     a14:	bb 1f       	adc	r27, r27
     a16:	66 1f       	adc	r22, r22
     a18:	77 1f       	adc	r23, r23
     a1a:	88 1f       	adc	r24, r24
     a1c:	91 50       	subi	r25, 0x01	; 1
     a1e:	50 40       	sbci	r21, 0x00	; 0
     a20:	a9 f7       	brne	.-22     	; 0xa0c <__mulsf3_pse+0x64>
     a22:	9e 3f       	cpi	r25, 0xFE	; 254
     a24:	51 05       	cpc	r21, r1
     a26:	70 f0       	brcs	.+28     	; 0xa44 <__mulsf3_pse+0x9c>
     a28:	5c cf       	rjmp	.-328    	; 0x8e2 <__fp_inf>
     a2a:	a6 cf       	rjmp	.-180    	; 0x978 <__fp_szero>
     a2c:	5f 3f       	cpi	r21, 0xFF	; 255
     a2e:	ec f3       	brlt	.-6      	; 0xa2a <__mulsf3_pse+0x82>
     a30:	98 3e       	cpi	r25, 0xE8	; 232
     a32:	dc f3       	brlt	.-10     	; 0xa2a <__mulsf3_pse+0x82>
     a34:	86 95       	lsr	r24
     a36:	77 95       	ror	r23
     a38:	67 95       	ror	r22
     a3a:	b7 95       	ror	r27
     a3c:	f7 95       	ror	r31
     a3e:	e7 95       	ror	r30
     a40:	9f 5f       	subi	r25, 0xFF	; 255
     a42:	c1 f7       	brne	.-16     	; 0xa34 <__mulsf3_pse+0x8c>
     a44:	fe 2b       	or	r31, r30
     a46:	88 0f       	add	r24, r24
     a48:	91 1d       	adc	r25, r1
     a4a:	96 95       	lsr	r25
     a4c:	87 95       	ror	r24
     a4e:	97 f9       	bld	r25, 7
     a50:	08 95       	ret

00000a52 <malloc>:
     a52:	0f 93       	push	r16
     a54:	1f 93       	push	r17
     a56:	cf 93       	push	r28
     a58:	df 93       	push	r29
     a5a:	82 30       	cpi	r24, 0x02	; 2
     a5c:	91 05       	cpc	r25, r1
     a5e:	10 f4       	brcc	.+4      	; 0xa64 <malloc+0x12>
     a60:	82 e0       	ldi	r24, 0x02	; 2
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <__flp>
     a68:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <__flp+0x1>
     a6c:	20 e0       	ldi	r18, 0x00	; 0
     a6e:	30 e0       	ldi	r19, 0x00	; 0
     a70:	a0 e0       	ldi	r26, 0x00	; 0
     a72:	b0 e0       	ldi	r27, 0x00	; 0
     a74:	30 97       	sbiw	r30, 0x00	; 0
     a76:	19 f1       	breq	.+70     	; 0xabe <malloc+0x6c>
     a78:	40 81       	ld	r20, Z
     a7a:	51 81       	ldd	r21, Z+1	; 0x01
     a7c:	02 81       	ldd	r16, Z+2	; 0x02
     a7e:	13 81       	ldd	r17, Z+3	; 0x03
     a80:	48 17       	cp	r20, r24
     a82:	59 07       	cpc	r21, r25
     a84:	c8 f0       	brcs	.+50     	; 0xab8 <malloc+0x66>
     a86:	84 17       	cp	r24, r20
     a88:	95 07       	cpc	r25, r21
     a8a:	69 f4       	brne	.+26     	; 0xaa6 <malloc+0x54>
     a8c:	10 97       	sbiw	r26, 0x00	; 0
     a8e:	31 f0       	breq	.+12     	; 0xa9c <malloc+0x4a>
     a90:	12 96       	adiw	r26, 0x02	; 2
     a92:	0c 93       	st	X, r16
     a94:	12 97       	sbiw	r26, 0x02	; 2
     a96:	13 96       	adiw	r26, 0x03	; 3
     a98:	1c 93       	st	X, r17
     a9a:	27 c0       	rjmp	.+78     	; 0xaea <malloc+0x98>
     a9c:	00 93 40 01 	sts	0x0140, r16	; 0x800140 <__flp>
     aa0:	10 93 41 01 	sts	0x0141, r17	; 0x800141 <__flp+0x1>
     aa4:	22 c0       	rjmp	.+68     	; 0xaea <malloc+0x98>
     aa6:	21 15       	cp	r18, r1
     aa8:	31 05       	cpc	r19, r1
     aaa:	19 f0       	breq	.+6      	; 0xab2 <malloc+0x60>
     aac:	42 17       	cp	r20, r18
     aae:	53 07       	cpc	r21, r19
     ab0:	18 f4       	brcc	.+6      	; 0xab8 <malloc+0x66>
     ab2:	9a 01       	movw	r18, r20
     ab4:	bd 01       	movw	r22, r26
     ab6:	ef 01       	movw	r28, r30
     ab8:	df 01       	movw	r26, r30
     aba:	f8 01       	movw	r30, r16
     abc:	db cf       	rjmp	.-74     	; 0xa74 <malloc+0x22>
     abe:	21 15       	cp	r18, r1
     ac0:	31 05       	cpc	r19, r1
     ac2:	f9 f0       	breq	.+62     	; 0xb02 <malloc+0xb0>
     ac4:	28 1b       	sub	r18, r24
     ac6:	39 0b       	sbc	r19, r25
     ac8:	24 30       	cpi	r18, 0x04	; 4
     aca:	31 05       	cpc	r19, r1
     acc:	80 f4       	brcc	.+32     	; 0xaee <malloc+0x9c>
     ace:	8a 81       	ldd	r24, Y+2	; 0x02
     ad0:	9b 81       	ldd	r25, Y+3	; 0x03
     ad2:	61 15       	cp	r22, r1
     ad4:	71 05       	cpc	r23, r1
     ad6:	21 f0       	breq	.+8      	; 0xae0 <malloc+0x8e>
     ad8:	fb 01       	movw	r30, r22
     ada:	93 83       	std	Z+3, r25	; 0x03
     adc:	82 83       	std	Z+2, r24	; 0x02
     ade:	04 c0       	rjmp	.+8      	; 0xae8 <malloc+0x96>
     ae0:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <__flp+0x1>
     ae4:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <__flp>
     ae8:	fe 01       	movw	r30, r28
     aea:	32 96       	adiw	r30, 0x02	; 2
     aec:	44 c0       	rjmp	.+136    	; 0xb76 <malloc+0x124>
     aee:	fe 01       	movw	r30, r28
     af0:	e2 0f       	add	r30, r18
     af2:	f3 1f       	adc	r31, r19
     af4:	81 93       	st	Z+, r24
     af6:	91 93       	st	Z+, r25
     af8:	22 50       	subi	r18, 0x02	; 2
     afa:	31 09       	sbc	r19, r1
     afc:	39 83       	std	Y+1, r19	; 0x01
     afe:	28 83       	st	Y, r18
     b00:	3a c0       	rjmp	.+116    	; 0xb76 <malloc+0x124>
     b02:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <__brkval>
     b06:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <__brkval+0x1>
     b0a:	23 2b       	or	r18, r19
     b0c:	41 f4       	brne	.+16     	; 0xb1e <malloc+0xcc>
     b0e:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     b12:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     b16:	30 93 3f 01 	sts	0x013F, r19	; 0x80013f <__brkval+0x1>
     b1a:	20 93 3e 01 	sts	0x013E, r18	; 0x80013e <__brkval>
     b1e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     b22:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     b26:	21 15       	cp	r18, r1
     b28:	31 05       	cpc	r19, r1
     b2a:	41 f4       	brne	.+16     	; 0xb3c <malloc+0xea>
     b2c:	2d b7       	in	r18, 0x3d	; 61
     b2e:	3e b7       	in	r19, 0x3e	; 62
     b30:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     b34:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     b38:	24 1b       	sub	r18, r20
     b3a:	35 0b       	sbc	r19, r21
     b3c:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <__brkval>
     b40:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <__brkval+0x1>
     b44:	e2 17       	cp	r30, r18
     b46:	f3 07       	cpc	r31, r19
     b48:	a0 f4       	brcc	.+40     	; 0xb72 <malloc+0x120>
     b4a:	2e 1b       	sub	r18, r30
     b4c:	3f 0b       	sbc	r19, r31
     b4e:	28 17       	cp	r18, r24
     b50:	39 07       	cpc	r19, r25
     b52:	78 f0       	brcs	.+30     	; 0xb72 <malloc+0x120>
     b54:	ac 01       	movw	r20, r24
     b56:	4e 5f       	subi	r20, 0xFE	; 254
     b58:	5f 4f       	sbci	r21, 0xFF	; 255
     b5a:	24 17       	cp	r18, r20
     b5c:	35 07       	cpc	r19, r21
     b5e:	48 f0       	brcs	.+18     	; 0xb72 <malloc+0x120>
     b60:	4e 0f       	add	r20, r30
     b62:	5f 1f       	adc	r21, r31
     b64:	50 93 3f 01 	sts	0x013F, r21	; 0x80013f <__brkval+0x1>
     b68:	40 93 3e 01 	sts	0x013E, r20	; 0x80013e <__brkval>
     b6c:	81 93       	st	Z+, r24
     b6e:	91 93       	st	Z+, r25
     b70:	02 c0       	rjmp	.+4      	; 0xb76 <malloc+0x124>
     b72:	e0 e0       	ldi	r30, 0x00	; 0
     b74:	f0 e0       	ldi	r31, 0x00	; 0
     b76:	cf 01       	movw	r24, r30
     b78:	df 91       	pop	r29
     b7a:	cf 91       	pop	r28
     b7c:	1f 91       	pop	r17
     b7e:	0f 91       	pop	r16
     b80:	08 95       	ret

00000b82 <free>:
     b82:	cf 93       	push	r28
     b84:	df 93       	push	r29
     b86:	00 97       	sbiw	r24, 0x00	; 0
     b88:	09 f4       	brne	.+2      	; 0xb8c <free+0xa>
     b8a:	81 c0       	rjmp	.+258    	; 0xc8e <free+0x10c>
     b8c:	fc 01       	movw	r30, r24
     b8e:	32 97       	sbiw	r30, 0x02	; 2
     b90:	13 82       	std	Z+3, r1	; 0x03
     b92:	12 82       	std	Z+2, r1	; 0x02
     b94:	a0 91 40 01 	lds	r26, 0x0140	; 0x800140 <__flp>
     b98:	b0 91 41 01 	lds	r27, 0x0141	; 0x800141 <__flp+0x1>
     b9c:	10 97       	sbiw	r26, 0x00	; 0
     b9e:	81 f4       	brne	.+32     	; 0xbc0 <free+0x3e>
     ba0:	20 81       	ld	r18, Z
     ba2:	31 81       	ldd	r19, Z+1	; 0x01
     ba4:	82 0f       	add	r24, r18
     ba6:	93 1f       	adc	r25, r19
     ba8:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <__brkval>
     bac:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <__brkval+0x1>
     bb0:	28 17       	cp	r18, r24
     bb2:	39 07       	cpc	r19, r25
     bb4:	51 f5       	brne	.+84     	; 0xc0a <free+0x88>
     bb6:	f0 93 3f 01 	sts	0x013F, r31	; 0x80013f <__brkval+0x1>
     bba:	e0 93 3e 01 	sts	0x013E, r30	; 0x80013e <__brkval>
     bbe:	67 c0       	rjmp	.+206    	; 0xc8e <free+0x10c>
     bc0:	ed 01       	movw	r28, r26
     bc2:	20 e0       	ldi	r18, 0x00	; 0
     bc4:	30 e0       	ldi	r19, 0x00	; 0
     bc6:	ce 17       	cp	r28, r30
     bc8:	df 07       	cpc	r29, r31
     bca:	40 f4       	brcc	.+16     	; 0xbdc <free+0x5a>
     bcc:	4a 81       	ldd	r20, Y+2	; 0x02
     bce:	5b 81       	ldd	r21, Y+3	; 0x03
     bd0:	9e 01       	movw	r18, r28
     bd2:	41 15       	cp	r20, r1
     bd4:	51 05       	cpc	r21, r1
     bd6:	f1 f0       	breq	.+60     	; 0xc14 <free+0x92>
     bd8:	ea 01       	movw	r28, r20
     bda:	f5 cf       	rjmp	.-22     	; 0xbc6 <free+0x44>
     bdc:	d3 83       	std	Z+3, r29	; 0x03
     bde:	c2 83       	std	Z+2, r28	; 0x02
     be0:	40 81       	ld	r20, Z
     be2:	51 81       	ldd	r21, Z+1	; 0x01
     be4:	84 0f       	add	r24, r20
     be6:	95 1f       	adc	r25, r21
     be8:	c8 17       	cp	r28, r24
     bea:	d9 07       	cpc	r29, r25
     bec:	59 f4       	brne	.+22     	; 0xc04 <free+0x82>
     bee:	88 81       	ld	r24, Y
     bf0:	99 81       	ldd	r25, Y+1	; 0x01
     bf2:	84 0f       	add	r24, r20
     bf4:	95 1f       	adc	r25, r21
     bf6:	02 96       	adiw	r24, 0x02	; 2
     bf8:	91 83       	std	Z+1, r25	; 0x01
     bfa:	80 83       	st	Z, r24
     bfc:	8a 81       	ldd	r24, Y+2	; 0x02
     bfe:	9b 81       	ldd	r25, Y+3	; 0x03
     c00:	93 83       	std	Z+3, r25	; 0x03
     c02:	82 83       	std	Z+2, r24	; 0x02
     c04:	21 15       	cp	r18, r1
     c06:	31 05       	cpc	r19, r1
     c08:	29 f4       	brne	.+10     	; 0xc14 <free+0x92>
     c0a:	f0 93 41 01 	sts	0x0141, r31	; 0x800141 <__flp+0x1>
     c0e:	e0 93 40 01 	sts	0x0140, r30	; 0x800140 <__flp>
     c12:	3d c0       	rjmp	.+122    	; 0xc8e <free+0x10c>
     c14:	e9 01       	movw	r28, r18
     c16:	fb 83       	std	Y+3, r31	; 0x03
     c18:	ea 83       	std	Y+2, r30	; 0x02
     c1a:	49 91       	ld	r20, Y+
     c1c:	59 91       	ld	r21, Y+
     c1e:	c4 0f       	add	r28, r20
     c20:	d5 1f       	adc	r29, r21
     c22:	ec 17       	cp	r30, r28
     c24:	fd 07       	cpc	r31, r29
     c26:	61 f4       	brne	.+24     	; 0xc40 <free+0xbe>
     c28:	80 81       	ld	r24, Z
     c2a:	91 81       	ldd	r25, Z+1	; 0x01
     c2c:	84 0f       	add	r24, r20
     c2e:	95 1f       	adc	r25, r21
     c30:	02 96       	adiw	r24, 0x02	; 2
     c32:	e9 01       	movw	r28, r18
     c34:	99 83       	std	Y+1, r25	; 0x01
     c36:	88 83       	st	Y, r24
     c38:	82 81       	ldd	r24, Z+2	; 0x02
     c3a:	93 81       	ldd	r25, Z+3	; 0x03
     c3c:	9b 83       	std	Y+3, r25	; 0x03
     c3e:	8a 83       	std	Y+2, r24	; 0x02
     c40:	e0 e0       	ldi	r30, 0x00	; 0
     c42:	f0 e0       	ldi	r31, 0x00	; 0
     c44:	12 96       	adiw	r26, 0x02	; 2
     c46:	8d 91       	ld	r24, X+
     c48:	9c 91       	ld	r25, X
     c4a:	13 97       	sbiw	r26, 0x03	; 3
     c4c:	00 97       	sbiw	r24, 0x00	; 0
     c4e:	19 f0       	breq	.+6      	; 0xc56 <free+0xd4>
     c50:	fd 01       	movw	r30, r26
     c52:	dc 01       	movw	r26, r24
     c54:	f7 cf       	rjmp	.-18     	; 0xc44 <free+0xc2>
     c56:	8d 91       	ld	r24, X+
     c58:	9c 91       	ld	r25, X
     c5a:	11 97       	sbiw	r26, 0x01	; 1
     c5c:	9d 01       	movw	r18, r26
     c5e:	2e 5f       	subi	r18, 0xFE	; 254
     c60:	3f 4f       	sbci	r19, 0xFF	; 255
     c62:	82 0f       	add	r24, r18
     c64:	93 1f       	adc	r25, r19
     c66:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <__brkval>
     c6a:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <__brkval+0x1>
     c6e:	28 17       	cp	r18, r24
     c70:	39 07       	cpc	r19, r25
     c72:	69 f4       	brne	.+26     	; 0xc8e <free+0x10c>
     c74:	30 97       	sbiw	r30, 0x00	; 0
     c76:	29 f4       	brne	.+10     	; 0xc82 <free+0x100>
     c78:	10 92 41 01 	sts	0x0141, r1	; 0x800141 <__flp+0x1>
     c7c:	10 92 40 01 	sts	0x0140, r1	; 0x800140 <__flp>
     c80:	02 c0       	rjmp	.+4      	; 0xc86 <free+0x104>
     c82:	13 82       	std	Z+3, r1	; 0x03
     c84:	12 82       	std	Z+2, r1	; 0x02
     c86:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <__brkval+0x1>
     c8a:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <__brkval>
     c8e:	df 91       	pop	r29
     c90:	cf 91       	pop	r28
     c92:	08 95       	ret

00000c94 <sprintf>:
     c94:	0f 93       	push	r16
     c96:	1f 93       	push	r17
     c98:	cf 93       	push	r28
     c9a:	df 93       	push	r29
     c9c:	cd b7       	in	r28, 0x3d	; 61
     c9e:	de b7       	in	r29, 0x3e	; 62
     ca0:	2e 97       	sbiw	r28, 0x0e	; 14
     ca2:	0f b6       	in	r0, 0x3f	; 63
     ca4:	f8 94       	cli
     ca6:	de bf       	out	0x3e, r29	; 62
     ca8:	0f be       	out	0x3f, r0	; 63
     caa:	cd bf       	out	0x3d, r28	; 61
     cac:	0d 89       	ldd	r16, Y+21	; 0x15
     cae:	1e 89       	ldd	r17, Y+22	; 0x16
     cb0:	86 e0       	ldi	r24, 0x06	; 6
     cb2:	8c 83       	std	Y+4, r24	; 0x04
     cb4:	1a 83       	std	Y+2, r17	; 0x02
     cb6:	09 83       	std	Y+1, r16	; 0x01
     cb8:	8f ef       	ldi	r24, 0xFF	; 255
     cba:	9f e7       	ldi	r25, 0x7F	; 127
     cbc:	9e 83       	std	Y+6, r25	; 0x06
     cbe:	8d 83       	std	Y+5, r24	; 0x05
     cc0:	ae 01       	movw	r20, r28
     cc2:	47 5e       	subi	r20, 0xE7	; 231
     cc4:	5f 4f       	sbci	r21, 0xFF	; 255
     cc6:	6f 89       	ldd	r22, Y+23	; 0x17
     cc8:	78 8d       	ldd	r23, Y+24	; 0x18
     cca:	ce 01       	movw	r24, r28
     ccc:	01 96       	adiw	r24, 0x01	; 1
     cce:	31 d0       	rcall	.+98     	; 0xd32 <vfprintf>
     cd0:	ef 81       	ldd	r30, Y+7	; 0x07
     cd2:	f8 85       	ldd	r31, Y+8	; 0x08
     cd4:	e0 0f       	add	r30, r16
     cd6:	f1 1f       	adc	r31, r17
     cd8:	10 82       	st	Z, r1
     cda:	2e 96       	adiw	r28, 0x0e	; 14
     cdc:	0f b6       	in	r0, 0x3f	; 63
     cde:	f8 94       	cli
     ce0:	de bf       	out	0x3e, r29	; 62
     ce2:	0f be       	out	0x3f, r0	; 63
     ce4:	cd bf       	out	0x3d, r28	; 61
     ce6:	df 91       	pop	r29
     ce8:	cf 91       	pop	r28
     cea:	1f 91       	pop	r17
     cec:	0f 91       	pop	r16
     cee:	08 95       	ret

00000cf0 <sscanf>:
     cf0:	cf 93       	push	r28
     cf2:	df 93       	push	r29
     cf4:	cd b7       	in	r28, 0x3d	; 61
     cf6:	de b7       	in	r29, 0x3e	; 62
     cf8:	2e 97       	sbiw	r28, 0x0e	; 14
     cfa:	0f b6       	in	r0, 0x3f	; 63
     cfc:	f8 94       	cli
     cfe:	de bf       	out	0x3e, r29	; 62
     d00:	0f be       	out	0x3f, r0	; 63
     d02:	cd bf       	out	0x3d, r28	; 61
     d04:	85 e0       	ldi	r24, 0x05	; 5
     d06:	8c 83       	std	Y+4, r24	; 0x04
     d08:	8b 89       	ldd	r24, Y+19	; 0x13
     d0a:	9c 89       	ldd	r25, Y+20	; 0x14
     d0c:	9a 83       	std	Y+2, r25	; 0x02
     d0e:	89 83       	std	Y+1, r24	; 0x01
     d10:	ae 01       	movw	r20, r28
     d12:	49 5e       	subi	r20, 0xE9	; 233
     d14:	5f 4f       	sbci	r21, 0xFF	; 255
     d16:	6d 89       	ldd	r22, Y+21	; 0x15
     d18:	7e 89       	ldd	r23, Y+22	; 0x16
     d1a:	ce 01       	movw	r24, r28
     d1c:	01 96       	adiw	r24, 0x01	; 1
     d1e:	b8 d3       	rcall	.+1904   	; 0x1490 <vfscanf>
     d20:	2e 96       	adiw	r28, 0x0e	; 14
     d22:	0f b6       	in	r0, 0x3f	; 63
     d24:	f8 94       	cli
     d26:	de bf       	out	0x3e, r29	; 62
     d28:	0f be       	out	0x3f, r0	; 63
     d2a:	cd bf       	out	0x3d, r28	; 61
     d2c:	df 91       	pop	r29
     d2e:	cf 91       	pop	r28
     d30:	08 95       	ret

00000d32 <vfprintf>:
     d32:	2f 92       	push	r2
     d34:	3f 92       	push	r3
     d36:	4f 92       	push	r4
     d38:	5f 92       	push	r5
     d3a:	6f 92       	push	r6
     d3c:	7f 92       	push	r7
     d3e:	8f 92       	push	r8
     d40:	9f 92       	push	r9
     d42:	af 92       	push	r10
     d44:	bf 92       	push	r11
     d46:	cf 92       	push	r12
     d48:	df 92       	push	r13
     d4a:	ef 92       	push	r14
     d4c:	ff 92       	push	r15
     d4e:	0f 93       	push	r16
     d50:	1f 93       	push	r17
     d52:	cf 93       	push	r28
     d54:	df 93       	push	r29
     d56:	cd b7       	in	r28, 0x3d	; 61
     d58:	de b7       	in	r29, 0x3e	; 62
     d5a:	2b 97       	sbiw	r28, 0x0b	; 11
     d5c:	0f b6       	in	r0, 0x3f	; 63
     d5e:	f8 94       	cli
     d60:	de bf       	out	0x3e, r29	; 62
     d62:	0f be       	out	0x3f, r0	; 63
     d64:	cd bf       	out	0x3d, r28	; 61
     d66:	6c 01       	movw	r12, r24
     d68:	7b 01       	movw	r14, r22
     d6a:	8a 01       	movw	r16, r20
     d6c:	fc 01       	movw	r30, r24
     d6e:	17 82       	std	Z+7, r1	; 0x07
     d70:	16 82       	std	Z+6, r1	; 0x06
     d72:	83 81       	ldd	r24, Z+3	; 0x03
     d74:	81 ff       	sbrs	r24, 1
     d76:	bf c1       	rjmp	.+894    	; 0x10f6 <__DATA_REGION_LENGTH__+0xf6>
     d78:	ce 01       	movw	r24, r28
     d7a:	01 96       	adiw	r24, 0x01	; 1
     d7c:	3c 01       	movw	r6, r24
     d7e:	f6 01       	movw	r30, r12
     d80:	93 81       	ldd	r25, Z+3	; 0x03
     d82:	f7 01       	movw	r30, r14
     d84:	93 fd       	sbrc	r25, 3
     d86:	85 91       	lpm	r24, Z+
     d88:	93 ff       	sbrs	r25, 3
     d8a:	81 91       	ld	r24, Z+
     d8c:	7f 01       	movw	r14, r30
     d8e:	88 23       	and	r24, r24
     d90:	09 f4       	brne	.+2      	; 0xd94 <vfprintf+0x62>
     d92:	ad c1       	rjmp	.+858    	; 0x10ee <__DATA_REGION_LENGTH__+0xee>
     d94:	85 32       	cpi	r24, 0x25	; 37
     d96:	39 f4       	brne	.+14     	; 0xda6 <vfprintf+0x74>
     d98:	93 fd       	sbrc	r25, 3
     d9a:	85 91       	lpm	r24, Z+
     d9c:	93 ff       	sbrs	r25, 3
     d9e:	81 91       	ld	r24, Z+
     da0:	7f 01       	movw	r14, r30
     da2:	85 32       	cpi	r24, 0x25	; 37
     da4:	21 f4       	brne	.+8      	; 0xdae <vfprintf+0x7c>
     da6:	b6 01       	movw	r22, r12
     da8:	90 e0       	ldi	r25, 0x00	; 0
     daa:	f0 d4       	rcall	.+2528   	; 0x178c <fputc>
     dac:	e8 cf       	rjmp	.-48     	; 0xd7e <vfprintf+0x4c>
     dae:	91 2c       	mov	r9, r1
     db0:	21 2c       	mov	r2, r1
     db2:	31 2c       	mov	r3, r1
     db4:	ff e1       	ldi	r31, 0x1F	; 31
     db6:	f3 15       	cp	r31, r3
     db8:	d8 f0       	brcs	.+54     	; 0xdf0 <vfprintf+0xbe>
     dba:	8b 32       	cpi	r24, 0x2B	; 43
     dbc:	79 f0       	breq	.+30     	; 0xddc <vfprintf+0xaa>
     dbe:	38 f4       	brcc	.+14     	; 0xdce <vfprintf+0x9c>
     dc0:	80 32       	cpi	r24, 0x20	; 32
     dc2:	79 f0       	breq	.+30     	; 0xde2 <vfprintf+0xb0>
     dc4:	83 32       	cpi	r24, 0x23	; 35
     dc6:	a1 f4       	brne	.+40     	; 0xdf0 <vfprintf+0xbe>
     dc8:	23 2d       	mov	r18, r3
     dca:	20 61       	ori	r18, 0x10	; 16
     dcc:	1d c0       	rjmp	.+58     	; 0xe08 <vfprintf+0xd6>
     dce:	8d 32       	cpi	r24, 0x2D	; 45
     dd0:	61 f0       	breq	.+24     	; 0xdea <vfprintf+0xb8>
     dd2:	80 33       	cpi	r24, 0x30	; 48
     dd4:	69 f4       	brne	.+26     	; 0xdf0 <vfprintf+0xbe>
     dd6:	23 2d       	mov	r18, r3
     dd8:	21 60       	ori	r18, 0x01	; 1
     dda:	16 c0       	rjmp	.+44     	; 0xe08 <vfprintf+0xd6>
     ddc:	83 2d       	mov	r24, r3
     dde:	82 60       	ori	r24, 0x02	; 2
     de0:	38 2e       	mov	r3, r24
     de2:	e3 2d       	mov	r30, r3
     de4:	e4 60       	ori	r30, 0x04	; 4
     de6:	3e 2e       	mov	r3, r30
     de8:	2a c0       	rjmp	.+84     	; 0xe3e <vfprintf+0x10c>
     dea:	f3 2d       	mov	r31, r3
     dec:	f8 60       	ori	r31, 0x08	; 8
     dee:	1d c0       	rjmp	.+58     	; 0xe2a <vfprintf+0xf8>
     df0:	37 fc       	sbrc	r3, 7
     df2:	2d c0       	rjmp	.+90     	; 0xe4e <vfprintf+0x11c>
     df4:	20 ed       	ldi	r18, 0xD0	; 208
     df6:	28 0f       	add	r18, r24
     df8:	2a 30       	cpi	r18, 0x0A	; 10
     dfa:	40 f0       	brcs	.+16     	; 0xe0c <vfprintf+0xda>
     dfc:	8e 32       	cpi	r24, 0x2E	; 46
     dfe:	b9 f4       	brne	.+46     	; 0xe2e <vfprintf+0xfc>
     e00:	36 fc       	sbrc	r3, 6
     e02:	75 c1       	rjmp	.+746    	; 0x10ee <__DATA_REGION_LENGTH__+0xee>
     e04:	23 2d       	mov	r18, r3
     e06:	20 64       	ori	r18, 0x40	; 64
     e08:	32 2e       	mov	r3, r18
     e0a:	19 c0       	rjmp	.+50     	; 0xe3e <vfprintf+0x10c>
     e0c:	36 fe       	sbrs	r3, 6
     e0e:	06 c0       	rjmp	.+12     	; 0xe1c <vfprintf+0xea>
     e10:	8a e0       	ldi	r24, 0x0A	; 10
     e12:	98 9e       	mul	r9, r24
     e14:	20 0d       	add	r18, r0
     e16:	11 24       	eor	r1, r1
     e18:	92 2e       	mov	r9, r18
     e1a:	11 c0       	rjmp	.+34     	; 0xe3e <vfprintf+0x10c>
     e1c:	ea e0       	ldi	r30, 0x0A	; 10
     e1e:	2e 9e       	mul	r2, r30
     e20:	20 0d       	add	r18, r0
     e22:	11 24       	eor	r1, r1
     e24:	22 2e       	mov	r2, r18
     e26:	f3 2d       	mov	r31, r3
     e28:	f0 62       	ori	r31, 0x20	; 32
     e2a:	3f 2e       	mov	r3, r31
     e2c:	08 c0       	rjmp	.+16     	; 0xe3e <vfprintf+0x10c>
     e2e:	8c 36       	cpi	r24, 0x6C	; 108
     e30:	21 f4       	brne	.+8      	; 0xe3a <vfprintf+0x108>
     e32:	83 2d       	mov	r24, r3
     e34:	80 68       	ori	r24, 0x80	; 128
     e36:	38 2e       	mov	r3, r24
     e38:	02 c0       	rjmp	.+4      	; 0xe3e <vfprintf+0x10c>
     e3a:	88 36       	cpi	r24, 0x68	; 104
     e3c:	41 f4       	brne	.+16     	; 0xe4e <vfprintf+0x11c>
     e3e:	f7 01       	movw	r30, r14
     e40:	93 fd       	sbrc	r25, 3
     e42:	85 91       	lpm	r24, Z+
     e44:	93 ff       	sbrs	r25, 3
     e46:	81 91       	ld	r24, Z+
     e48:	7f 01       	movw	r14, r30
     e4a:	81 11       	cpse	r24, r1
     e4c:	b3 cf       	rjmp	.-154    	; 0xdb4 <vfprintf+0x82>
     e4e:	98 2f       	mov	r25, r24
     e50:	9f 7d       	andi	r25, 0xDF	; 223
     e52:	95 54       	subi	r25, 0x45	; 69
     e54:	93 30       	cpi	r25, 0x03	; 3
     e56:	28 f4       	brcc	.+10     	; 0xe62 <vfprintf+0x130>
     e58:	0c 5f       	subi	r16, 0xFC	; 252
     e5a:	1f 4f       	sbci	r17, 0xFF	; 255
     e5c:	9f e3       	ldi	r25, 0x3F	; 63
     e5e:	99 83       	std	Y+1, r25	; 0x01
     e60:	0d c0       	rjmp	.+26     	; 0xe7c <vfprintf+0x14a>
     e62:	83 36       	cpi	r24, 0x63	; 99
     e64:	31 f0       	breq	.+12     	; 0xe72 <vfprintf+0x140>
     e66:	83 37       	cpi	r24, 0x73	; 115
     e68:	71 f0       	breq	.+28     	; 0xe86 <vfprintf+0x154>
     e6a:	83 35       	cpi	r24, 0x53	; 83
     e6c:	09 f0       	breq	.+2      	; 0xe70 <vfprintf+0x13e>
     e6e:	55 c0       	rjmp	.+170    	; 0xf1a <vfprintf+0x1e8>
     e70:	20 c0       	rjmp	.+64     	; 0xeb2 <vfprintf+0x180>
     e72:	f8 01       	movw	r30, r16
     e74:	80 81       	ld	r24, Z
     e76:	89 83       	std	Y+1, r24	; 0x01
     e78:	0e 5f       	subi	r16, 0xFE	; 254
     e7a:	1f 4f       	sbci	r17, 0xFF	; 255
     e7c:	88 24       	eor	r8, r8
     e7e:	83 94       	inc	r8
     e80:	91 2c       	mov	r9, r1
     e82:	53 01       	movw	r10, r6
     e84:	12 c0       	rjmp	.+36     	; 0xeaa <vfprintf+0x178>
     e86:	28 01       	movw	r4, r16
     e88:	f2 e0       	ldi	r31, 0x02	; 2
     e8a:	4f 0e       	add	r4, r31
     e8c:	51 1c       	adc	r5, r1
     e8e:	f8 01       	movw	r30, r16
     e90:	a0 80       	ld	r10, Z
     e92:	b1 80       	ldd	r11, Z+1	; 0x01
     e94:	36 fe       	sbrs	r3, 6
     e96:	03 c0       	rjmp	.+6      	; 0xe9e <vfprintf+0x16c>
     e98:	69 2d       	mov	r22, r9
     e9a:	70 e0       	ldi	r23, 0x00	; 0
     e9c:	02 c0       	rjmp	.+4      	; 0xea2 <vfprintf+0x170>
     e9e:	6f ef       	ldi	r22, 0xFF	; 255
     ea0:	7f ef       	ldi	r23, 0xFF	; 255
     ea2:	c5 01       	movw	r24, r10
     ea4:	2a d4       	rcall	.+2132   	; 0x16fa <strnlen>
     ea6:	4c 01       	movw	r8, r24
     ea8:	82 01       	movw	r16, r4
     eaa:	f3 2d       	mov	r31, r3
     eac:	ff 77       	andi	r31, 0x7F	; 127
     eae:	3f 2e       	mov	r3, r31
     eb0:	15 c0       	rjmp	.+42     	; 0xedc <vfprintf+0x1aa>
     eb2:	28 01       	movw	r4, r16
     eb4:	22 e0       	ldi	r18, 0x02	; 2
     eb6:	42 0e       	add	r4, r18
     eb8:	51 1c       	adc	r5, r1
     eba:	f8 01       	movw	r30, r16
     ebc:	a0 80       	ld	r10, Z
     ebe:	b1 80       	ldd	r11, Z+1	; 0x01
     ec0:	36 fe       	sbrs	r3, 6
     ec2:	03 c0       	rjmp	.+6      	; 0xeca <vfprintf+0x198>
     ec4:	69 2d       	mov	r22, r9
     ec6:	70 e0       	ldi	r23, 0x00	; 0
     ec8:	02 c0       	rjmp	.+4      	; 0xece <vfprintf+0x19c>
     eca:	6f ef       	ldi	r22, 0xFF	; 255
     ecc:	7f ef       	ldi	r23, 0xFF	; 255
     ece:	c5 01       	movw	r24, r10
     ed0:	09 d4       	rcall	.+2066   	; 0x16e4 <strnlen_P>
     ed2:	4c 01       	movw	r8, r24
     ed4:	f3 2d       	mov	r31, r3
     ed6:	f0 68       	ori	r31, 0x80	; 128
     ed8:	3f 2e       	mov	r3, r31
     eda:	82 01       	movw	r16, r4
     edc:	33 fc       	sbrc	r3, 3
     ede:	19 c0       	rjmp	.+50     	; 0xf12 <vfprintf+0x1e0>
     ee0:	82 2d       	mov	r24, r2
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	88 16       	cp	r8, r24
     ee6:	99 06       	cpc	r9, r25
     ee8:	a0 f4       	brcc	.+40     	; 0xf12 <vfprintf+0x1e0>
     eea:	b6 01       	movw	r22, r12
     eec:	80 e2       	ldi	r24, 0x20	; 32
     eee:	90 e0       	ldi	r25, 0x00	; 0
     ef0:	4d d4       	rcall	.+2202   	; 0x178c <fputc>
     ef2:	2a 94       	dec	r2
     ef4:	f5 cf       	rjmp	.-22     	; 0xee0 <vfprintf+0x1ae>
     ef6:	f5 01       	movw	r30, r10
     ef8:	37 fc       	sbrc	r3, 7
     efa:	85 91       	lpm	r24, Z+
     efc:	37 fe       	sbrs	r3, 7
     efe:	81 91       	ld	r24, Z+
     f00:	5f 01       	movw	r10, r30
     f02:	b6 01       	movw	r22, r12
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	42 d4       	rcall	.+2180   	; 0x178c <fputc>
     f08:	21 10       	cpse	r2, r1
     f0a:	2a 94       	dec	r2
     f0c:	21 e0       	ldi	r18, 0x01	; 1
     f0e:	82 1a       	sub	r8, r18
     f10:	91 08       	sbc	r9, r1
     f12:	81 14       	cp	r8, r1
     f14:	91 04       	cpc	r9, r1
     f16:	79 f7       	brne	.-34     	; 0xef6 <vfprintf+0x1c4>
     f18:	e1 c0       	rjmp	.+450    	; 0x10dc <__DATA_REGION_LENGTH__+0xdc>
     f1a:	84 36       	cpi	r24, 0x64	; 100
     f1c:	11 f0       	breq	.+4      	; 0xf22 <vfprintf+0x1f0>
     f1e:	89 36       	cpi	r24, 0x69	; 105
     f20:	39 f5       	brne	.+78     	; 0xf70 <vfprintf+0x23e>
     f22:	f8 01       	movw	r30, r16
     f24:	37 fe       	sbrs	r3, 7
     f26:	07 c0       	rjmp	.+14     	; 0xf36 <vfprintf+0x204>
     f28:	60 81       	ld	r22, Z
     f2a:	71 81       	ldd	r23, Z+1	; 0x01
     f2c:	82 81       	ldd	r24, Z+2	; 0x02
     f2e:	93 81       	ldd	r25, Z+3	; 0x03
     f30:	0c 5f       	subi	r16, 0xFC	; 252
     f32:	1f 4f       	sbci	r17, 0xFF	; 255
     f34:	08 c0       	rjmp	.+16     	; 0xf46 <vfprintf+0x214>
     f36:	60 81       	ld	r22, Z
     f38:	71 81       	ldd	r23, Z+1	; 0x01
     f3a:	07 2e       	mov	r0, r23
     f3c:	00 0c       	add	r0, r0
     f3e:	88 0b       	sbc	r24, r24
     f40:	99 0b       	sbc	r25, r25
     f42:	0e 5f       	subi	r16, 0xFE	; 254
     f44:	1f 4f       	sbci	r17, 0xFF	; 255
     f46:	f3 2d       	mov	r31, r3
     f48:	ff 76       	andi	r31, 0x6F	; 111
     f4a:	3f 2e       	mov	r3, r31
     f4c:	97 ff       	sbrs	r25, 7
     f4e:	09 c0       	rjmp	.+18     	; 0xf62 <vfprintf+0x230>
     f50:	90 95       	com	r25
     f52:	80 95       	com	r24
     f54:	70 95       	com	r23
     f56:	61 95       	neg	r22
     f58:	7f 4f       	sbci	r23, 0xFF	; 255
     f5a:	8f 4f       	sbci	r24, 0xFF	; 255
     f5c:	9f 4f       	sbci	r25, 0xFF	; 255
     f5e:	f0 68       	ori	r31, 0x80	; 128
     f60:	3f 2e       	mov	r3, r31
     f62:	2a e0       	ldi	r18, 0x0A	; 10
     f64:	30 e0       	ldi	r19, 0x00	; 0
     f66:	a3 01       	movw	r20, r6
     f68:	66 d4       	rcall	.+2252   	; 0x1836 <__ultoa_invert>
     f6a:	88 2e       	mov	r8, r24
     f6c:	86 18       	sub	r8, r6
     f6e:	44 c0       	rjmp	.+136    	; 0xff8 <vfprintf+0x2c6>
     f70:	85 37       	cpi	r24, 0x75	; 117
     f72:	31 f4       	brne	.+12     	; 0xf80 <vfprintf+0x24e>
     f74:	23 2d       	mov	r18, r3
     f76:	2f 7e       	andi	r18, 0xEF	; 239
     f78:	b2 2e       	mov	r11, r18
     f7a:	2a e0       	ldi	r18, 0x0A	; 10
     f7c:	30 e0       	ldi	r19, 0x00	; 0
     f7e:	25 c0       	rjmp	.+74     	; 0xfca <vfprintf+0x298>
     f80:	93 2d       	mov	r25, r3
     f82:	99 7f       	andi	r25, 0xF9	; 249
     f84:	b9 2e       	mov	r11, r25
     f86:	8f 36       	cpi	r24, 0x6F	; 111
     f88:	c1 f0       	breq	.+48     	; 0xfba <vfprintf+0x288>
     f8a:	18 f4       	brcc	.+6      	; 0xf92 <vfprintf+0x260>
     f8c:	88 35       	cpi	r24, 0x58	; 88
     f8e:	79 f0       	breq	.+30     	; 0xfae <vfprintf+0x27c>
     f90:	ae c0       	rjmp	.+348    	; 0x10ee <__DATA_REGION_LENGTH__+0xee>
     f92:	80 37       	cpi	r24, 0x70	; 112
     f94:	19 f0       	breq	.+6      	; 0xf9c <vfprintf+0x26a>
     f96:	88 37       	cpi	r24, 0x78	; 120
     f98:	21 f0       	breq	.+8      	; 0xfa2 <vfprintf+0x270>
     f9a:	a9 c0       	rjmp	.+338    	; 0x10ee <__DATA_REGION_LENGTH__+0xee>
     f9c:	e9 2f       	mov	r30, r25
     f9e:	e0 61       	ori	r30, 0x10	; 16
     fa0:	be 2e       	mov	r11, r30
     fa2:	b4 fe       	sbrs	r11, 4
     fa4:	0d c0       	rjmp	.+26     	; 0xfc0 <vfprintf+0x28e>
     fa6:	fb 2d       	mov	r31, r11
     fa8:	f4 60       	ori	r31, 0x04	; 4
     faa:	bf 2e       	mov	r11, r31
     fac:	09 c0       	rjmp	.+18     	; 0xfc0 <vfprintf+0x28e>
     fae:	34 fe       	sbrs	r3, 4
     fb0:	0a c0       	rjmp	.+20     	; 0xfc6 <vfprintf+0x294>
     fb2:	29 2f       	mov	r18, r25
     fb4:	26 60       	ori	r18, 0x06	; 6
     fb6:	b2 2e       	mov	r11, r18
     fb8:	06 c0       	rjmp	.+12     	; 0xfc6 <vfprintf+0x294>
     fba:	28 e0       	ldi	r18, 0x08	; 8
     fbc:	30 e0       	ldi	r19, 0x00	; 0
     fbe:	05 c0       	rjmp	.+10     	; 0xfca <vfprintf+0x298>
     fc0:	20 e1       	ldi	r18, 0x10	; 16
     fc2:	30 e0       	ldi	r19, 0x00	; 0
     fc4:	02 c0       	rjmp	.+4      	; 0xfca <vfprintf+0x298>
     fc6:	20 e1       	ldi	r18, 0x10	; 16
     fc8:	32 e0       	ldi	r19, 0x02	; 2
     fca:	f8 01       	movw	r30, r16
     fcc:	b7 fe       	sbrs	r11, 7
     fce:	07 c0       	rjmp	.+14     	; 0xfde <vfprintf+0x2ac>
     fd0:	60 81       	ld	r22, Z
     fd2:	71 81       	ldd	r23, Z+1	; 0x01
     fd4:	82 81       	ldd	r24, Z+2	; 0x02
     fd6:	93 81       	ldd	r25, Z+3	; 0x03
     fd8:	0c 5f       	subi	r16, 0xFC	; 252
     fda:	1f 4f       	sbci	r17, 0xFF	; 255
     fdc:	06 c0       	rjmp	.+12     	; 0xfea <vfprintf+0x2b8>
     fde:	60 81       	ld	r22, Z
     fe0:	71 81       	ldd	r23, Z+1	; 0x01
     fe2:	80 e0       	ldi	r24, 0x00	; 0
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	0e 5f       	subi	r16, 0xFE	; 254
     fe8:	1f 4f       	sbci	r17, 0xFF	; 255
     fea:	a3 01       	movw	r20, r6
     fec:	24 d4       	rcall	.+2120   	; 0x1836 <__ultoa_invert>
     fee:	88 2e       	mov	r8, r24
     ff0:	86 18       	sub	r8, r6
     ff2:	fb 2d       	mov	r31, r11
     ff4:	ff 77       	andi	r31, 0x7F	; 127
     ff6:	3f 2e       	mov	r3, r31
     ff8:	36 fe       	sbrs	r3, 6
     ffa:	0d c0       	rjmp	.+26     	; 0x1016 <__DATA_REGION_LENGTH__+0x16>
     ffc:	23 2d       	mov	r18, r3
     ffe:	2e 7f       	andi	r18, 0xFE	; 254
    1000:	a2 2e       	mov	r10, r18
    1002:	89 14       	cp	r8, r9
    1004:	58 f4       	brcc	.+22     	; 0x101c <__DATA_REGION_LENGTH__+0x1c>
    1006:	34 fe       	sbrs	r3, 4
    1008:	0b c0       	rjmp	.+22     	; 0x1020 <__DATA_REGION_LENGTH__+0x20>
    100a:	32 fc       	sbrc	r3, 2
    100c:	09 c0       	rjmp	.+18     	; 0x1020 <__DATA_REGION_LENGTH__+0x20>
    100e:	83 2d       	mov	r24, r3
    1010:	8e 7e       	andi	r24, 0xEE	; 238
    1012:	a8 2e       	mov	r10, r24
    1014:	05 c0       	rjmp	.+10     	; 0x1020 <__DATA_REGION_LENGTH__+0x20>
    1016:	b8 2c       	mov	r11, r8
    1018:	a3 2c       	mov	r10, r3
    101a:	03 c0       	rjmp	.+6      	; 0x1022 <__DATA_REGION_LENGTH__+0x22>
    101c:	b8 2c       	mov	r11, r8
    101e:	01 c0       	rjmp	.+2      	; 0x1022 <__DATA_REGION_LENGTH__+0x22>
    1020:	b9 2c       	mov	r11, r9
    1022:	a4 fe       	sbrs	r10, 4
    1024:	0f c0       	rjmp	.+30     	; 0x1044 <__DATA_REGION_LENGTH__+0x44>
    1026:	fe 01       	movw	r30, r28
    1028:	e8 0d       	add	r30, r8
    102a:	f1 1d       	adc	r31, r1
    102c:	80 81       	ld	r24, Z
    102e:	80 33       	cpi	r24, 0x30	; 48
    1030:	21 f4       	brne	.+8      	; 0x103a <__DATA_REGION_LENGTH__+0x3a>
    1032:	9a 2d       	mov	r25, r10
    1034:	99 7e       	andi	r25, 0xE9	; 233
    1036:	a9 2e       	mov	r10, r25
    1038:	09 c0       	rjmp	.+18     	; 0x104c <__DATA_REGION_LENGTH__+0x4c>
    103a:	a2 fe       	sbrs	r10, 2
    103c:	06 c0       	rjmp	.+12     	; 0x104a <__DATA_REGION_LENGTH__+0x4a>
    103e:	b3 94       	inc	r11
    1040:	b3 94       	inc	r11
    1042:	04 c0       	rjmp	.+8      	; 0x104c <__DATA_REGION_LENGTH__+0x4c>
    1044:	8a 2d       	mov	r24, r10
    1046:	86 78       	andi	r24, 0x86	; 134
    1048:	09 f0       	breq	.+2      	; 0x104c <__DATA_REGION_LENGTH__+0x4c>
    104a:	b3 94       	inc	r11
    104c:	a3 fc       	sbrc	r10, 3
    104e:	10 c0       	rjmp	.+32     	; 0x1070 <__DATA_REGION_LENGTH__+0x70>
    1050:	a0 fe       	sbrs	r10, 0
    1052:	06 c0       	rjmp	.+12     	; 0x1060 <__DATA_REGION_LENGTH__+0x60>
    1054:	b2 14       	cp	r11, r2
    1056:	80 f4       	brcc	.+32     	; 0x1078 <__DATA_REGION_LENGTH__+0x78>
    1058:	28 0c       	add	r2, r8
    105a:	92 2c       	mov	r9, r2
    105c:	9b 18       	sub	r9, r11
    105e:	0d c0       	rjmp	.+26     	; 0x107a <__DATA_REGION_LENGTH__+0x7a>
    1060:	b2 14       	cp	r11, r2
    1062:	58 f4       	brcc	.+22     	; 0x107a <__DATA_REGION_LENGTH__+0x7a>
    1064:	b6 01       	movw	r22, r12
    1066:	80 e2       	ldi	r24, 0x20	; 32
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	90 d3       	rcall	.+1824   	; 0x178c <fputc>
    106c:	b3 94       	inc	r11
    106e:	f8 cf       	rjmp	.-16     	; 0x1060 <__DATA_REGION_LENGTH__+0x60>
    1070:	b2 14       	cp	r11, r2
    1072:	18 f4       	brcc	.+6      	; 0x107a <__DATA_REGION_LENGTH__+0x7a>
    1074:	2b 18       	sub	r2, r11
    1076:	02 c0       	rjmp	.+4      	; 0x107c <__DATA_REGION_LENGTH__+0x7c>
    1078:	98 2c       	mov	r9, r8
    107a:	21 2c       	mov	r2, r1
    107c:	a4 fe       	sbrs	r10, 4
    107e:	0f c0       	rjmp	.+30     	; 0x109e <__DATA_REGION_LENGTH__+0x9e>
    1080:	b6 01       	movw	r22, r12
    1082:	80 e3       	ldi	r24, 0x30	; 48
    1084:	90 e0       	ldi	r25, 0x00	; 0
    1086:	82 d3       	rcall	.+1796   	; 0x178c <fputc>
    1088:	a2 fe       	sbrs	r10, 2
    108a:	16 c0       	rjmp	.+44     	; 0x10b8 <__DATA_REGION_LENGTH__+0xb8>
    108c:	a1 fc       	sbrc	r10, 1
    108e:	03 c0       	rjmp	.+6      	; 0x1096 <__DATA_REGION_LENGTH__+0x96>
    1090:	88 e7       	ldi	r24, 0x78	; 120
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	02 c0       	rjmp	.+4      	; 0x109a <__DATA_REGION_LENGTH__+0x9a>
    1096:	88 e5       	ldi	r24, 0x58	; 88
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	b6 01       	movw	r22, r12
    109c:	0c c0       	rjmp	.+24     	; 0x10b6 <__DATA_REGION_LENGTH__+0xb6>
    109e:	8a 2d       	mov	r24, r10
    10a0:	86 78       	andi	r24, 0x86	; 134
    10a2:	51 f0       	breq	.+20     	; 0x10b8 <__DATA_REGION_LENGTH__+0xb8>
    10a4:	a1 fe       	sbrs	r10, 1
    10a6:	02 c0       	rjmp	.+4      	; 0x10ac <__DATA_REGION_LENGTH__+0xac>
    10a8:	8b e2       	ldi	r24, 0x2B	; 43
    10aa:	01 c0       	rjmp	.+2      	; 0x10ae <__DATA_REGION_LENGTH__+0xae>
    10ac:	80 e2       	ldi	r24, 0x20	; 32
    10ae:	a7 fc       	sbrc	r10, 7
    10b0:	8d e2       	ldi	r24, 0x2D	; 45
    10b2:	b6 01       	movw	r22, r12
    10b4:	90 e0       	ldi	r25, 0x00	; 0
    10b6:	6a d3       	rcall	.+1748   	; 0x178c <fputc>
    10b8:	89 14       	cp	r8, r9
    10ba:	30 f4       	brcc	.+12     	; 0x10c8 <__DATA_REGION_LENGTH__+0xc8>
    10bc:	b6 01       	movw	r22, r12
    10be:	80 e3       	ldi	r24, 0x30	; 48
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	64 d3       	rcall	.+1736   	; 0x178c <fputc>
    10c4:	9a 94       	dec	r9
    10c6:	f8 cf       	rjmp	.-16     	; 0x10b8 <__DATA_REGION_LENGTH__+0xb8>
    10c8:	8a 94       	dec	r8
    10ca:	f3 01       	movw	r30, r6
    10cc:	e8 0d       	add	r30, r8
    10ce:	f1 1d       	adc	r31, r1
    10d0:	80 81       	ld	r24, Z
    10d2:	b6 01       	movw	r22, r12
    10d4:	90 e0       	ldi	r25, 0x00	; 0
    10d6:	5a d3       	rcall	.+1716   	; 0x178c <fputc>
    10d8:	81 10       	cpse	r8, r1
    10da:	f6 cf       	rjmp	.-20     	; 0x10c8 <__DATA_REGION_LENGTH__+0xc8>
    10dc:	22 20       	and	r2, r2
    10de:	09 f4       	brne	.+2      	; 0x10e2 <__DATA_REGION_LENGTH__+0xe2>
    10e0:	4e ce       	rjmp	.-868    	; 0xd7e <vfprintf+0x4c>
    10e2:	b6 01       	movw	r22, r12
    10e4:	80 e2       	ldi	r24, 0x20	; 32
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	51 d3       	rcall	.+1698   	; 0x178c <fputc>
    10ea:	2a 94       	dec	r2
    10ec:	f7 cf       	rjmp	.-18     	; 0x10dc <__DATA_REGION_LENGTH__+0xdc>
    10ee:	f6 01       	movw	r30, r12
    10f0:	86 81       	ldd	r24, Z+6	; 0x06
    10f2:	97 81       	ldd	r25, Z+7	; 0x07
    10f4:	02 c0       	rjmp	.+4      	; 0x10fa <__DATA_REGION_LENGTH__+0xfa>
    10f6:	8f ef       	ldi	r24, 0xFF	; 255
    10f8:	9f ef       	ldi	r25, 0xFF	; 255
    10fa:	2b 96       	adiw	r28, 0x0b	; 11
    10fc:	0f b6       	in	r0, 0x3f	; 63
    10fe:	f8 94       	cli
    1100:	de bf       	out	0x3e, r29	; 62
    1102:	0f be       	out	0x3f, r0	; 63
    1104:	cd bf       	out	0x3d, r28	; 61
    1106:	df 91       	pop	r29
    1108:	cf 91       	pop	r28
    110a:	1f 91       	pop	r17
    110c:	0f 91       	pop	r16
    110e:	ff 90       	pop	r15
    1110:	ef 90       	pop	r14
    1112:	df 90       	pop	r13
    1114:	cf 90       	pop	r12
    1116:	bf 90       	pop	r11
    1118:	af 90       	pop	r10
    111a:	9f 90       	pop	r9
    111c:	8f 90       	pop	r8
    111e:	7f 90       	pop	r7
    1120:	6f 90       	pop	r6
    1122:	5f 90       	pop	r5
    1124:	4f 90       	pop	r4
    1126:	3f 90       	pop	r3
    1128:	2f 90       	pop	r2
    112a:	08 95       	ret

0000112c <putval>:
    112c:	20 fd       	sbrc	r18, 0
    112e:	09 c0       	rjmp	.+18     	; 0x1142 <putval+0x16>
    1130:	fc 01       	movw	r30, r24
    1132:	23 fd       	sbrc	r18, 3
    1134:	05 c0       	rjmp	.+10     	; 0x1140 <putval+0x14>
    1136:	22 ff       	sbrs	r18, 2
    1138:	02 c0       	rjmp	.+4      	; 0x113e <putval+0x12>
    113a:	73 83       	std	Z+3, r23	; 0x03
    113c:	62 83       	std	Z+2, r22	; 0x02
    113e:	51 83       	std	Z+1, r21	; 0x01
    1140:	40 83       	st	Z, r20
    1142:	08 95       	ret

00001144 <mulacc>:
    1144:	44 fd       	sbrc	r20, 4
    1146:	17 c0       	rjmp	.+46     	; 0x1176 <mulacc+0x32>
    1148:	46 fd       	sbrc	r20, 6
    114a:	17 c0       	rjmp	.+46     	; 0x117a <mulacc+0x36>
    114c:	ab 01       	movw	r20, r22
    114e:	bc 01       	movw	r22, r24
    1150:	da 01       	movw	r26, r20
    1152:	fb 01       	movw	r30, r22
    1154:	aa 0f       	add	r26, r26
    1156:	bb 1f       	adc	r27, r27
    1158:	ee 1f       	adc	r30, r30
    115a:	ff 1f       	adc	r31, r31
    115c:	10 94       	com	r1
    115e:	d1 f7       	brne	.-12     	; 0x1154 <mulacc+0x10>
    1160:	4a 0f       	add	r20, r26
    1162:	5b 1f       	adc	r21, r27
    1164:	6e 1f       	adc	r22, r30
    1166:	7f 1f       	adc	r23, r31
    1168:	cb 01       	movw	r24, r22
    116a:	ba 01       	movw	r22, r20
    116c:	66 0f       	add	r22, r22
    116e:	77 1f       	adc	r23, r23
    1170:	88 1f       	adc	r24, r24
    1172:	99 1f       	adc	r25, r25
    1174:	09 c0       	rjmp	.+18     	; 0x1188 <mulacc+0x44>
    1176:	33 e0       	ldi	r19, 0x03	; 3
    1178:	01 c0       	rjmp	.+2      	; 0x117c <mulacc+0x38>
    117a:	34 e0       	ldi	r19, 0x04	; 4
    117c:	66 0f       	add	r22, r22
    117e:	77 1f       	adc	r23, r23
    1180:	88 1f       	adc	r24, r24
    1182:	99 1f       	adc	r25, r25
    1184:	31 50       	subi	r19, 0x01	; 1
    1186:	d1 f7       	brne	.-12     	; 0x117c <mulacc+0x38>
    1188:	62 0f       	add	r22, r18
    118a:	71 1d       	adc	r23, r1
    118c:	81 1d       	adc	r24, r1
    118e:	91 1d       	adc	r25, r1
    1190:	08 95       	ret

00001192 <skip_spaces>:
    1192:	0f 93       	push	r16
    1194:	1f 93       	push	r17
    1196:	cf 93       	push	r28
    1198:	df 93       	push	r29
    119a:	8c 01       	movw	r16, r24
    119c:	c8 01       	movw	r24, r16
    119e:	b8 d2       	rcall	.+1392   	; 0x1710 <fgetc>
    11a0:	ec 01       	movw	r28, r24
    11a2:	97 fd       	sbrc	r25, 7
    11a4:	06 c0       	rjmp	.+12     	; 0x11b2 <skip_spaces+0x20>
    11a6:	8b d2       	rcall	.+1302   	; 0x16be <isspace>
    11a8:	89 2b       	or	r24, r25
    11aa:	c1 f7       	brne	.-16     	; 0x119c <skip_spaces+0xa>
    11ac:	b8 01       	movw	r22, r16
    11ae:	ce 01       	movw	r24, r28
    11b0:	29 d3       	rcall	.+1618   	; 0x1804 <ungetc>
    11b2:	ce 01       	movw	r24, r28
    11b4:	df 91       	pop	r29
    11b6:	cf 91       	pop	r28
    11b8:	1f 91       	pop	r17
    11ba:	0f 91       	pop	r16
    11bc:	08 95       	ret

000011be <conv_int>:
    11be:	8f 92       	push	r8
    11c0:	9f 92       	push	r9
    11c2:	af 92       	push	r10
    11c4:	bf 92       	push	r11
    11c6:	ef 92       	push	r14
    11c8:	ff 92       	push	r15
    11ca:	0f 93       	push	r16
    11cc:	1f 93       	push	r17
    11ce:	cf 93       	push	r28
    11d0:	df 93       	push	r29
    11d2:	8c 01       	movw	r16, r24
    11d4:	d6 2f       	mov	r29, r22
    11d6:	7a 01       	movw	r14, r20
    11d8:	b2 2e       	mov	r11, r18
    11da:	9a d2       	rcall	.+1332   	; 0x1710 <fgetc>
    11dc:	9c 01       	movw	r18, r24
    11de:	33 27       	eor	r19, r19
    11e0:	2b 32       	cpi	r18, 0x2B	; 43
    11e2:	31 05       	cpc	r19, r1
    11e4:	31 f0       	breq	.+12     	; 0x11f2 <conv_int+0x34>
    11e6:	2d 32       	cpi	r18, 0x2D	; 45
    11e8:	31 05       	cpc	r19, r1
    11ea:	59 f4       	brne	.+22     	; 0x1202 <conv_int+0x44>
    11ec:	8b 2d       	mov	r24, r11
    11ee:	80 68       	ori	r24, 0x80	; 128
    11f0:	b8 2e       	mov	r11, r24
    11f2:	d1 50       	subi	r29, 0x01	; 1
    11f4:	11 f4       	brne	.+4      	; 0x11fa <conv_int+0x3c>
    11f6:	80 e0       	ldi	r24, 0x00	; 0
    11f8:	61 c0       	rjmp	.+194    	; 0x12bc <conv_int+0xfe>
    11fa:	c8 01       	movw	r24, r16
    11fc:	89 d2       	rcall	.+1298   	; 0x1710 <fgetc>
    11fe:	97 fd       	sbrc	r25, 7
    1200:	fa cf       	rjmp	.-12     	; 0x11f6 <conv_int+0x38>
    1202:	cb 2d       	mov	r28, r11
    1204:	cd 7f       	andi	r28, 0xFD	; 253
    1206:	2b 2d       	mov	r18, r11
    1208:	20 73       	andi	r18, 0x30	; 48
    120a:	f9 f4       	brne	.+62     	; 0x124a <conv_int+0x8c>
    120c:	80 33       	cpi	r24, 0x30	; 48
    120e:	e9 f4       	brne	.+58     	; 0x124a <conv_int+0x8c>
    1210:	aa 24       	eor	r10, r10
    1212:	aa 94       	dec	r10
    1214:	ad 0e       	add	r10, r29
    1216:	09 f4       	brne	.+2      	; 0x121a <conv_int+0x5c>
    1218:	3e c0       	rjmp	.+124    	; 0x1296 <conv_int+0xd8>
    121a:	c8 01       	movw	r24, r16
    121c:	79 d2       	rcall	.+1266   	; 0x1710 <fgetc>
    121e:	97 fd       	sbrc	r25, 7
    1220:	3a c0       	rjmp	.+116    	; 0x1296 <conv_int+0xd8>
    1222:	9c 01       	movw	r18, r24
    1224:	2f 7d       	andi	r18, 0xDF	; 223
    1226:	33 27       	eor	r19, r19
    1228:	28 35       	cpi	r18, 0x58	; 88
    122a:	31 05       	cpc	r19, r1
    122c:	41 f4       	brne	.+16     	; 0x123e <conv_int+0x80>
    122e:	c2 64       	ori	r28, 0x42	; 66
    1230:	d2 50       	subi	r29, 0x02	; 2
    1232:	89 f1       	breq	.+98     	; 0x1296 <conv_int+0xd8>
    1234:	c8 01       	movw	r24, r16
    1236:	6c d2       	rcall	.+1240   	; 0x1710 <fgetc>
    1238:	97 ff       	sbrs	r25, 7
    123a:	07 c0       	rjmp	.+14     	; 0x124a <conv_int+0x8c>
    123c:	2c c0       	rjmp	.+88     	; 0x1296 <conv_int+0xd8>
    123e:	b6 fe       	sbrs	r11, 6
    1240:	02 c0       	rjmp	.+4      	; 0x1246 <conv_int+0x88>
    1242:	c2 60       	ori	r28, 0x02	; 2
    1244:	01 c0       	rjmp	.+2      	; 0x1248 <conv_int+0x8a>
    1246:	c2 61       	ori	r28, 0x12	; 18
    1248:	da 2d       	mov	r29, r10
    124a:	81 2c       	mov	r8, r1
    124c:	91 2c       	mov	r9, r1
    124e:	54 01       	movw	r10, r8
    1250:	20 ed       	ldi	r18, 0xD0	; 208
    1252:	28 0f       	add	r18, r24
    1254:	28 30       	cpi	r18, 0x08	; 8
    1256:	78 f0       	brcs	.+30     	; 0x1276 <conv_int+0xb8>
    1258:	c4 ff       	sbrs	r28, 4
    125a:	03 c0       	rjmp	.+6      	; 0x1262 <conv_int+0xa4>
    125c:	b8 01       	movw	r22, r16
    125e:	d2 d2       	rcall	.+1444   	; 0x1804 <ungetc>
    1260:	17 c0       	rjmp	.+46     	; 0x1290 <conv_int+0xd2>
    1262:	2a 30       	cpi	r18, 0x0A	; 10
    1264:	40 f0       	brcs	.+16     	; 0x1276 <conv_int+0xb8>
    1266:	c6 ff       	sbrs	r28, 6
    1268:	f9 cf       	rjmp	.-14     	; 0x125c <conv_int+0x9e>
    126a:	2f 7d       	andi	r18, 0xDF	; 223
    126c:	3f ee       	ldi	r19, 0xEF	; 239
    126e:	32 0f       	add	r19, r18
    1270:	36 30       	cpi	r19, 0x06	; 6
    1272:	a0 f7       	brcc	.-24     	; 0x125c <conv_int+0x9e>
    1274:	27 50       	subi	r18, 0x07	; 7
    1276:	4c 2f       	mov	r20, r28
    1278:	c5 01       	movw	r24, r10
    127a:	b4 01       	movw	r22, r8
    127c:	63 df       	rcall	.-314    	; 0x1144 <mulacc>
    127e:	4b 01       	movw	r8, r22
    1280:	5c 01       	movw	r10, r24
    1282:	c2 60       	ori	r28, 0x02	; 2
    1284:	d1 50       	subi	r29, 0x01	; 1
    1286:	51 f0       	breq	.+20     	; 0x129c <conv_int+0xde>
    1288:	c8 01       	movw	r24, r16
    128a:	42 d2       	rcall	.+1156   	; 0x1710 <fgetc>
    128c:	97 ff       	sbrs	r25, 7
    128e:	e0 cf       	rjmp	.-64     	; 0x1250 <conv_int+0x92>
    1290:	c1 fd       	sbrc	r28, 1
    1292:	04 c0       	rjmp	.+8      	; 0x129c <conv_int+0xde>
    1294:	b0 cf       	rjmp	.-160    	; 0x11f6 <conv_int+0x38>
    1296:	81 2c       	mov	r8, r1
    1298:	91 2c       	mov	r9, r1
    129a:	54 01       	movw	r10, r8
    129c:	c7 ff       	sbrs	r28, 7
    129e:	08 c0       	rjmp	.+16     	; 0x12b0 <conv_int+0xf2>
    12a0:	b0 94       	com	r11
    12a2:	a0 94       	com	r10
    12a4:	90 94       	com	r9
    12a6:	80 94       	com	r8
    12a8:	81 1c       	adc	r8, r1
    12aa:	91 1c       	adc	r9, r1
    12ac:	a1 1c       	adc	r10, r1
    12ae:	b1 1c       	adc	r11, r1
    12b0:	2c 2f       	mov	r18, r28
    12b2:	b5 01       	movw	r22, r10
    12b4:	a4 01       	movw	r20, r8
    12b6:	c7 01       	movw	r24, r14
    12b8:	39 df       	rcall	.-398    	; 0x112c <putval>
    12ba:	81 e0       	ldi	r24, 0x01	; 1
    12bc:	df 91       	pop	r29
    12be:	cf 91       	pop	r28
    12c0:	1f 91       	pop	r17
    12c2:	0f 91       	pop	r16
    12c4:	ff 90       	pop	r15
    12c6:	ef 90       	pop	r14
    12c8:	bf 90       	pop	r11
    12ca:	af 90       	pop	r10
    12cc:	9f 90       	pop	r9
    12ce:	8f 90       	pop	r8
    12d0:	08 95       	ret

000012d2 <conv_brk>:
    12d2:	5f 92       	push	r5
    12d4:	6f 92       	push	r6
    12d6:	7f 92       	push	r7
    12d8:	8f 92       	push	r8
    12da:	9f 92       	push	r9
    12dc:	af 92       	push	r10
    12de:	bf 92       	push	r11
    12e0:	cf 92       	push	r12
    12e2:	df 92       	push	r13
    12e4:	ef 92       	push	r14
    12e6:	ff 92       	push	r15
    12e8:	0f 93       	push	r16
    12ea:	1f 93       	push	r17
    12ec:	cf 93       	push	r28
    12ee:	df 93       	push	r29
    12f0:	cd b7       	in	r28, 0x3d	; 61
    12f2:	de b7       	in	r29, 0x3e	; 62
    12f4:	a0 97       	sbiw	r28, 0x20	; 32
    12f6:	0f b6       	in	r0, 0x3f	; 63
    12f8:	f8 94       	cli
    12fa:	de bf       	out	0x3e, r29	; 62
    12fc:	0f be       	out	0x3f, r0	; 63
    12fe:	cd bf       	out	0x3d, r28	; 61
    1300:	5c 01       	movw	r10, r24
    1302:	96 2e       	mov	r9, r22
    1304:	7a 01       	movw	r14, r20
    1306:	f9 01       	movw	r30, r18
    1308:	8e 01       	movw	r16, r28
    130a:	0f 5f       	subi	r16, 0xFF	; 255
    130c:	1f 4f       	sbci	r17, 0xFF	; 255
    130e:	68 01       	movw	r12, r16
    1310:	80 e2       	ldi	r24, 0x20	; 32
    1312:	d8 01       	movw	r26, r16
    1314:	1d 92       	st	X+, r1
    1316:	8a 95       	dec	r24
    1318:	e9 f7       	brne	.-6      	; 0x1314 <conv_brk+0x42>
    131a:	d5 01       	movw	r26, r10
    131c:	13 96       	adiw	r26, 0x03	; 3
    131e:	8c 90       	ld	r8, X
    1320:	80 e0       	ldi	r24, 0x00	; 0
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	61 2c       	mov	r6, r1
    1326:	71 2c       	mov	r7, r1
    1328:	30 e0       	ldi	r19, 0x00	; 0
    132a:	61 e0       	ldi	r22, 0x01	; 1
    132c:	70 e0       	ldi	r23, 0x00	; 0
    132e:	83 fc       	sbrc	r8, 3
    1330:	25 91       	lpm	r18, Z+
    1332:	83 fe       	sbrs	r8, 3
    1334:	21 91       	ld	r18, Z+
    1336:	8f 01       	movw	r16, r30
    1338:	52 2e       	mov	r5, r18
    133a:	21 11       	cpse	r18, r1
    133c:	03 c0       	rjmp	.+6      	; 0x1344 <conv_brk+0x72>
    133e:	80 e0       	ldi	r24, 0x00	; 0
    1340:	90 e0       	ldi	r25, 0x00	; 0
    1342:	90 c0       	rjmp	.+288    	; 0x1464 <conv_brk+0x192>
    1344:	2e 35       	cpi	r18, 0x5E	; 94
    1346:	11 f4       	brne	.+4      	; 0x134c <conv_brk+0x7a>
    1348:	00 97       	sbiw	r24, 0x00	; 0
    134a:	51 f1       	breq	.+84     	; 0x13a0 <conv_brk+0xce>
    134c:	43 2f       	mov	r20, r19
    134e:	50 e0       	ldi	r21, 0x00	; 0
    1350:	48 17       	cp	r20, r24
    1352:	59 07       	cpc	r21, r25
    1354:	3c f4       	brge	.+14     	; 0x1364 <conv_brk+0x92>
    1356:	2d 35       	cpi	r18, 0x5D	; 93
    1358:	59 f1       	breq	.+86     	; 0x13b0 <conv_brk+0xde>
    135a:	2d 32       	cpi	r18, 0x2D	; 45
    135c:	19 f4       	brne	.+6      	; 0x1364 <conv_brk+0x92>
    135e:	77 20       	and	r7, r7
    1360:	09 f1       	breq	.+66     	; 0x13a4 <conv_brk+0xd2>
    1362:	03 c0       	rjmp	.+6      	; 0x136a <conv_brk+0x98>
    1364:	77 20       	and	r7, r7
    1366:	09 f4       	brne	.+2      	; 0x136a <conv_brk+0x98>
    1368:	68 c0       	rjmp	.+208    	; 0x143a <conv_brk+0x168>
    136a:	45 2d       	mov	r20, r5
    136c:	46 95       	lsr	r20
    136e:	46 95       	lsr	r20
    1370:	46 95       	lsr	r20
    1372:	d6 01       	movw	r26, r12
    1374:	a4 0f       	add	r26, r20
    1376:	b1 1d       	adc	r27, r1
    1378:	45 2d       	mov	r20, r5
    137a:	47 70       	andi	r20, 0x07	; 7
    137c:	8b 01       	movw	r16, r22
    137e:	02 c0       	rjmp	.+4      	; 0x1384 <conv_brk+0xb2>
    1380:	00 0f       	add	r16, r16
    1382:	11 1f       	adc	r17, r17
    1384:	4a 95       	dec	r20
    1386:	e2 f7       	brpl	.-8      	; 0x1380 <conv_brk+0xae>
    1388:	a8 01       	movw	r20, r16
    138a:	5c 91       	ld	r21, X
    138c:	45 2b       	or	r20, r21
    138e:	4c 93       	st	X, r20
    1390:	65 14       	cp	r6, r5
    1392:	59 f0       	breq	.+22     	; 0x13aa <conv_brk+0xd8>
    1394:	56 14       	cp	r5, r6
    1396:	10 f4       	brcc	.+4      	; 0x139c <conv_brk+0xca>
    1398:	53 94       	inc	r5
    139a:	e7 cf       	rjmp	.-50     	; 0x136a <conv_brk+0x98>
    139c:	5a 94       	dec	r5
    139e:	e5 cf       	rjmp	.-54     	; 0x136a <conv_brk+0x98>
    13a0:	31 e0       	ldi	r19, 0x01	; 1
    13a2:	04 c0       	rjmp	.+8      	; 0x13ac <conv_brk+0xda>
    13a4:	77 24       	eor	r7, r7
    13a6:	73 94       	inc	r7
    13a8:	01 c0       	rjmp	.+2      	; 0x13ac <conv_brk+0xda>
    13aa:	71 2c       	mov	r7, r1
    13ac:	01 96       	adiw	r24, 0x01	; 1
    13ae:	bf cf       	rjmp	.-130    	; 0x132e <conv_brk+0x5c>
    13b0:	77 20       	and	r7, r7
    13b2:	19 f0       	breq	.+6      	; 0x13ba <conv_brk+0xe8>
    13b4:	8e 81       	ldd	r24, Y+6	; 0x06
    13b6:	80 62       	ori	r24, 0x20	; 32
    13b8:	8e 83       	std	Y+6, r24	; 0x06
    13ba:	31 11       	cpse	r19, r1
    13bc:	03 c0       	rjmp	.+6      	; 0x13c4 <conv_brk+0xf2>
    13be:	88 24       	eor	r8, r8
    13c0:	83 94       	inc	r8
    13c2:	17 c0       	rjmp	.+46     	; 0x13f2 <conv_brk+0x120>
    13c4:	f6 01       	movw	r30, r12
    13c6:	9e 01       	movw	r18, r28
    13c8:	2f 5d       	subi	r18, 0xDF	; 223
    13ca:	3f 4f       	sbci	r19, 0xFF	; 255
    13cc:	80 81       	ld	r24, Z
    13ce:	80 95       	com	r24
    13d0:	81 93       	st	Z+, r24
    13d2:	2e 17       	cp	r18, r30
    13d4:	3f 07       	cpc	r19, r31
    13d6:	d1 f7       	brne	.-12     	; 0x13cc <conv_brk+0xfa>
    13d8:	f2 cf       	rjmp	.-28     	; 0x13be <conv_brk+0xec>
    13da:	e1 14       	cp	r14, r1
    13dc:	f1 04       	cpc	r15, r1
    13de:	29 f0       	breq	.+10     	; 0x13ea <conv_brk+0x118>
    13e0:	d7 01       	movw	r26, r14
    13e2:	8c 93       	st	X, r24
    13e4:	f7 01       	movw	r30, r14
    13e6:	31 96       	adiw	r30, 0x01	; 1
    13e8:	7f 01       	movw	r14, r30
    13ea:	9a 94       	dec	r9
    13ec:	81 2c       	mov	r8, r1
    13ee:	99 20       	and	r9, r9
    13f0:	e9 f0       	breq	.+58     	; 0x142c <conv_brk+0x15a>
    13f2:	c5 01       	movw	r24, r10
    13f4:	8d d1       	rcall	.+794    	; 0x1710 <fgetc>
    13f6:	97 fd       	sbrc	r25, 7
    13f8:	17 c0       	rjmp	.+46     	; 0x1428 <conv_brk+0x156>
    13fa:	fc 01       	movw	r30, r24
    13fc:	ff 27       	eor	r31, r31
    13fe:	23 e0       	ldi	r18, 0x03	; 3
    1400:	f5 95       	asr	r31
    1402:	e7 95       	ror	r30
    1404:	2a 95       	dec	r18
    1406:	e1 f7       	brne	.-8      	; 0x1400 <conv_brk+0x12e>
    1408:	ec 0d       	add	r30, r12
    140a:	fd 1d       	adc	r31, r13
    140c:	20 81       	ld	r18, Z
    140e:	30 e0       	ldi	r19, 0x00	; 0
    1410:	ac 01       	movw	r20, r24
    1412:	47 70       	andi	r20, 0x07	; 7
    1414:	55 27       	eor	r21, r21
    1416:	02 c0       	rjmp	.+4      	; 0x141c <conv_brk+0x14a>
    1418:	35 95       	asr	r19
    141a:	27 95       	ror	r18
    141c:	4a 95       	dec	r20
    141e:	e2 f7       	brpl	.-8      	; 0x1418 <conv_brk+0x146>
    1420:	20 fd       	sbrc	r18, 0
    1422:	db cf       	rjmp	.-74     	; 0x13da <conv_brk+0x108>
    1424:	b5 01       	movw	r22, r10
    1426:	ee d1       	rcall	.+988    	; 0x1804 <ungetc>
    1428:	81 10       	cpse	r8, r1
    142a:	89 cf       	rjmp	.-238    	; 0x133e <conv_brk+0x6c>
    142c:	e1 14       	cp	r14, r1
    142e:	f1 04       	cpc	r15, r1
    1430:	11 f0       	breq	.+4      	; 0x1436 <conv_brk+0x164>
    1432:	d7 01       	movw	r26, r14
    1434:	1c 92       	st	X, r1
    1436:	c8 01       	movw	r24, r16
    1438:	15 c0       	rjmp	.+42     	; 0x1464 <conv_brk+0x192>
    143a:	42 2f       	mov	r20, r18
    143c:	46 95       	lsr	r20
    143e:	46 95       	lsr	r20
    1440:	46 95       	lsr	r20
    1442:	d6 01       	movw	r26, r12
    1444:	a4 0f       	add	r26, r20
    1446:	b1 1d       	adc	r27, r1
    1448:	42 2f       	mov	r20, r18
    144a:	47 70       	andi	r20, 0x07	; 7
    144c:	8b 01       	movw	r16, r22
    144e:	02 c0       	rjmp	.+4      	; 0x1454 <conv_brk+0x182>
    1450:	00 0f       	add	r16, r16
    1452:	11 1f       	adc	r17, r17
    1454:	4a 95       	dec	r20
    1456:	e2 f7       	brpl	.-8      	; 0x1450 <conv_brk+0x17e>
    1458:	a8 01       	movw	r20, r16
    145a:	5c 91       	ld	r21, X
    145c:	45 2b       	or	r20, r21
    145e:	4c 93       	st	X, r20
    1460:	62 2e       	mov	r6, r18
    1462:	a4 cf       	rjmp	.-184    	; 0x13ac <conv_brk+0xda>
    1464:	a0 96       	adiw	r28, 0x20	; 32
    1466:	0f b6       	in	r0, 0x3f	; 63
    1468:	f8 94       	cli
    146a:	de bf       	out	0x3e, r29	; 62
    146c:	0f be       	out	0x3f, r0	; 63
    146e:	cd bf       	out	0x3d, r28	; 61
    1470:	df 91       	pop	r29
    1472:	cf 91       	pop	r28
    1474:	1f 91       	pop	r17
    1476:	0f 91       	pop	r16
    1478:	ff 90       	pop	r15
    147a:	ef 90       	pop	r14
    147c:	df 90       	pop	r13
    147e:	cf 90       	pop	r12
    1480:	bf 90       	pop	r11
    1482:	af 90       	pop	r10
    1484:	9f 90       	pop	r9
    1486:	8f 90       	pop	r8
    1488:	7f 90       	pop	r7
    148a:	6f 90       	pop	r6
    148c:	5f 90       	pop	r5
    148e:	08 95       	ret

00001490 <vfscanf>:
    1490:	5f 92       	push	r5
    1492:	6f 92       	push	r6
    1494:	7f 92       	push	r7
    1496:	8f 92       	push	r8
    1498:	9f 92       	push	r9
    149a:	af 92       	push	r10
    149c:	bf 92       	push	r11
    149e:	cf 92       	push	r12
    14a0:	df 92       	push	r13
    14a2:	ef 92       	push	r14
    14a4:	ff 92       	push	r15
    14a6:	0f 93       	push	r16
    14a8:	1f 93       	push	r17
    14aa:	cf 93       	push	r28
    14ac:	df 93       	push	r29
    14ae:	6c 01       	movw	r12, r24
    14b0:	eb 01       	movw	r28, r22
    14b2:	5a 01       	movw	r10, r20
    14b4:	fc 01       	movw	r30, r24
    14b6:	17 82       	std	Z+7, r1	; 0x07
    14b8:	16 82       	std	Z+6, r1	; 0x06
    14ba:	51 2c       	mov	r5, r1
    14bc:	f6 01       	movw	r30, r12
    14be:	e3 80       	ldd	r14, Z+3	; 0x03
    14c0:	fe 01       	movw	r30, r28
    14c2:	e3 fc       	sbrc	r14, 3
    14c4:	85 91       	lpm	r24, Z+
    14c6:	e3 fe       	sbrs	r14, 3
    14c8:	81 91       	ld	r24, Z+
    14ca:	18 2f       	mov	r17, r24
    14cc:	ef 01       	movw	r28, r30
    14ce:	88 23       	and	r24, r24
    14d0:	09 f4       	brne	.+2      	; 0x14d4 <vfscanf+0x44>
    14d2:	e0 c0       	rjmp	.+448    	; 0x1694 <vfscanf+0x204>
    14d4:	90 e0       	ldi	r25, 0x00	; 0
    14d6:	f3 d0       	rcall	.+486    	; 0x16be <isspace>
    14d8:	89 2b       	or	r24, r25
    14da:	19 f0       	breq	.+6      	; 0x14e2 <vfscanf+0x52>
    14dc:	c6 01       	movw	r24, r12
    14de:	59 de       	rcall	.-846    	; 0x1192 <skip_spaces>
    14e0:	ed cf       	rjmp	.-38     	; 0x14bc <vfscanf+0x2c>
    14e2:	15 32       	cpi	r17, 0x25	; 37
    14e4:	41 f4       	brne	.+16     	; 0x14f6 <vfscanf+0x66>
    14e6:	fe 01       	movw	r30, r28
    14e8:	e3 fc       	sbrc	r14, 3
    14ea:	15 91       	lpm	r17, Z+
    14ec:	e3 fe       	sbrs	r14, 3
    14ee:	11 91       	ld	r17, Z+
    14f0:	ef 01       	movw	r28, r30
    14f2:	15 32       	cpi	r17, 0x25	; 37
    14f4:	71 f4       	brne	.+28     	; 0x1512 <vfscanf+0x82>
    14f6:	c6 01       	movw	r24, r12
    14f8:	0b d1       	rcall	.+534    	; 0x1710 <fgetc>
    14fa:	97 fd       	sbrc	r25, 7
    14fc:	c9 c0       	rjmp	.+402    	; 0x1690 <vfscanf+0x200>
    14fe:	41 2f       	mov	r20, r17
    1500:	50 e0       	ldi	r21, 0x00	; 0
    1502:	9c 01       	movw	r18, r24
    1504:	33 27       	eor	r19, r19
    1506:	24 17       	cp	r18, r20
    1508:	35 07       	cpc	r19, r21
    150a:	c1 f2       	breq	.-80     	; 0x14bc <vfscanf+0x2c>
    150c:	b6 01       	movw	r22, r12
    150e:	7a d1       	rcall	.+756    	; 0x1804 <ungetc>
    1510:	c1 c0       	rjmp	.+386    	; 0x1694 <vfscanf+0x204>
    1512:	1a 32       	cpi	r17, 0x2A	; 42
    1514:	39 f4       	brne	.+14     	; 0x1524 <vfscanf+0x94>
    1516:	e3 fc       	sbrc	r14, 3
    1518:	15 91       	lpm	r17, Z+
    151a:	e3 fe       	sbrs	r14, 3
    151c:	11 91       	ld	r17, Z+
    151e:	ef 01       	movw	r28, r30
    1520:	01 e0       	ldi	r16, 0x01	; 1
    1522:	01 c0       	rjmp	.+2      	; 0x1526 <vfscanf+0x96>
    1524:	00 e0       	ldi	r16, 0x00	; 0
    1526:	f1 2c       	mov	r15, r1
    1528:	20 ed       	ldi	r18, 0xD0	; 208
    152a:	21 0f       	add	r18, r17
    152c:	2a 30       	cpi	r18, 0x0A	; 10
    152e:	78 f4       	brcc	.+30     	; 0x154e <vfscanf+0xbe>
    1530:	02 60       	ori	r16, 0x02	; 2
    1532:	6f 2d       	mov	r22, r15
    1534:	70 e0       	ldi	r23, 0x00	; 0
    1536:	80 e0       	ldi	r24, 0x00	; 0
    1538:	90 e0       	ldi	r25, 0x00	; 0
    153a:	40 e2       	ldi	r20, 0x20	; 32
    153c:	03 de       	rcall	.-1018   	; 0x1144 <mulacc>
    153e:	f6 2e       	mov	r15, r22
    1540:	fe 01       	movw	r30, r28
    1542:	e3 fc       	sbrc	r14, 3
    1544:	15 91       	lpm	r17, Z+
    1546:	e3 fe       	sbrs	r14, 3
    1548:	11 91       	ld	r17, Z+
    154a:	ef 01       	movw	r28, r30
    154c:	ed cf       	rjmp	.-38     	; 0x1528 <vfscanf+0x98>
    154e:	01 ff       	sbrs	r16, 1
    1550:	03 c0       	rjmp	.+6      	; 0x1558 <vfscanf+0xc8>
    1552:	f1 10       	cpse	r15, r1
    1554:	03 c0       	rjmp	.+6      	; 0x155c <vfscanf+0xcc>
    1556:	9e c0       	rjmp	.+316    	; 0x1694 <vfscanf+0x204>
    1558:	ff 24       	eor	r15, r15
    155a:	fa 94       	dec	r15
    155c:	18 36       	cpi	r17, 0x68	; 104
    155e:	19 f0       	breq	.+6      	; 0x1566 <vfscanf+0xd6>
    1560:	1c 36       	cpi	r17, 0x6C	; 108
    1562:	51 f0       	breq	.+20     	; 0x1578 <vfscanf+0xe8>
    1564:	10 c0       	rjmp	.+32     	; 0x1586 <vfscanf+0xf6>
    1566:	fe 01       	movw	r30, r28
    1568:	e3 fc       	sbrc	r14, 3
    156a:	15 91       	lpm	r17, Z+
    156c:	e3 fe       	sbrs	r14, 3
    156e:	11 91       	ld	r17, Z+
    1570:	ef 01       	movw	r28, r30
    1572:	18 36       	cpi	r17, 0x68	; 104
    1574:	41 f4       	brne	.+16     	; 0x1586 <vfscanf+0xf6>
    1576:	08 60       	ori	r16, 0x08	; 8
    1578:	04 60       	ori	r16, 0x04	; 4
    157a:	fe 01       	movw	r30, r28
    157c:	e3 fc       	sbrc	r14, 3
    157e:	15 91       	lpm	r17, Z+
    1580:	e3 fe       	sbrs	r14, 3
    1582:	11 91       	ld	r17, Z+
    1584:	ef 01       	movw	r28, r30
    1586:	11 23       	and	r17, r17
    1588:	09 f4       	brne	.+2      	; 0x158c <vfscanf+0xfc>
    158a:	84 c0       	rjmp	.+264    	; 0x1694 <vfscanf+0x204>
    158c:	61 2f       	mov	r22, r17
    158e:	70 e0       	ldi	r23, 0x00	; 0
    1590:	8c e8       	ldi	r24, 0x8C	; 140
    1592:	90 e0       	ldi	r25, 0x00	; 0
    1594:	9c d0       	rcall	.+312    	; 0x16ce <strchr_P>
    1596:	89 2b       	or	r24, r25
    1598:	09 f4       	brne	.+2      	; 0x159c <vfscanf+0x10c>
    159a:	7c c0       	rjmp	.+248    	; 0x1694 <vfscanf+0x204>
    159c:	00 fd       	sbrc	r16, 0
    159e:	07 c0       	rjmp	.+14     	; 0x15ae <vfscanf+0x11e>
    15a0:	f5 01       	movw	r30, r10
    15a2:	80 80       	ld	r8, Z
    15a4:	91 80       	ldd	r9, Z+1	; 0x01
    15a6:	c5 01       	movw	r24, r10
    15a8:	02 96       	adiw	r24, 0x02	; 2
    15aa:	5c 01       	movw	r10, r24
    15ac:	02 c0       	rjmp	.+4      	; 0x15b2 <vfscanf+0x122>
    15ae:	81 2c       	mov	r8, r1
    15b0:	91 2c       	mov	r9, r1
    15b2:	1e 36       	cpi	r17, 0x6E	; 110
    15b4:	49 f4       	brne	.+18     	; 0x15c8 <vfscanf+0x138>
    15b6:	f6 01       	movw	r30, r12
    15b8:	46 81       	ldd	r20, Z+6	; 0x06
    15ba:	57 81       	ldd	r21, Z+7	; 0x07
    15bc:	60 e0       	ldi	r22, 0x00	; 0
    15be:	70 e0       	ldi	r23, 0x00	; 0
    15c0:	20 2f       	mov	r18, r16
    15c2:	c4 01       	movw	r24, r8
    15c4:	b3 dd       	rcall	.-1178   	; 0x112c <putval>
    15c6:	7a cf       	rjmp	.-268    	; 0x14bc <vfscanf+0x2c>
    15c8:	13 36       	cpi	r17, 0x63	; 99
    15ca:	a1 f4       	brne	.+40     	; 0x15f4 <vfscanf+0x164>
    15cc:	01 fd       	sbrc	r16, 1
    15ce:	02 c0       	rjmp	.+4      	; 0x15d4 <vfscanf+0x144>
    15d0:	ff 24       	eor	r15, r15
    15d2:	f3 94       	inc	r15
    15d4:	c6 01       	movw	r24, r12
    15d6:	9c d0       	rcall	.+312    	; 0x1710 <fgetc>
    15d8:	97 fd       	sbrc	r25, 7
    15da:	5a c0       	rjmp	.+180    	; 0x1690 <vfscanf+0x200>
    15dc:	81 14       	cp	r8, r1
    15de:	91 04       	cpc	r9, r1
    15e0:	29 f0       	breq	.+10     	; 0x15ec <vfscanf+0x15c>
    15e2:	f4 01       	movw	r30, r8
    15e4:	80 83       	st	Z, r24
    15e6:	c4 01       	movw	r24, r8
    15e8:	01 96       	adiw	r24, 0x01	; 1
    15ea:	4c 01       	movw	r8, r24
    15ec:	fa 94       	dec	r15
    15ee:	f1 10       	cpse	r15, r1
    15f0:	f1 cf       	rjmp	.-30     	; 0x15d4 <vfscanf+0x144>
    15f2:	4a c0       	rjmp	.+148    	; 0x1688 <vfscanf+0x1f8>
    15f4:	1b 35       	cpi	r17, 0x5B	; 91
    15f6:	51 f4       	brne	.+20     	; 0x160c <vfscanf+0x17c>
    15f8:	9e 01       	movw	r18, r28
    15fa:	a4 01       	movw	r20, r8
    15fc:	6f 2d       	mov	r22, r15
    15fe:	c6 01       	movw	r24, r12
    1600:	68 de       	rcall	.-816    	; 0x12d2 <conv_brk>
    1602:	ec 01       	movw	r28, r24
    1604:	89 2b       	or	r24, r25
    1606:	09 f0       	breq	.+2      	; 0x160a <vfscanf+0x17a>
    1608:	3f c0       	rjmp	.+126    	; 0x1688 <vfscanf+0x1f8>
    160a:	39 c0       	rjmp	.+114    	; 0x167e <vfscanf+0x1ee>
    160c:	c6 01       	movw	r24, r12
    160e:	c1 dd       	rcall	.-1150   	; 0x1192 <skip_spaces>
    1610:	97 fd       	sbrc	r25, 7
    1612:	3e c0       	rjmp	.+124    	; 0x1690 <vfscanf+0x200>
    1614:	1f 36       	cpi	r17, 0x6F	; 111
    1616:	49 f1       	breq	.+82     	; 0x166a <vfscanf+0x1da>
    1618:	28 f4       	brcc	.+10     	; 0x1624 <vfscanf+0x194>
    161a:	14 36       	cpi	r17, 0x64	; 100
    161c:	21 f1       	breq	.+72     	; 0x1666 <vfscanf+0x1d6>
    161e:	19 36       	cpi	r17, 0x69	; 105
    1620:	39 f1       	breq	.+78     	; 0x1670 <vfscanf+0x1e0>
    1622:	25 c0       	rjmp	.+74     	; 0x166e <vfscanf+0x1de>
    1624:	13 37       	cpi	r17, 0x73	; 115
    1626:	71 f0       	breq	.+28     	; 0x1644 <vfscanf+0x1b4>
    1628:	15 37       	cpi	r17, 0x75	; 117
    162a:	e9 f0       	breq	.+58     	; 0x1666 <vfscanf+0x1d6>
    162c:	20 c0       	rjmp	.+64     	; 0x166e <vfscanf+0x1de>
    162e:	81 14       	cp	r8, r1
    1630:	91 04       	cpc	r9, r1
    1632:	29 f0       	breq	.+10     	; 0x163e <vfscanf+0x1ae>
    1634:	f4 01       	movw	r30, r8
    1636:	60 82       	st	Z, r6
    1638:	c4 01       	movw	r24, r8
    163a:	01 96       	adiw	r24, 0x01	; 1
    163c:	4c 01       	movw	r8, r24
    163e:	fa 94       	dec	r15
    1640:	ff 20       	and	r15, r15
    1642:	59 f0       	breq	.+22     	; 0x165a <vfscanf+0x1ca>
    1644:	c6 01       	movw	r24, r12
    1646:	64 d0       	rcall	.+200    	; 0x1710 <fgetc>
    1648:	3c 01       	movw	r6, r24
    164a:	97 fd       	sbrc	r25, 7
    164c:	06 c0       	rjmp	.+12     	; 0x165a <vfscanf+0x1ca>
    164e:	37 d0       	rcall	.+110    	; 0x16be <isspace>
    1650:	89 2b       	or	r24, r25
    1652:	69 f3       	breq	.-38     	; 0x162e <vfscanf+0x19e>
    1654:	b6 01       	movw	r22, r12
    1656:	c3 01       	movw	r24, r6
    1658:	d5 d0       	rcall	.+426    	; 0x1804 <ungetc>
    165a:	81 14       	cp	r8, r1
    165c:	91 04       	cpc	r9, r1
    165e:	a1 f0       	breq	.+40     	; 0x1688 <vfscanf+0x1f8>
    1660:	f4 01       	movw	r30, r8
    1662:	10 82       	st	Z, r1
    1664:	11 c0       	rjmp	.+34     	; 0x1688 <vfscanf+0x1f8>
    1666:	00 62       	ori	r16, 0x20	; 32
    1668:	03 c0       	rjmp	.+6      	; 0x1670 <vfscanf+0x1e0>
    166a:	00 61       	ori	r16, 0x10	; 16
    166c:	01 c0       	rjmp	.+2      	; 0x1670 <vfscanf+0x1e0>
    166e:	00 64       	ori	r16, 0x40	; 64
    1670:	20 2f       	mov	r18, r16
    1672:	a4 01       	movw	r20, r8
    1674:	6f 2d       	mov	r22, r15
    1676:	c6 01       	movw	r24, r12
    1678:	a2 dd       	rcall	.-1212   	; 0x11be <conv_int>
    167a:	81 11       	cpse	r24, r1
    167c:	05 c0       	rjmp	.+10     	; 0x1688 <vfscanf+0x1f8>
    167e:	f6 01       	movw	r30, r12
    1680:	83 81       	ldd	r24, Z+3	; 0x03
    1682:	80 73       	andi	r24, 0x30	; 48
    1684:	29 f4       	brne	.+10     	; 0x1690 <vfscanf+0x200>
    1686:	06 c0       	rjmp	.+12     	; 0x1694 <vfscanf+0x204>
    1688:	00 fd       	sbrc	r16, 0
    168a:	18 cf       	rjmp	.-464    	; 0x14bc <vfscanf+0x2c>
    168c:	53 94       	inc	r5
    168e:	16 cf       	rjmp	.-468    	; 0x14bc <vfscanf+0x2c>
    1690:	55 20       	and	r5, r5
    1692:	19 f0       	breq	.+6      	; 0x169a <vfscanf+0x20a>
    1694:	85 2d       	mov	r24, r5
    1696:	90 e0       	ldi	r25, 0x00	; 0
    1698:	02 c0       	rjmp	.+4      	; 0x169e <vfscanf+0x20e>
    169a:	8f ef       	ldi	r24, 0xFF	; 255
    169c:	9f ef       	ldi	r25, 0xFF	; 255
    169e:	df 91       	pop	r29
    16a0:	cf 91       	pop	r28
    16a2:	1f 91       	pop	r17
    16a4:	0f 91       	pop	r16
    16a6:	ff 90       	pop	r15
    16a8:	ef 90       	pop	r14
    16aa:	df 90       	pop	r13
    16ac:	cf 90       	pop	r12
    16ae:	bf 90       	pop	r11
    16b0:	af 90       	pop	r10
    16b2:	9f 90       	pop	r9
    16b4:	8f 90       	pop	r8
    16b6:	7f 90       	pop	r7
    16b8:	6f 90       	pop	r6
    16ba:	5f 90       	pop	r5
    16bc:	08 95       	ret

000016be <isspace>:
    16be:	91 11       	cpse	r25, r1
    16c0:	18 c1       	rjmp	.+560    	; 0x18f2 <__ctype_isfalse>
    16c2:	80 32       	cpi	r24, 0x20	; 32
    16c4:	19 f0       	breq	.+6      	; 0x16cc <isspace+0xe>
    16c6:	89 50       	subi	r24, 0x09	; 9
    16c8:	85 50       	subi	r24, 0x05	; 5
    16ca:	d0 f7       	brcc	.-12     	; 0x16c0 <isspace+0x2>
    16cc:	08 95       	ret

000016ce <strchr_P>:
    16ce:	fc 01       	movw	r30, r24
    16d0:	05 90       	lpm	r0, Z+
    16d2:	06 16       	cp	r0, r22
    16d4:	21 f0       	breq	.+8      	; 0x16de <strchr_P+0x10>
    16d6:	00 20       	and	r0, r0
    16d8:	d9 f7       	brne	.-10     	; 0x16d0 <strchr_P+0x2>
    16da:	c0 01       	movw	r24, r0
    16dc:	08 95       	ret
    16de:	31 97       	sbiw	r30, 0x01	; 1
    16e0:	cf 01       	movw	r24, r30
    16e2:	08 95       	ret

000016e4 <strnlen_P>:
    16e4:	fc 01       	movw	r30, r24
    16e6:	05 90       	lpm	r0, Z+
    16e8:	61 50       	subi	r22, 0x01	; 1
    16ea:	70 40       	sbci	r23, 0x00	; 0
    16ec:	01 10       	cpse	r0, r1
    16ee:	d8 f7       	brcc	.-10     	; 0x16e6 <strnlen_P+0x2>
    16f0:	80 95       	com	r24
    16f2:	90 95       	com	r25
    16f4:	8e 0f       	add	r24, r30
    16f6:	9f 1f       	adc	r25, r31
    16f8:	08 95       	ret

000016fa <strnlen>:
    16fa:	fc 01       	movw	r30, r24
    16fc:	61 50       	subi	r22, 0x01	; 1
    16fe:	70 40       	sbci	r23, 0x00	; 0
    1700:	01 90       	ld	r0, Z+
    1702:	01 10       	cpse	r0, r1
    1704:	d8 f7       	brcc	.-10     	; 0x16fc <strnlen+0x2>
    1706:	80 95       	com	r24
    1708:	90 95       	com	r25
    170a:	8e 0f       	add	r24, r30
    170c:	9f 1f       	adc	r25, r31
    170e:	08 95       	ret

00001710 <fgetc>:
    1710:	cf 93       	push	r28
    1712:	df 93       	push	r29
    1714:	ec 01       	movw	r28, r24
    1716:	2b 81       	ldd	r18, Y+3	; 0x03
    1718:	20 ff       	sbrs	r18, 0
    171a:	33 c0       	rjmp	.+102    	; 0x1782 <fgetc+0x72>
    171c:	26 ff       	sbrs	r18, 6
    171e:	0a c0       	rjmp	.+20     	; 0x1734 <fgetc+0x24>
    1720:	2f 7b       	andi	r18, 0xBF	; 191
    1722:	2b 83       	std	Y+3, r18	; 0x03
    1724:	8e 81       	ldd	r24, Y+6	; 0x06
    1726:	9f 81       	ldd	r25, Y+7	; 0x07
    1728:	01 96       	adiw	r24, 0x01	; 1
    172a:	9f 83       	std	Y+7, r25	; 0x07
    172c:	8e 83       	std	Y+6, r24	; 0x06
    172e:	8a 81       	ldd	r24, Y+2	; 0x02
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	29 c0       	rjmp	.+82     	; 0x1786 <fgetc+0x76>
    1734:	22 ff       	sbrs	r18, 2
    1736:	0f c0       	rjmp	.+30     	; 0x1756 <fgetc+0x46>
    1738:	e8 81       	ld	r30, Y
    173a:	f9 81       	ldd	r31, Y+1	; 0x01
    173c:	80 81       	ld	r24, Z
    173e:	08 2e       	mov	r0, r24
    1740:	00 0c       	add	r0, r0
    1742:	99 0b       	sbc	r25, r25
    1744:	00 97       	sbiw	r24, 0x00	; 0
    1746:	19 f4       	brne	.+6      	; 0x174e <fgetc+0x3e>
    1748:	20 62       	ori	r18, 0x20	; 32
    174a:	2b 83       	std	Y+3, r18	; 0x03
    174c:	1a c0       	rjmp	.+52     	; 0x1782 <fgetc+0x72>
    174e:	31 96       	adiw	r30, 0x01	; 1
    1750:	f9 83       	std	Y+1, r31	; 0x01
    1752:	e8 83       	st	Y, r30
    1754:	0e c0       	rjmp	.+28     	; 0x1772 <fgetc+0x62>
    1756:	ea 85       	ldd	r30, Y+10	; 0x0a
    1758:	fb 85       	ldd	r31, Y+11	; 0x0b
    175a:	09 95       	icall
    175c:	97 ff       	sbrs	r25, 7
    175e:	09 c0       	rjmp	.+18     	; 0x1772 <fgetc+0x62>
    1760:	2b 81       	ldd	r18, Y+3	; 0x03
    1762:	01 96       	adiw	r24, 0x01	; 1
    1764:	11 f0       	breq	.+4      	; 0x176a <fgetc+0x5a>
    1766:	80 e2       	ldi	r24, 0x20	; 32
    1768:	01 c0       	rjmp	.+2      	; 0x176c <fgetc+0x5c>
    176a:	80 e1       	ldi	r24, 0x10	; 16
    176c:	82 2b       	or	r24, r18
    176e:	8b 83       	std	Y+3, r24	; 0x03
    1770:	08 c0       	rjmp	.+16     	; 0x1782 <fgetc+0x72>
    1772:	2e 81       	ldd	r18, Y+6	; 0x06
    1774:	3f 81       	ldd	r19, Y+7	; 0x07
    1776:	2f 5f       	subi	r18, 0xFF	; 255
    1778:	3f 4f       	sbci	r19, 0xFF	; 255
    177a:	3f 83       	std	Y+7, r19	; 0x07
    177c:	2e 83       	std	Y+6, r18	; 0x06
    177e:	99 27       	eor	r25, r25
    1780:	02 c0       	rjmp	.+4      	; 0x1786 <fgetc+0x76>
    1782:	8f ef       	ldi	r24, 0xFF	; 255
    1784:	9f ef       	ldi	r25, 0xFF	; 255
    1786:	df 91       	pop	r29
    1788:	cf 91       	pop	r28
    178a:	08 95       	ret

0000178c <fputc>:
    178c:	0f 93       	push	r16
    178e:	1f 93       	push	r17
    1790:	cf 93       	push	r28
    1792:	df 93       	push	r29
    1794:	fb 01       	movw	r30, r22
    1796:	23 81       	ldd	r18, Z+3	; 0x03
    1798:	21 fd       	sbrc	r18, 1
    179a:	03 c0       	rjmp	.+6      	; 0x17a2 <fputc+0x16>
    179c:	8f ef       	ldi	r24, 0xFF	; 255
    179e:	9f ef       	ldi	r25, 0xFF	; 255
    17a0:	2c c0       	rjmp	.+88     	; 0x17fa <fputc+0x6e>
    17a2:	22 ff       	sbrs	r18, 2
    17a4:	16 c0       	rjmp	.+44     	; 0x17d2 <fputc+0x46>
    17a6:	46 81       	ldd	r20, Z+6	; 0x06
    17a8:	57 81       	ldd	r21, Z+7	; 0x07
    17aa:	24 81       	ldd	r18, Z+4	; 0x04
    17ac:	35 81       	ldd	r19, Z+5	; 0x05
    17ae:	42 17       	cp	r20, r18
    17b0:	53 07       	cpc	r21, r19
    17b2:	44 f4       	brge	.+16     	; 0x17c4 <fputc+0x38>
    17b4:	a0 81       	ld	r26, Z
    17b6:	b1 81       	ldd	r27, Z+1	; 0x01
    17b8:	9d 01       	movw	r18, r26
    17ba:	2f 5f       	subi	r18, 0xFF	; 255
    17bc:	3f 4f       	sbci	r19, 0xFF	; 255
    17be:	31 83       	std	Z+1, r19	; 0x01
    17c0:	20 83       	st	Z, r18
    17c2:	8c 93       	st	X, r24
    17c4:	26 81       	ldd	r18, Z+6	; 0x06
    17c6:	37 81       	ldd	r19, Z+7	; 0x07
    17c8:	2f 5f       	subi	r18, 0xFF	; 255
    17ca:	3f 4f       	sbci	r19, 0xFF	; 255
    17cc:	37 83       	std	Z+7, r19	; 0x07
    17ce:	26 83       	std	Z+6, r18	; 0x06
    17d0:	14 c0       	rjmp	.+40     	; 0x17fa <fputc+0x6e>
    17d2:	8b 01       	movw	r16, r22
    17d4:	ec 01       	movw	r28, r24
    17d6:	fb 01       	movw	r30, r22
    17d8:	00 84       	ldd	r0, Z+8	; 0x08
    17da:	f1 85       	ldd	r31, Z+9	; 0x09
    17dc:	e0 2d       	mov	r30, r0
    17de:	09 95       	icall
    17e0:	89 2b       	or	r24, r25
    17e2:	e1 f6       	brne	.-72     	; 0x179c <fputc+0x10>
    17e4:	d8 01       	movw	r26, r16
    17e6:	16 96       	adiw	r26, 0x06	; 6
    17e8:	8d 91       	ld	r24, X+
    17ea:	9c 91       	ld	r25, X
    17ec:	17 97       	sbiw	r26, 0x07	; 7
    17ee:	01 96       	adiw	r24, 0x01	; 1
    17f0:	17 96       	adiw	r26, 0x07	; 7
    17f2:	9c 93       	st	X, r25
    17f4:	8e 93       	st	-X, r24
    17f6:	16 97       	sbiw	r26, 0x06	; 6
    17f8:	ce 01       	movw	r24, r28
    17fa:	df 91       	pop	r29
    17fc:	cf 91       	pop	r28
    17fe:	1f 91       	pop	r17
    1800:	0f 91       	pop	r16
    1802:	08 95       	ret

00001804 <ungetc>:
    1804:	fb 01       	movw	r30, r22
    1806:	23 81       	ldd	r18, Z+3	; 0x03
    1808:	20 ff       	sbrs	r18, 0
    180a:	12 c0       	rjmp	.+36     	; 0x1830 <ungetc+0x2c>
    180c:	26 fd       	sbrc	r18, 6
    180e:	10 c0       	rjmp	.+32     	; 0x1830 <ungetc+0x2c>
    1810:	8f 3f       	cpi	r24, 0xFF	; 255
    1812:	3f ef       	ldi	r19, 0xFF	; 255
    1814:	93 07       	cpc	r25, r19
    1816:	61 f0       	breq	.+24     	; 0x1830 <ungetc+0x2c>
    1818:	82 83       	std	Z+2, r24	; 0x02
    181a:	2f 7d       	andi	r18, 0xDF	; 223
    181c:	20 64       	ori	r18, 0x40	; 64
    181e:	23 83       	std	Z+3, r18	; 0x03
    1820:	26 81       	ldd	r18, Z+6	; 0x06
    1822:	37 81       	ldd	r19, Z+7	; 0x07
    1824:	21 50       	subi	r18, 0x01	; 1
    1826:	31 09       	sbc	r19, r1
    1828:	37 83       	std	Z+7, r19	; 0x07
    182a:	26 83       	std	Z+6, r18	; 0x06
    182c:	99 27       	eor	r25, r25
    182e:	08 95       	ret
    1830:	8f ef       	ldi	r24, 0xFF	; 255
    1832:	9f ef       	ldi	r25, 0xFF	; 255
    1834:	08 95       	ret

00001836 <__ultoa_invert>:
    1836:	fa 01       	movw	r30, r20
    1838:	aa 27       	eor	r26, r26
    183a:	28 30       	cpi	r18, 0x08	; 8
    183c:	51 f1       	breq	.+84     	; 0x1892 <__ultoa_invert+0x5c>
    183e:	20 31       	cpi	r18, 0x10	; 16
    1840:	81 f1       	breq	.+96     	; 0x18a2 <__ultoa_invert+0x6c>
    1842:	e8 94       	clt
    1844:	6f 93       	push	r22
    1846:	6e 7f       	andi	r22, 0xFE	; 254
    1848:	6e 5f       	subi	r22, 0xFE	; 254
    184a:	7f 4f       	sbci	r23, 0xFF	; 255
    184c:	8f 4f       	sbci	r24, 0xFF	; 255
    184e:	9f 4f       	sbci	r25, 0xFF	; 255
    1850:	af 4f       	sbci	r26, 0xFF	; 255
    1852:	b1 e0       	ldi	r27, 0x01	; 1
    1854:	3e d0       	rcall	.+124    	; 0x18d2 <__ultoa_invert+0x9c>
    1856:	b4 e0       	ldi	r27, 0x04	; 4
    1858:	3c d0       	rcall	.+120    	; 0x18d2 <__ultoa_invert+0x9c>
    185a:	67 0f       	add	r22, r23
    185c:	78 1f       	adc	r23, r24
    185e:	89 1f       	adc	r24, r25
    1860:	9a 1f       	adc	r25, r26
    1862:	a1 1d       	adc	r26, r1
    1864:	68 0f       	add	r22, r24
    1866:	79 1f       	adc	r23, r25
    1868:	8a 1f       	adc	r24, r26
    186a:	91 1d       	adc	r25, r1
    186c:	a1 1d       	adc	r26, r1
    186e:	6a 0f       	add	r22, r26
    1870:	71 1d       	adc	r23, r1
    1872:	81 1d       	adc	r24, r1
    1874:	91 1d       	adc	r25, r1
    1876:	a1 1d       	adc	r26, r1
    1878:	20 d0       	rcall	.+64     	; 0x18ba <__ultoa_invert+0x84>
    187a:	09 f4       	brne	.+2      	; 0x187e <__ultoa_invert+0x48>
    187c:	68 94       	set
    187e:	3f 91       	pop	r19
    1880:	2a e0       	ldi	r18, 0x0A	; 10
    1882:	26 9f       	mul	r18, r22
    1884:	11 24       	eor	r1, r1
    1886:	30 19       	sub	r19, r0
    1888:	30 5d       	subi	r19, 0xD0	; 208
    188a:	31 93       	st	Z+, r19
    188c:	de f6       	brtc	.-74     	; 0x1844 <__ultoa_invert+0xe>
    188e:	cf 01       	movw	r24, r30
    1890:	08 95       	ret
    1892:	46 2f       	mov	r20, r22
    1894:	47 70       	andi	r20, 0x07	; 7
    1896:	40 5d       	subi	r20, 0xD0	; 208
    1898:	41 93       	st	Z+, r20
    189a:	b3 e0       	ldi	r27, 0x03	; 3
    189c:	0f d0       	rcall	.+30     	; 0x18bc <__ultoa_invert+0x86>
    189e:	c9 f7       	brne	.-14     	; 0x1892 <__ultoa_invert+0x5c>
    18a0:	f6 cf       	rjmp	.-20     	; 0x188e <__ultoa_invert+0x58>
    18a2:	46 2f       	mov	r20, r22
    18a4:	4f 70       	andi	r20, 0x0F	; 15
    18a6:	40 5d       	subi	r20, 0xD0	; 208
    18a8:	4a 33       	cpi	r20, 0x3A	; 58
    18aa:	18 f0       	brcs	.+6      	; 0x18b2 <__ultoa_invert+0x7c>
    18ac:	49 5d       	subi	r20, 0xD9	; 217
    18ae:	31 fd       	sbrc	r19, 1
    18b0:	40 52       	subi	r20, 0x20	; 32
    18b2:	41 93       	st	Z+, r20
    18b4:	02 d0       	rcall	.+4      	; 0x18ba <__ultoa_invert+0x84>
    18b6:	a9 f7       	brne	.-22     	; 0x18a2 <__ultoa_invert+0x6c>
    18b8:	ea cf       	rjmp	.-44     	; 0x188e <__ultoa_invert+0x58>
    18ba:	b4 e0       	ldi	r27, 0x04	; 4
    18bc:	a6 95       	lsr	r26
    18be:	97 95       	ror	r25
    18c0:	87 95       	ror	r24
    18c2:	77 95       	ror	r23
    18c4:	67 95       	ror	r22
    18c6:	ba 95       	dec	r27
    18c8:	c9 f7       	brne	.-14     	; 0x18bc <__ultoa_invert+0x86>
    18ca:	00 97       	sbiw	r24, 0x00	; 0
    18cc:	61 05       	cpc	r22, r1
    18ce:	71 05       	cpc	r23, r1
    18d0:	08 95       	ret
    18d2:	9b 01       	movw	r18, r22
    18d4:	ac 01       	movw	r20, r24
    18d6:	0a 2e       	mov	r0, r26
    18d8:	06 94       	lsr	r0
    18da:	57 95       	ror	r21
    18dc:	47 95       	ror	r20
    18de:	37 95       	ror	r19
    18e0:	27 95       	ror	r18
    18e2:	ba 95       	dec	r27
    18e4:	c9 f7       	brne	.-14     	; 0x18d8 <__ultoa_invert+0xa2>
    18e6:	62 0f       	add	r22, r18
    18e8:	73 1f       	adc	r23, r19
    18ea:	84 1f       	adc	r24, r20
    18ec:	95 1f       	adc	r25, r21
    18ee:	a0 1d       	adc	r26, r0
    18f0:	08 95       	ret

000018f2 <__ctype_isfalse>:
    18f2:	99 27       	eor	r25, r25
    18f4:	88 27       	eor	r24, r24

000018f6 <__ctype_istrue>:
    18f6:	08 95       	ret

000018f8 <_exit>:
    18f8:	f8 94       	cli

000018fa <__stop_program>:
    18fa:	ff cf       	rjmp	.-2      	; 0x18fa <__stop_program>
